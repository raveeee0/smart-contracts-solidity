{
	"id": "fd0feacd750d364605f0d89f139fce71",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"ballotV3.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.4.0;\n\n\ncontract Ballot {\n\n    struct Voter {\n        uint weight;\n        bool voted;\n        uint8 vote;\n    }\n    struct Proposal {\n        uint voteCount;\n    }\n    enum Stage {Init,Reg, Vote, Done} // Init is 0,reg is 1,vote is 2,done is 3\n    Stage public stage = Stage.Init;\n    \n    address chairperson;  \n    mapping(address => Voter) voters;\n    Proposal[] proposals; \n\n    \n    uint startTime;   \n\n\n    modifier validStage(Stage reqStage){\n        require(stage == reqStage);\n        _;\n    }\n\n\n    \n    constructor(uint8 _numProposals) public {\n        chairperson = msg.sender;\n        voters[chairperson].weight = 2; \n        proposals.length = _numProposals;\n        stage = Stage.Reg;\n        startTime = now;\n\n        return;\n    }\n\n    \n    \n    function register(address toVoter) public validStage(Stage.Reg) {\n\n        if (msg.sender != chairperson || voters[toVoter].voted) \n            return;\n\n        voters[toVoter].weight = 1;\n        voters[toVoter].voted = false;\n        if (now > (startTime + 10 seconds)) {\n            stage = Stage.Vote; \n            startTime = now;\n        }\n\n        return;  \n    }\n\n\n    function vote(uint8 toProposal) public validStage(Stage.Vote){\n        Voter storage sender = voters[msg.sender];\n        if (sender.voted || toProposal >= proposals.length) \n            return;\n\n        sender.voted = true;\n        sender.vote = toProposal;   \n        proposals[toProposal].voteCount += sender.weight;\n\n        if (now > (startTime + 60 seconds)) \n           stage = Stage.Done;     \n        \n        return;\n    }\n\n\n    function winningProposal() public validStage(Stage.Done) view returns (uint8 _winningProposal)  {\n        uint256 winningVoteCount = 0;\n\n        for (uint8 prop = 0; prop < proposals.length; prop++)\n            if (proposals[prop].voteCount > winningVoteCount) {\n                winningVoteCount = proposals[prop].voteCount;\n                _winningProposal = prop;\n            }\n        \n        return;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ballotV3.sol": {
				"Ballot": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "toVoter",
									"type": "address"
								}
							],
							"name": "register",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "winningProposal",
							"outputs": [
								{
									"name": "_winningProposal",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "toProposal",
									"type": "uint8"
								}
							],
							"name": "vote",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "stage",
							"outputs": [
								{
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_numProposals",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"ballotV3.sol\":58:2042  contract Ballot {... */\n  mstore(0x40, 0x80)\n    /* \"ballotV3.sol\":320:330  Stage.Init */\n  0x0\n    /* \"ballotV3.sol\":299:330  Stage public stage = Stage.Init */\n  dup1\n  exp(0x100, 0x0)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x3\n  dup2\n  gt\n  iszero\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ballotV3.sol\":565:798  constructor(uint8 _numProposals) public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_2:\n    /* \"ballotV3.sol\":565:798  constructor(uint8 _numProposals) public {... */\n  pop\n  mload(0x40)\n  0x20\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  dup1\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"ballotV3.sol\":629:639  msg.sender */\n  caller\n    /* \"ballotV3.sol\":615:626  chairperson */\n  0x0\n  0x1\n    /* \"ballotV3.sol\":615:639  chairperson = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ballotV3.sol\":678:679  2 */\n  0x2\n    /* \"ballotV3.sol\":649:655  voters */\n  0x1\n    /* \"ballotV3.sol\":649:668  voters[chairperson] */\n  0x0\n    /* \"ballotV3.sol\":656:667  chairperson */\n  dup1\n  0x1\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"ballotV3.sol\":649:668  voters[chairperson] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n    /* \"ballotV3.sol\":649:675  voters[chairperson].weight */\n  0x0\n  add\n    /* \"ballotV3.sol\":649:679  voters[chairperson].weight = 2 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"ballotV3.sol\":709:722  _numProposals */\n  dup1\n    /* \"ballotV3.sol\":690:722  proposals.length = _numProposals */\n  0xff\n  and\n    /* \"ballotV3.sol\":690:699  proposals */\n  0x2\n    /* \"ballotV3.sol\":690:722  proposals.length = _numProposals */\n  dup2\n  tag_5\n  swap2\n  swap1\n  jump\t// in(tag_6)\ntag_5:\n  pop\n    /* \"ballotV3.sol\":740:749  Stage.Reg */\n  0x1\n    /* \"ballotV3.sol\":732:737  stage */\n  0x0\n  dup1\n    /* \"ballotV3.sol\":732:749  stage = Stage.Reg */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x3\n  dup2\n  gt\n  iszero\n  tag_7\n  jumpi\n  invalid\ntag_7:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"ballotV3.sol\":771:774  now */\n  timestamp\n    /* \"ballotV3.sol\":759:768  startTime */\n  0x3\n    /* \"ballotV3.sol\":759:774  startTime = now */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"ballotV3.sol\":565:798  constructor(uint8 _numProposals) public {... */\n  pop\n    /* \"ballotV3.sol\":58:2042  contract Ballot {... */\n  jump(tag_8)\ntag_6:\n  dup2\n  sload\n  dup2\n  dup4\n  sstore\n  dup2\n  dup2\n  gt\n  iszero\n  tag_9\n  jumpi\n  dup2\n  dup4\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap2\n  dup3\n  add\n  swap2\n  add\n  tag_10\n  swap2\n  swap1\n  jump\t// in(tag_11)\ntag_10:\ntag_9:\n  pop\n  pop\n  pop\n  jump\t// out\ntag_11:\n  tag_12\n  swap2\n  swap1\ntag_13:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_14\n  jumpi\n  0x0\n  dup1\n  dup3\n  add\n  0x0\n  swap1\n  sstore\n  pop\n  0x1\n  add\n  jump(tag_13)\ntag_14:\n  pop\n  swap1\n  jump\ntag_12:\n  swap1\n  jump\t// out\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"ballotV3.sol\":58:2042  contract Ballot {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x4420e486\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x609ff1bd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb3f98adc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc040e6b8\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"ballotV3.sol\":814:1184  function register(address toVoter) public validStage(Stage.Reg) {... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_6:\n        /* \"ballotV3.sol\":814:1184  function register(address toVoter) public validStage(Stage.Reg) {... */\n      pop\n      tag_7\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_8)\n    tag_7:\n      stop\n        /* \"ballotV3.sol\":1630:2040  function winningProposal() public validStage(Stage.Done) view returns (uint8 _winningProposal)  {... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_9:\n        /* \"ballotV3.sol\":1630:2040  function winningProposal() public validStage(Stage.Done) view returns (uint8 _winningProposal)  {... */\n      pop\n      tag_10\n      jump(tag_11)\n    tag_10:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ballotV3.sol\":1191:1623  function vote(uint8 toProposal) public validStage(Stage.Vote){... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_12:\n        /* \"ballotV3.sol\":1191:1623  function vote(uint8 toProposal) public validStage(Stage.Vote){... */\n      pop\n      tag_13\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_14)\n    tag_13:\n      stop\n        /* \"ballotV3.sol\":299:330  Stage public stage = Stage.Init */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"ballotV3.sol\":299:330  Stage public stage = Stage.Init */\n      pop\n      tag_16\n      jump(tag_17)\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      0x3\n      dup2\n      gt\n      iszero\n      tag_18\n      jumpi\n      invalid\n    tag_18:\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ballotV3.sol\":814:1184  function register(address toVoter) public validStage(Stage.Reg) {... */\n    tag_8:\n        /* \"ballotV3.sol\":867:876  Stage.Reg */\n      0x1\n        /* \"ballotV3.sol\":526:534  reqStage */\n      dup1\n        /* \"ballotV3.sol\":517:534  stage == reqStage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_20\n      jumpi\n      invalid\n    tag_20:\n        /* \"ballotV3.sol\":517:522  stage */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ballotV3.sol\":517:534  stage == reqStage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_21\n      jumpi\n      invalid\n    tag_21:\n      eq\n        /* \"ballotV3.sol\":509:535  require(stage == reqStage) */\n      iszero\n      iszero\n      tag_22\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_22:\n        /* \"ballotV3.sol\":907:918  chairperson */\n      0x0\n      0x1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ballotV3.sol\":893:918  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ballotV3.sol\":893:903  msg.sender */\n      caller\n        /* \"ballotV3.sol\":893:918  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"ballotV3.sol\":893:943  msg.sender != chairperson || voters[toVoter].voted */\n      dup1\n      tag_24\n      jumpi\n      pop\n        /* \"ballotV3.sol\":922:928  voters */\n      0x1\n        /* \"ballotV3.sol\":922:937  voters[toVoter] */\n      0x0\n        /* \"ballotV3.sol\":929:936  toVoter */\n      dup4\n        /* \"ballotV3.sol\":922:937  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"ballotV3.sol\":922:943  voters[toVoter].voted */\n      0x1\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ballotV3.sol\":893:943  msg.sender != chairperson || voters[toVoter].voted */\n    tag_24:\n        /* \"ballotV3.sol\":889:965  if (msg.sender != chairperson || voters[toVoter].voted) ... */\n      iszero\n      tag_25\n      jumpi\n        /* \"ballotV3.sol\":958:965  return; */\n      jump(tag_23)\n        /* \"ballotV3.sol\":889:965  if (msg.sender != chairperson || voters[toVoter].voted) ... */\n    tag_25:\n        /* \"ballotV3.sol\":1000:1001  1 */\n      0x1\n        /* \"ballotV3.sol\":975:981  voters */\n      dup1\n        /* \"ballotV3.sol\":975:990  voters[toVoter] */\n      0x0\n        /* \"ballotV3.sol\":982:989  toVoter */\n      dup5\n        /* \"ballotV3.sol\":975:990  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"ballotV3.sol\":975:997  voters[toVoter].weight */\n      0x0\n      add\n        /* \"ballotV3.sol\":975:1001  voters[toVoter].weight = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ballotV3.sol\":1035:1040  false */\n      0x0\n        /* \"ballotV3.sol\":1011:1017  voters */\n      0x1\n        /* \"ballotV3.sol\":1011:1026  voters[toVoter] */\n      0x0\n        /* \"ballotV3.sol\":1018:1025  toVoter */\n      dup5\n        /* \"ballotV3.sol\":1011:1026  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"ballotV3.sol\":1011:1032  voters[toVoter].voted */\n      0x1\n      add\n      0x0\n        /* \"ballotV3.sol\":1011:1040  voters[toVoter].voted = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ballotV3.sol\":1073:1083  10 seconds */\n      0xa\n        /* \"ballotV3.sol\":1061:1070  startTime */\n      sload(0x3)\n        /* \"ballotV3.sol\":1061:1083  startTime + 10 seconds */\n      add\n        /* \"ballotV3.sol\":1054:1057  now */\n      timestamp\n        /* \"ballotV3.sol\":1054:1084  now > (startTime + 10 seconds) */\n      gt\n        /* \"ballotV3.sol\":1050:1159  if (now > (startTime + 10 seconds)) {... */\n      iszero\n      tag_26\n      jumpi\n        /* \"ballotV3.sol\":1108:1118  Stage.Vote */\n      0x2\n        /* \"ballotV3.sol\":1100:1105  stage */\n      0x0\n      dup1\n        /* \"ballotV3.sol\":1100:1118  stage = Stage.Vote */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x3\n      dup2\n      gt\n      iszero\n      tag_27\n      jumpi\n      invalid\n    tag_27:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ballotV3.sol\":1145:1148  now */\n      timestamp\n        /* \"ballotV3.sol\":1133:1142  startTime */\n      0x3\n        /* \"ballotV3.sol\":1133:1148  startTime = now */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ballotV3.sol\":1050:1159  if (now > (startTime + 10 seconds)) {... */\n    tag_26:\n        /* \"ballotV3.sol\":545:546  _ */\n    tag_23:\n        /* \"ballotV3.sol\":814:1184  function register(address toVoter) public validStage(Stage.Reg) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ballotV3.sol\":1630:2040  function winningProposal() public validStage(Stage.Done) view returns (uint8 _winningProposal)  {... */\n    tag_11:\n        /* \"ballotV3.sol\":1701:1723  uint8 _winningProposal */\n      0x0\n        /* \"ballotV3.sol\":1736:1760  uint256 winningVoteCount */\n      dup1\n        /* \"ballotV3.sol\":1780:1790  uint8 prop */\n      0x0\n        /* \"ballotV3.sol\":1675:1685  Stage.Done */\n      0x3\n        /* \"ballotV3.sol\":526:534  reqStage */\n      dup1\n        /* \"ballotV3.sol\":517:534  stage == reqStage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_29\n      jumpi\n      invalid\n    tag_29:\n        /* \"ballotV3.sol\":517:522  stage */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ballotV3.sol\":517:534  stage == reqStage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_30\n      jumpi\n      invalid\n    tag_30:\n      eq\n        /* \"ballotV3.sol\":509:535  require(stage == reqStage) */\n      iszero\n      iszero\n      tag_31\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_31:\n        /* \"ballotV3.sol\":1763:1764  0 */\n      0x0\n        /* \"ballotV3.sol\":1736:1764  uint256 winningVoteCount = 0 */\n      swap3\n      pop\n        /* \"ballotV3.sol\":1793:1794  0 */\n      0x0\n        /* \"ballotV3.sol\":1780:1794  uint8 prop = 0 */\n      swap2\n      pop\n        /* \"ballotV3.sol\":1775:2009  for (uint8 prop = 0; prop < proposals.length; prop++)... */\n    tag_33:\n        /* \"ballotV3.sol\":1803:1812  proposals */\n      0x2\n        /* \"ballotV3.sol\":1803:1819  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"ballotV3.sol\":1796:1800  prop */\n      dup3\n        /* \"ballotV3.sol\":1796:1819  prop < proposals.length */\n      0xff\n      and\n      lt\n        /* \"ballotV3.sol\":1775:2009  for (uint8 prop = 0; prop < proposals.length; prop++)... */\n      iszero\n      tag_34\n      jumpi\n        /* \"ballotV3.sol\":1873:1889  winningVoteCount */\n      dup3\n        /* \"ballotV3.sol\":1845:1854  proposals */\n      0x2\n        /* \"ballotV3.sol\":1855:1859  prop */\n      dup4\n        /* \"ballotV3.sol\":1845:1860  proposals[prop] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_36\n      jumpi\n      invalid\n    tag_36:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n        /* \"ballotV3.sol\":1845:1870  proposals[prop].voteCount */\n      0x0\n      add\n      sload\n        /* \"ballotV3.sol\":1845:1889  proposals[prop].voteCount > winningVoteCount */\n      gt\n        /* \"ballotV3.sol\":1841:2009  if (proposals[prop].voteCount > winningVoteCount) {... */\n      iszero\n      tag_38\n      jumpi\n        /* \"ballotV3.sol\":1928:1937  proposals */\n      0x2\n        /* \"ballotV3.sol\":1938:1942  prop */\n      dup3\n        /* \"ballotV3.sol\":1928:1943  proposals[prop] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_39\n      jumpi\n      invalid\n    tag_39:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n        /* \"ballotV3.sol\":1928:1953  proposals[prop].voteCount */\n      0x0\n      add\n      sload\n        /* \"ballotV3.sol\":1909:1953  winningVoteCount = proposals[prop].voteCount */\n      swap3\n      pop\n        /* \"ballotV3.sol\":1990:1994  prop */\n      dup2\n        /* \"ballotV3.sol\":1971:1994  _winningProposal = prop */\n      swap4\n      pop\n        /* \"ballotV3.sol\":1841:2009  if (proposals[prop].voteCount > winningVoteCount) {... */\n    tag_38:\n        /* \"ballotV3.sol\":1821:1827  prop++ */\n      dup2\n      dup1\n      0x1\n      add\n      swap3\n      pop\n      pop\n        /* \"ballotV3.sol\":1775:2009  for (uint8 prop = 0; prop < proposals.length; prop++)... */\n      jump(tag_33)\n    tag_34:\n        /* \"ballotV3.sol\":1630:2040  function winningProposal() public validStage(Stage.Done) view returns (uint8 _winningProposal)  {... */\n      pop\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"ballotV3.sol\":1191:1623  function vote(uint8 toProposal) public validStage(Stage.Vote){... */\n    tag_14:\n        /* \"ballotV3.sol\":1262:1282  Voter storage sender */\n      0x0\n        /* \"ballotV3.sol\":1241:1251  Stage.Vote */\n      0x2\n        /* \"ballotV3.sol\":526:534  reqStage */\n      dup1\n        /* \"ballotV3.sol\":517:534  stage == reqStage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_42\n      jumpi\n      invalid\n    tag_42:\n        /* \"ballotV3.sol\":517:522  stage */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ballotV3.sol\":517:534  stage == reqStage */\n      0x3\n      dup2\n      gt\n      iszero\n      tag_43\n      jumpi\n      invalid\n    tag_43:\n      eq\n        /* \"ballotV3.sol\":509:535  require(stage == reqStage) */\n      iszero\n      iszero\n      tag_44\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_44:\n        /* \"ballotV3.sol\":1285:1291  voters */\n      0x1\n        /* \"ballotV3.sol\":1285:1303  voters[msg.sender] */\n      0x0\n        /* \"ballotV3.sol\":1292:1302  msg.sender */\n      caller\n        /* \"ballotV3.sol\":1285:1303  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"ballotV3.sol\":1262:1303  Voter storage sender = voters[msg.sender] */\n      swap2\n      pop\n        /* \"ballotV3.sol\":1317:1323  sender */\n      dup2\n        /* \"ballotV3.sol\":1317:1329  sender.voted */\n      0x1\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"ballotV3.sol\":1317:1363  sender.voted || toProposal >= proposals.length */\n      dup1\n      tag_46\n      jumpi\n      pop\n        /* \"ballotV3.sol\":1347:1356  proposals */\n      0x2\n        /* \"ballotV3.sol\":1347:1363  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"ballotV3.sol\":1333:1343  toProposal */\n      dup4\n        /* \"ballotV3.sol\":1333:1363  toProposal >= proposals.length */\n      0xff\n      and\n      lt\n      iszero\n        /* \"ballotV3.sol\":1317:1363  sender.voted || toProposal >= proposals.length */\n    tag_46:\n        /* \"ballotV3.sol\":1313:1385  if (sender.voted || toProposal >= proposals.length) ... */\n      iszero\n      tag_47\n      jumpi\n        /* \"ballotV3.sol\":1378:1385  return; */\n      jump(tag_45)\n        /* \"ballotV3.sol\":1313:1385  if (sender.voted || toProposal >= proposals.length) ... */\n    tag_47:\n        /* \"ballotV3.sol\":1410:1414  true */\n      0x1\n        /* \"ballotV3.sol\":1395:1401  sender */\n      dup3\n        /* \"ballotV3.sol\":1395:1407  sender.voted */\n      0x1\n      add\n      0x0\n        /* \"ballotV3.sol\":1395:1414  sender.voted = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ballotV3.sol\":1438:1448  toProposal */\n      dup3\n        /* \"ballotV3.sol\":1424:1430  sender */\n      dup3\n        /* \"ballotV3.sol\":1424:1435  sender.vote */\n      0x1\n      add\n      0x1\n        /* \"ballotV3.sol\":1424:1448  sender.vote = toProposal */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ballotV3.sol\":1496:1502  sender */\n      dup2\n        /* \"ballotV3.sol\":1496:1509  sender.weight */\n      0x0\n      add\n      sload\n        /* \"ballotV3.sol\":1461:1470  proposals */\n      0x2\n        /* \"ballotV3.sol\":1471:1481  toProposal */\n      dup5\n        /* \"ballotV3.sol\":1461:1482  proposals[toProposal] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_48\n      jumpi\n      invalid\n    tag_48:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n        /* \"ballotV3.sol\":1461:1492  proposals[toProposal].voteCount */\n      0x0\n      add\n      0x0\n        /* \"ballotV3.sol\":1461:1509  proposals[toProposal].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ballotV3.sol\":1543:1553  60 seconds */\n      0x3c\n        /* \"ballotV3.sol\":1531:1540  startTime */\n      sload(0x3)\n        /* \"ballotV3.sol\":1531:1553  startTime + 60 seconds */\n      add\n        /* \"ballotV3.sol\":1524:1527  now */\n      timestamp\n        /* \"ballotV3.sol\":1524:1554  now > (startTime + 60 seconds) */\n      gt\n        /* \"ballotV3.sol\":1520:1586  if (now > (startTime + 60 seconds)) ... */\n      iszero\n      tag_50\n      jumpi\n        /* \"ballotV3.sol\":1576:1586  Stage.Done */\n      0x3\n        /* \"ballotV3.sol\":1568:1573  stage */\n      0x0\n      dup1\n        /* \"ballotV3.sol\":1568:1586  stage = Stage.Done */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x3\n      dup2\n      gt\n      iszero\n      tag_51\n      jumpi\n      invalid\n    tag_51:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"ballotV3.sol\":1520:1586  if (now > (startTime + 60 seconds)) ... */\n    tag_50:\n        /* \"ballotV3.sol\":545:546  _ */\n    tag_45:\n        /* \"ballotV3.sol\":1191:1623  function vote(uint8 toProposal) public validStage(Stage.Vote){... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ballotV3.sol\":299:330  Stage public stage = Stage.Init */\n    tag_17:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820a173c4cbf7f66fa1871ac1fe8912e6b580bab39effa3ac94f57bf802296b7f5e0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260008060006101000a81548160ff0219169083600381111561002257fe5b021790555034801561003357600080fd5b506040516020806106e68339810180604052810190808051906020019092919050505033600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600160008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055508060ff166002816101119190610142565b5060016000806101000a81548160ff0219169083600381111561013057fe5b02179055504260038190555050610195565b81548183558181111561016957818360005260206000209182019101610168919061016e565b5b505050565b61019291905b8082111561018e5760008082016000905550600101610174565b5090565b90565b610542806101a46000396000f300608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634420e48614610067578063609ff1bd146100aa578063b3f98adc146100db578063c040e6b81461010b575b600080fd5b34801561007357600080fd5b506100a8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610144565b005b3480156100b657600080fd5b506100bf61030a565b604051808260ff1660ff16815260200191505060405180910390f35b3480156100e757600080fd5b50610109600480360381019080803560ff1690602001909291905050506103bc565b005b34801561011757600080fd5b50610120610504565b6040518082600381111561013057fe5b60ff16815260200191505060405180910390f35b600180600381111561015257fe5b6000809054906101000a900460ff16600381111561016c57fe5b14151561017857600080fd5b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806102215750600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b1561022b57610306565b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff021916908315150217905550600a600354014211156103055760026000806101000a81548160ff021916908360038111156102f857fe5b0217905550426003819055505b5b5050565b6000806000600380600381111561031d57fe5b6000809054906101000a900460ff16600381111561033757fe5b14151561034357600080fd5b60009250600091505b6002805490508260ff1610156103b6578260028360ff1681548110151561036f57fe5b906000526020600020016000015411156103a95760028260ff1681548110151561039557fe5b906000526020600020016000015492508193505b818060010192505061034c565b50505090565b600060028060038111156103cc57fe5b6000809054906101000a900460ff1660038111156103e657fe5b1415156103f257600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002091508160010160009054906101000a900460ff168061045857506002805490508360ff1610155b15610462576104ff565b60018260010160006101000a81548160ff021916908315150217905550828260010160016101000a81548160ff021916908360ff160217905550816000015460028460ff168154811015156104b357fe5b9060005260206000200160000160008282540192505081905550603c600354014211156104fe5760036000806101000a81548160ff021916908360038111156104f857fe5b02179055505b5b505050565b6000809054906101000a900460ff16815600a165627a7a72305820a173c4cbf7f66fa1871ac1fe8912e6b580bab39effa3ac94f57bf802296b7f5e0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x22 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x6E6 DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x142 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x130 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP PUSH2 0x195 JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x169 JUMPI DUP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x16E JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x192 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x174 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x542 DUP1 PUSH2 0x1A4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x4420E486 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x10B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x144 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBF PUSH2 0x30A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3BC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x130 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x152 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16C JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x221 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x22B JUMPI PUSH2 0x306 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x305 JUMPI PUSH1 0x2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2F8 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x3 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x31D JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x337 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 POP PUSH1 0x0 SWAP2 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0x3B6 JUMPI DUP3 PUSH1 0x2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x36F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x395 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP3 POP DUP2 SWAP4 POP JUMPDEST DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0x34C JUMP JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3CC JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3E6 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP2 POP DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x458 JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x462 JUMPI PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 DUP3 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x0 ADD SLOAD PUSH1 0x2 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4B3 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x3C PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x4FE JUMPI PUSH1 0x3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4F8 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 LOG1 PUSH20 0xC4CBF7F66FA1871AC1FE8912E6B580BAB39EFFA3 0xac SWAP5 0xf5 PUSH28 0xF802296B7F5E00290000000000000000000000000000000000000000 ",
							"sourceMap": "58:1984:0:-;;;320:10;299:31;;;;;;;;;;;;;;;;;;;;;;;;;;565:233;8:9:-1;5:2;;;30:1;27;20:12;5:2;565:233:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;629:10;615:11;;:24;;;;;;;;;;;;;;;;;;678:1;649:6;:19;656:11;;;;;;;;;;;649:19;;;;;;;;;;;;;;;:26;;:30;;;;709:13;690:32;;:9;:32;;;;;:::i;:::-;;740:9;732:5;;:17;;;;;;;;;;;;;;;;;;;;;;;;771:3;759:9;:15;;;;565:233;58:1984;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634420e48614610067578063609ff1bd146100aa578063b3f98adc146100db578063c040e6b81461010b575b600080fd5b34801561007357600080fd5b506100a8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610144565b005b3480156100b657600080fd5b506100bf61030a565b604051808260ff1660ff16815260200191505060405180910390f35b3480156100e757600080fd5b50610109600480360381019080803560ff1690602001909291905050506103bc565b005b34801561011757600080fd5b50610120610504565b6040518082600381111561013057fe5b60ff16815260200191505060405180910390f35b600180600381111561015257fe5b6000809054906101000a900460ff16600381111561016c57fe5b14151561017857600080fd5b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806102215750600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b1561022b57610306565b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff021916908315150217905550600a600354014211156103055760026000806101000a81548160ff021916908360038111156102f857fe5b0217905550426003819055505b5b5050565b6000806000600380600381111561031d57fe5b6000809054906101000a900460ff16600381111561033757fe5b14151561034357600080fd5b60009250600091505b6002805490508260ff1610156103b6578260028360ff1681548110151561036f57fe5b906000526020600020016000015411156103a95760028260ff1681548110151561039557fe5b906000526020600020016000015492508193505b818060010192505061034c565b50505090565b600060028060038111156103cc57fe5b6000809054906101000a900460ff1660038111156103e657fe5b1415156103f257600080fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002091508160010160009054906101000a900460ff168061045857506002805490508360ff1610155b15610462576104ff565b60018260010160006101000a81548160ff021916908315150217905550828260010160016101000a81548160ff021916908360ff160217905550816000015460028460ff168154811015156104b357fe5b9060005260206000200160000160008282540192505081905550603c600354014211156104fe5760036000806101000a81548160ff021916908360038111156104f857fe5b02179055505b5b505050565b6000809054906101000a900460ff16815600a165627a7a72305820a173c4cbf7f66fa1871ac1fe8912e6b580bab39effa3ac94f57bf802296b7f5e0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x4420E486 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0x10B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x144 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBF PUSH2 0x30A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3BC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x120 PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x130 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x152 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16C JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x221 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x22B JUMPI PUSH2 0x306 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x305 JUMPI PUSH1 0x2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2F8 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x3 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x31D JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x337 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x343 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 POP PUSH1 0x0 SWAP2 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0xFF AND LT ISZERO PUSH2 0x3B6 JUMPI DUP3 PUSH1 0x2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x36F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x395 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP3 POP DUP2 SWAP4 POP JUMPDEST DUP2 DUP1 PUSH1 0x1 ADD SWAP3 POP POP PUSH2 0x34C JUMP JUMPDEST POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3CC JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3E6 JUMPI INVALID JUMPDEST EQ ISZERO ISZERO PUSH2 0x3F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP2 POP DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x458 JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x462 JUMPI PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 DUP3 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x0 ADD SLOAD PUSH1 0x2 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4B3 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x3C PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x4FE JUMPI PUSH1 0x3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4F8 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 LOG1 PUSH20 0xC4CBF7F66FA1871AC1FE8912E6B580BAB39EFFA3 0xac SWAP5 0xf5 PUSH28 0xF802296B7F5E00290000000000000000000000000000000000000000 ",
							"sourceMap": "58:1984:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;814:370;;8:9:-1;5:2;;;30:1;27;20:12;5:2;814:370:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1630:410;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1630:410:0;;;;;;;;;;;;;;;;;;;;;;;;;;;1191:432;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1191:432:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;299:31;;8:9:-1;5:2;;;30:1;27;20:12;5:2;299:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;814:370;867:9;526:8;517:17;;;;;;;;:5;;;;;;;;;;;:17;;;;;;;;;509:26;;;;;;;;907:11;;;;;;;;;;;893:25;;:10;:25;;;;:50;;;;922:6;:15;929:7;922:15;;;;;;;;;;;;;;;:21;;;;;;;;;;;;893:50;889:76;;;958:7;;889:76;1000:1;975:6;:15;982:7;975:15;;;;;;;;;;;;;;;:22;;:26;;;;1035:5;1011:6;:15;1018:7;1011:15;;;;;;;;;;;;;;;:21;;;:29;;;;;;;;;;;;;;;;;;1073:10;1061:9;;:22;1054:3;:30;1050:109;;;1108:10;1100:5;;:18;;;;;;;;;;;;;;;;;;;;;;;;1145:3;1133:9;:15;;;;1050:109;545:1;814:370;;:::o;1630:410::-;1701:22;1736:24;1780:10;1675;526:8;517:17;;;;;;;;:5;;;;;;;;;;;:17;;;;;;;;;509:26;;;;;;;;1763:1;1736:28;;1793:1;1780:14;;1775:234;1803:9;:16;;;;1796:4;:23;;;1775:234;;;1873:16;1845:9;1855:4;1845:15;;;;;;;;;;;;;;;;;;;:25;;;:44;1841:168;;;1928:9;1938:4;1928:15;;;;;;;;;;;;;;;;;;;:25;;;1909:44;;1990:4;1971:23;;1841:168;1821:6;;;;;;;1775:234;;;1630:410;;;;:::o;1191:432::-;1262:20;1241:10;526:8;517:17;;;;;;;;:5;;;;;;;;;;;:17;;;;;;;;;509:26;;;;;;;;1285:6;:18;1292:10;1285:18;;;;;;;;;;;;;;;1262:41;;1317:6;:12;;;;;;;;;;;;:46;;;;1347:9;:16;;;;1333:10;:30;;;;1317:46;1313:72;;;1378:7;;1313:72;1410:4;1395:6;:12;;;:19;;;;;;;;;;;;;;;;;;1438:10;1424:6;:11;;;:24;;;;;;;;;;;;;;;;;;1496:6;:13;;;1461:9;1471:10;1461:21;;;;;;;;;;;;;;;;;;;:31;;;:48;;;;;;;;;;;1543:10;1531:9;;:22;1524:3;:30;1520:66;;;1576:10;1568:5;;:18;;;;;;;;;;;;;;;;;;;;;;;;1520:66;545:1;1191:432;;;:::o;299:31::-;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "269200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"register(address)": "82204",
								"stage()": "528",
								"vote(uint8)": "83024",
								"winningProposal()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 2042,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "MSTORE"
								},
								{
									"begin": 320,
									"end": 330,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 299,
									"end": 330,
									"name": "DUP1"
								},
								{
									"begin": 299,
									"end": 330,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 299,
									"end": 330,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 299,
									"end": 330,
									"name": "EXP"
								},
								{
									"begin": 299,
									"end": 330,
									"name": "DUP2"
								},
								{
									"begin": 299,
									"end": 330,
									"name": "SLOAD"
								},
								{
									"begin": 299,
									"end": 330,
									"name": "DUP2"
								},
								{
									"begin": 299,
									"end": 330,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 299,
									"end": 330,
									"name": "MUL"
								},
								{
									"begin": 299,
									"end": 330,
									"name": "NOT"
								},
								{
									"begin": 299,
									"end": 330,
									"name": "AND"
								},
								{
									"begin": 299,
									"end": 330,
									"name": "SWAP1"
								},
								{
									"begin": 299,
									"end": 330,
									"name": "DUP4"
								},
								{
									"begin": 299,
									"end": 330,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 299,
									"end": 330,
									"name": "DUP2"
								},
								{
									"begin": 299,
									"end": 330,
									"name": "GT"
								},
								{
									"begin": 299,
									"end": 330,
									"name": "ISZERO"
								},
								{
									"begin": 299,
									"end": 330,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 299,
									"end": 330,
									"name": "JUMPI"
								},
								{
									"begin": 299,
									"end": 330,
									"name": "INVALID"
								},
								{
									"begin": 299,
									"end": 330,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 299,
									"end": 330,
									"name": "JUMPDEST"
								},
								{
									"begin": 299,
									"end": 330,
									"name": "MUL"
								},
								{
									"begin": 299,
									"end": 330,
									"name": "OR"
								},
								{
									"begin": 299,
									"end": 330,
									"name": "SWAP1"
								},
								{
									"begin": 299,
									"end": 330,
									"name": "SSTORE"
								},
								{
									"begin": 299,
									"end": 330,
									"name": "POP"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "POP"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "MLOAD"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "DUP1"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "PUSHSIZE"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "DUP4"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "CODECOPY"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "DUP2"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "ADD"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "DUP1"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "MSTORE"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "DUP2"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "ADD"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "SWAP1"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "DUP1"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "DUP1"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "MLOAD"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "SWAP1"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "ADD"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "SWAP1"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "SWAP3"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "SWAP2"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "SWAP1"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "POP"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "POP"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "POP"
								},
								{
									"begin": 629,
									"end": 639,
									"name": "CALLER"
								},
								{
									"begin": 615,
									"end": 626,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 615,
									"end": 626,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 615,
									"end": 639,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 615,
									"end": 639,
									"name": "EXP"
								},
								{
									"begin": 615,
									"end": 639,
									"name": "DUP2"
								},
								{
									"begin": 615,
									"end": 639,
									"name": "SLOAD"
								},
								{
									"begin": 615,
									"end": 639,
									"name": "DUP2"
								},
								{
									"begin": 615,
									"end": 639,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 615,
									"end": 639,
									"name": "MUL"
								},
								{
									"begin": 615,
									"end": 639,
									"name": "NOT"
								},
								{
									"begin": 615,
									"end": 639,
									"name": "AND"
								},
								{
									"begin": 615,
									"end": 639,
									"name": "SWAP1"
								},
								{
									"begin": 615,
									"end": 639,
									"name": "DUP4"
								},
								{
									"begin": 615,
									"end": 639,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 615,
									"end": 639,
									"name": "AND"
								},
								{
									"begin": 615,
									"end": 639,
									"name": "MUL"
								},
								{
									"begin": 615,
									"end": 639,
									"name": "OR"
								},
								{
									"begin": 615,
									"end": 639,
									"name": "SWAP1"
								},
								{
									"begin": 615,
									"end": 639,
									"name": "SSTORE"
								},
								{
									"begin": 615,
									"end": 639,
									"name": "POP"
								},
								{
									"begin": 678,
									"end": 679,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 649,
									"end": 655,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 649,
									"end": 668,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 656,
									"end": 667,
									"name": "DUP1"
								},
								{
									"begin": 656,
									"end": 667,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 656,
									"end": 667,
									"name": "SWAP1"
								},
								{
									"begin": 656,
									"end": 667,
									"name": "SLOAD"
								},
								{
									"begin": 656,
									"end": 667,
									"name": "SWAP1"
								},
								{
									"begin": 656,
									"end": 667,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 656,
									"end": 667,
									"name": "EXP"
								},
								{
									"begin": 656,
									"end": 667,
									"name": "SWAP1"
								},
								{
									"begin": 656,
									"end": 667,
									"name": "DIV"
								},
								{
									"begin": 656,
									"end": 667,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 656,
									"end": 667,
									"name": "AND"
								},
								{
									"begin": 649,
									"end": 668,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 649,
									"end": 668,
									"name": "AND"
								},
								{
									"begin": 649,
									"end": 668,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 649,
									"end": 668,
									"name": "AND"
								},
								{
									"begin": 649,
									"end": 668,
									"name": "DUP2"
								},
								{
									"begin": 649,
									"end": 668,
									"name": "MSTORE"
								},
								{
									"begin": 649,
									"end": 668,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 649,
									"end": 668,
									"name": "ADD"
								},
								{
									"begin": 649,
									"end": 668,
									"name": "SWAP1"
								},
								{
									"begin": 649,
									"end": 668,
									"name": "DUP2"
								},
								{
									"begin": 649,
									"end": 668,
									"name": "MSTORE"
								},
								{
									"begin": 649,
									"end": 668,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 649,
									"end": 668,
									"name": "ADD"
								},
								{
									"begin": 649,
									"end": 668,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 649,
									"end": 668,
									"name": "KECCAK256"
								},
								{
									"begin": 649,
									"end": 675,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 649,
									"end": 675,
									"name": "ADD"
								},
								{
									"begin": 649,
									"end": 679,
									"name": "DUP2"
								},
								{
									"begin": 649,
									"end": 679,
									"name": "SWAP1"
								},
								{
									"begin": 649,
									"end": 679,
									"name": "SSTORE"
								},
								{
									"begin": 649,
									"end": 679,
									"name": "POP"
								},
								{
									"begin": 709,
									"end": 722,
									"name": "DUP1"
								},
								{
									"begin": 690,
									"end": 722,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 690,
									"end": 722,
									"name": "AND"
								},
								{
									"begin": 690,
									"end": 699,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 690,
									"end": 722,
									"name": "DUP2"
								},
								{
									"begin": 690,
									"end": 722,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 690,
									"end": 722,
									"name": "SWAP2"
								},
								{
									"begin": 690,
									"end": 722,
									"name": "SWAP1"
								},
								{
									"begin": 690,
									"end": 722,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 690,
									"end": 722,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 690,
									"end": 722,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 690,
									"end": 722,
									"name": "JUMPDEST"
								},
								{
									"begin": 690,
									"end": 722,
									"name": "POP"
								},
								{
									"begin": 740,
									"end": 749,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 732,
									"end": 737,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 732,
									"end": 737,
									"name": "DUP1"
								},
								{
									"begin": 732,
									"end": 749,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 732,
									"end": 749,
									"name": "EXP"
								},
								{
									"begin": 732,
									"end": 749,
									"name": "DUP2"
								},
								{
									"begin": 732,
									"end": 749,
									"name": "SLOAD"
								},
								{
									"begin": 732,
									"end": 749,
									"name": "DUP2"
								},
								{
									"begin": 732,
									"end": 749,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 732,
									"end": 749,
									"name": "MUL"
								},
								{
									"begin": 732,
									"end": 749,
									"name": "NOT"
								},
								{
									"begin": 732,
									"end": 749,
									"name": "AND"
								},
								{
									"begin": 732,
									"end": 749,
									"name": "SWAP1"
								},
								{
									"begin": 732,
									"end": 749,
									"name": "DUP4"
								},
								{
									"begin": 732,
									"end": 749,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 732,
									"end": 749,
									"name": "DUP2"
								},
								{
									"begin": 732,
									"end": 749,
									"name": "GT"
								},
								{
									"begin": 732,
									"end": 749,
									"name": "ISZERO"
								},
								{
									"begin": 732,
									"end": 749,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 732,
									"end": 749,
									"name": "JUMPI"
								},
								{
									"begin": 732,
									"end": 749,
									"name": "INVALID"
								},
								{
									"begin": 732,
									"end": 749,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 732,
									"end": 749,
									"name": "JUMPDEST"
								},
								{
									"begin": 732,
									"end": 749,
									"name": "MUL"
								},
								{
									"begin": 732,
									"end": 749,
									"name": "OR"
								},
								{
									"begin": 732,
									"end": 749,
									"name": "SWAP1"
								},
								{
									"begin": 732,
									"end": 749,
									"name": "SSTORE"
								},
								{
									"begin": 732,
									"end": 749,
									"name": "POP"
								},
								{
									"begin": 771,
									"end": 774,
									"name": "TIMESTAMP"
								},
								{
									"begin": 759,
									"end": 768,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 759,
									"end": 774,
									"name": "DUP2"
								},
								{
									"begin": 759,
									"end": 774,
									"name": "SWAP1"
								},
								{
									"begin": 759,
									"end": 774,
									"name": "SSTORE"
								},
								{
									"begin": 759,
									"end": 774,
									"name": "POP"
								},
								{
									"begin": 565,
									"end": 798,
									"name": "POP"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "JUMP"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "DUP2"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "SLOAD"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "DUP2"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "DUP4"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "SSTORE"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "DUP2"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "DUP2"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "GT"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "ISZERO"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "JUMPI"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "DUP2"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "DUP4"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "MSTORE"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "KECCAK256"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "SWAP2"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "DUP3"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "ADD"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "SWAP2"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "ADD"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "SWAP2"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "SWAP1"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "POP"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "POP"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "POP"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "SWAP2"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "SWAP1"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "DUP1"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "DUP3"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "GT"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "ISZERO"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "JUMPI"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "DUP1"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "DUP3"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "ADD"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "SWAP1"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "SSTORE"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "POP"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "ADD"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "JUMP"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "POP"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "SWAP1"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "JUMP"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "SWAP1"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "JUMPDEST"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "DUP1"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "CODECOPY"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 58,
									"end": 2042,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820a173c4cbf7f66fa1871ac1fe8912e6b580bab39effa3ac94f57bf802296b7f5e0029",
									".code": [
										{
											"begin": 58,
											"end": 2042,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "MSTORE"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "LT"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "SWAP1"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "DIV"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "AND"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "PUSH",
											"value": "4420E486"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "EQ"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "PUSH",
											"value": "609FF1BD"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "EQ"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "PUSH",
											"value": "B3F98ADC"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "EQ"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "PUSH",
											"value": "C040E6B8"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "EQ"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "JUMPI"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "JUMPDEST"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "DUP1"
										},
										{
											"begin": 58,
											"end": 2042,
											"name": "REVERT"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "JUMPDEST"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "POP"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "DUP1"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "SUB"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "DUP2"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "ADD"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "SWAP1"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "DUP1"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "DUP1"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "AND"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "SWAP1"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "ADD"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "SWAP1"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "SWAP3"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "SWAP2"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "SWAP1"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "POP"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "POP"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "POP"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "JUMP"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "JUMPDEST"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "STOP"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "JUMPDEST"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "POP"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "JUMP"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "JUMPDEST"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "MLOAD"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "DUP1"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "DUP3"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "AND"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "AND"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "DUP2"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "MSTORE"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "ADD"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "SWAP2"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "POP"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "POP"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "MLOAD"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "DUP1"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "SWAP2"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "SUB"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "SWAP1"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "RETURN"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "JUMPDEST"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "POP"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "DUP1"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "SUB"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "DUP2"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "ADD"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "SWAP1"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "DUP1"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "DUP1"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "AND"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "SWAP1"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "ADD"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "SWAP1"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "SWAP3"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "SWAP2"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "SWAP1"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "POP"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "POP"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "POP"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "JUMP"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "JUMPDEST"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "STOP"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "JUMPDEST"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "POP"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "JUMP"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "JUMPDEST"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "MLOAD"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "DUP1"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "DUP2"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "GT"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "ISZERO"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "JUMPI"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "INVALID"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "JUMPDEST"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "AND"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "DUP2"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "MSTORE"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "ADD"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "SWAP2"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "POP"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "POP"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "MLOAD"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "DUP1"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "SWAP2"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "SUB"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "SWAP1"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "RETURN"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "JUMPDEST"
										},
										{
											"begin": 867,
											"end": 876,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 526,
											"end": 534,
											"name": "DUP1"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "DUP2"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "GT"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "ISZERO"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "JUMPI"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "INVALID"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "JUMPDEST"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "DUP1"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "SWAP1"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "SLOAD"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "SWAP1"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "EXP"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "SWAP1"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "DIV"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "AND"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "DUP2"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "GT"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "ISZERO"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "JUMPI"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "INVALID"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "JUMPDEST"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "EQ"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "ISZERO"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "ISZERO"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "JUMPI"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "DUP1"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "REVERT"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "JUMPDEST"
										},
										{
											"begin": 907,
											"end": 918,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 907,
											"end": 918,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 907,
											"end": 918,
											"name": "SWAP1"
										},
										{
											"begin": 907,
											"end": 918,
											"name": "SLOAD"
										},
										{
											"begin": 907,
											"end": 918,
											"name": "SWAP1"
										},
										{
											"begin": 907,
											"end": 918,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 907,
											"end": 918,
											"name": "EXP"
										},
										{
											"begin": 907,
											"end": 918,
											"name": "SWAP1"
										},
										{
											"begin": 907,
											"end": 918,
											"name": "DIV"
										},
										{
											"begin": 907,
											"end": 918,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 907,
											"end": 918,
											"name": "AND"
										},
										{
											"begin": 893,
											"end": 918,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 893,
											"end": 918,
											"name": "AND"
										},
										{
											"begin": 893,
											"end": 903,
											"name": "CALLER"
										},
										{
											"begin": 893,
											"end": 918,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 893,
											"end": 918,
											"name": "AND"
										},
										{
											"begin": 893,
											"end": 918,
											"name": "EQ"
										},
										{
											"begin": 893,
											"end": 918,
											"name": "ISZERO"
										},
										{
											"begin": 893,
											"end": 943,
											"name": "DUP1"
										},
										{
											"begin": 893,
											"end": 943,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 893,
											"end": 943,
											"name": "JUMPI"
										},
										{
											"begin": 893,
											"end": 943,
											"name": "POP"
										},
										{
											"begin": 922,
											"end": 928,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 929,
											"end": 936,
											"name": "DUP4"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "AND"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "AND"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "DUP2"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "MSTORE"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "ADD"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "SWAP1"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "DUP2"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "MSTORE"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "ADD"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 922,
											"end": 937,
											"name": "KECCAK256"
										},
										{
											"begin": 922,
											"end": 943,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 922,
											"end": 943,
											"name": "ADD"
										},
										{
											"begin": 922,
											"end": 943,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 922,
											"end": 943,
											"name": "SWAP1"
										},
										{
											"begin": 922,
											"end": 943,
											"name": "SLOAD"
										},
										{
											"begin": 922,
											"end": 943,
											"name": "SWAP1"
										},
										{
											"begin": 922,
											"end": 943,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 922,
											"end": 943,
											"name": "EXP"
										},
										{
											"begin": 922,
											"end": 943,
											"name": "SWAP1"
										},
										{
											"begin": 922,
											"end": 943,
											"name": "DIV"
										},
										{
											"begin": 922,
											"end": 943,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 922,
											"end": 943,
											"name": "AND"
										},
										{
											"begin": 893,
											"end": 943,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 893,
											"end": 943,
											"name": "JUMPDEST"
										},
										{
											"begin": 889,
											"end": 965,
											"name": "ISZERO"
										},
										{
											"begin": 889,
											"end": 965,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 889,
											"end": 965,
											"name": "JUMPI"
										},
										{
											"begin": 958,
											"end": 965,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 958,
											"end": 965,
											"name": "JUMP"
										},
										{
											"begin": 889,
											"end": 965,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 889,
											"end": 965,
											"name": "JUMPDEST"
										},
										{
											"begin": 1000,
											"end": 1001,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 975,
											"end": 981,
											"name": "DUP1"
										},
										{
											"begin": 975,
											"end": 990,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 982,
											"end": 989,
											"name": "DUP5"
										},
										{
											"begin": 975,
											"end": 990,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 975,
											"end": 990,
											"name": "AND"
										},
										{
											"begin": 975,
											"end": 990,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 975,
											"end": 990,
											"name": "AND"
										},
										{
											"begin": 975,
											"end": 990,
											"name": "DUP2"
										},
										{
											"begin": 975,
											"end": 990,
											"name": "MSTORE"
										},
										{
											"begin": 975,
											"end": 990,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 975,
											"end": 990,
											"name": "ADD"
										},
										{
											"begin": 975,
											"end": 990,
											"name": "SWAP1"
										},
										{
											"begin": 975,
											"end": 990,
											"name": "DUP2"
										},
										{
											"begin": 975,
											"end": 990,
											"name": "MSTORE"
										},
										{
											"begin": 975,
											"end": 990,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 975,
											"end": 990,
											"name": "ADD"
										},
										{
											"begin": 975,
											"end": 990,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 975,
											"end": 990,
											"name": "KECCAK256"
										},
										{
											"begin": 975,
											"end": 997,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 975,
											"end": 997,
											"name": "ADD"
										},
										{
											"begin": 975,
											"end": 1001,
											"name": "DUP2"
										},
										{
											"begin": 975,
											"end": 1001,
											"name": "SWAP1"
										},
										{
											"begin": 975,
											"end": 1001,
											"name": "SSTORE"
										},
										{
											"begin": 975,
											"end": 1001,
											"name": "POP"
										},
										{
											"begin": 1035,
											"end": 1040,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1011,
											"end": 1017,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1011,
											"end": 1026,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1018,
											"end": 1025,
											"name": "DUP5"
										},
										{
											"begin": 1011,
											"end": 1026,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1011,
											"end": 1026,
											"name": "AND"
										},
										{
											"begin": 1011,
											"end": 1026,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1011,
											"end": 1026,
											"name": "AND"
										},
										{
											"begin": 1011,
											"end": 1026,
											"name": "DUP2"
										},
										{
											"begin": 1011,
											"end": 1026,
											"name": "MSTORE"
										},
										{
											"begin": 1011,
											"end": 1026,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1011,
											"end": 1026,
											"name": "ADD"
										},
										{
											"begin": 1011,
											"end": 1026,
											"name": "SWAP1"
										},
										{
											"begin": 1011,
											"end": 1026,
											"name": "DUP2"
										},
										{
											"begin": 1011,
											"end": 1026,
											"name": "MSTORE"
										},
										{
											"begin": 1011,
											"end": 1026,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1011,
											"end": 1026,
											"name": "ADD"
										},
										{
											"begin": 1011,
											"end": 1026,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1011,
											"end": 1026,
											"name": "KECCAK256"
										},
										{
											"begin": 1011,
											"end": 1032,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1011,
											"end": 1032,
											"name": "ADD"
										},
										{
											"begin": 1011,
											"end": 1032,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1011,
											"end": 1040,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1011,
											"end": 1040,
											"name": "EXP"
										},
										{
											"begin": 1011,
											"end": 1040,
											"name": "DUP2"
										},
										{
											"begin": 1011,
											"end": 1040,
											"name": "SLOAD"
										},
										{
											"begin": 1011,
											"end": 1040,
											"name": "DUP2"
										},
										{
											"begin": 1011,
											"end": 1040,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1011,
											"end": 1040,
											"name": "MUL"
										},
										{
											"begin": 1011,
											"end": 1040,
											"name": "NOT"
										},
										{
											"begin": 1011,
											"end": 1040,
											"name": "AND"
										},
										{
											"begin": 1011,
											"end": 1040,
											"name": "SWAP1"
										},
										{
											"begin": 1011,
											"end": 1040,
											"name": "DUP4"
										},
										{
											"begin": 1011,
											"end": 1040,
											"name": "ISZERO"
										},
										{
											"begin": 1011,
											"end": 1040,
											"name": "ISZERO"
										},
										{
											"begin": 1011,
											"end": 1040,
											"name": "MUL"
										},
										{
											"begin": 1011,
											"end": 1040,
											"name": "OR"
										},
										{
											"begin": 1011,
											"end": 1040,
											"name": "SWAP1"
										},
										{
											"begin": 1011,
											"end": 1040,
											"name": "SSTORE"
										},
										{
											"begin": 1011,
											"end": 1040,
											"name": "POP"
										},
										{
											"begin": 1073,
											"end": 1083,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "SLOAD"
										},
										{
											"begin": 1061,
											"end": 1083,
											"name": "ADD"
										},
										{
											"begin": 1054,
											"end": 1057,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1054,
											"end": 1084,
											"name": "GT"
										},
										{
											"begin": 1050,
											"end": 1159,
											"name": "ISZERO"
										},
										{
											"begin": 1050,
											"end": 1159,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 1050,
											"end": 1159,
											"name": "JUMPI"
										},
										{
											"begin": 1108,
											"end": 1118,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1100,
											"end": 1105,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1105,
											"name": "DUP1"
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "EXP"
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "DUP2"
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "SLOAD"
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "DUP2"
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "MUL"
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "NOT"
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "AND"
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "SWAP1"
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "DUP4"
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "DUP2"
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "GT"
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "ISZERO"
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "JUMPI"
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "INVALID"
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "JUMPDEST"
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "MUL"
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "OR"
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "SWAP1"
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "SSTORE"
										},
										{
											"begin": 1100,
											"end": 1118,
											"name": "POP"
										},
										{
											"begin": 1145,
											"end": 1148,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1133,
											"end": 1142,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1133,
											"end": 1148,
											"name": "DUP2"
										},
										{
											"begin": 1133,
											"end": 1148,
											"name": "SWAP1"
										},
										{
											"begin": 1133,
											"end": 1148,
											"name": "SSTORE"
										},
										{
											"begin": 1133,
											"end": 1148,
											"name": "POP"
										},
										{
											"begin": 1050,
											"end": 1159,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 1050,
											"end": 1159,
											"name": "JUMPDEST"
										},
										{
											"begin": 545,
											"end": 546,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 545,
											"end": 546,
											"name": "JUMPDEST"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "POP"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "POP"
										},
										{
											"begin": 814,
											"end": 1184,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "JUMPDEST"
										},
										{
											"begin": 1701,
											"end": 1723,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1760,
											"name": "DUP1"
										},
										{
											"begin": 1780,
											"end": 1790,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1675,
											"end": 1685,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 526,
											"end": 534,
											"name": "DUP1"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "DUP2"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "GT"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "ISZERO"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "JUMPI"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "INVALID"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "JUMPDEST"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "DUP1"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "SWAP1"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "SLOAD"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "SWAP1"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "EXP"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "SWAP1"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "DIV"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "AND"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "DUP2"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "GT"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "ISZERO"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "JUMPI"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "INVALID"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "JUMPDEST"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "EQ"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "ISZERO"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "ISZERO"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "JUMPI"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "DUP1"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "REVERT"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "JUMPDEST"
										},
										{
											"begin": 1763,
											"end": 1764,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1764,
											"name": "SWAP3"
										},
										{
											"begin": 1736,
											"end": 1764,
											"name": "POP"
										},
										{
											"begin": 1793,
											"end": 1794,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1780,
											"end": 1794,
											"name": "SWAP2"
										},
										{
											"begin": 1780,
											"end": 1794,
											"name": "POP"
										},
										{
											"begin": 1775,
											"end": 2009,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 1775,
											"end": 2009,
											"name": "JUMPDEST"
										},
										{
											"begin": 1803,
											"end": 1812,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1803,
											"end": 1819,
											"name": "DUP1"
										},
										{
											"begin": 1803,
											"end": 1819,
											"name": "SLOAD"
										},
										{
											"begin": 1803,
											"end": 1819,
											"name": "SWAP1"
										},
										{
											"begin": 1803,
											"end": 1819,
											"name": "POP"
										},
										{
											"begin": 1796,
											"end": 1800,
											"name": "DUP3"
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "AND"
										},
										{
											"begin": 1796,
											"end": 1819,
											"name": "LT"
										},
										{
											"begin": 1775,
											"end": 2009,
											"name": "ISZERO"
										},
										{
											"begin": 1775,
											"end": 2009,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 1775,
											"end": 2009,
											"name": "JUMPI"
										},
										{
											"begin": 1873,
											"end": 1889,
											"name": "DUP3"
										},
										{
											"begin": 1845,
											"end": 1854,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1855,
											"end": 1859,
											"name": "DUP4"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "AND"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "DUP2"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "SLOAD"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "DUP2"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "LT"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "ISZERO"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "ISZERO"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "JUMPI"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "INVALID"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "JUMPDEST"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "SWAP1"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "MSTORE"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "KECCAK256"
										},
										{
											"begin": 1845,
											"end": 1860,
											"name": "ADD"
										},
										{
											"begin": 1845,
											"end": 1870,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1870,
											"name": "ADD"
										},
										{
											"begin": 1845,
											"end": 1870,
											"name": "SLOAD"
										},
										{
											"begin": 1845,
											"end": 1889,
											"name": "GT"
										},
										{
											"begin": 1841,
											"end": 2009,
											"name": "ISZERO"
										},
										{
											"begin": 1841,
											"end": 2009,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 1841,
											"end": 2009,
											"name": "JUMPI"
										},
										{
											"begin": 1928,
											"end": 1937,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1938,
											"end": 1942,
											"name": "DUP3"
										},
										{
											"begin": 1928,
											"end": 1943,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1928,
											"end": 1943,
											"name": "AND"
										},
										{
											"begin": 1928,
											"end": 1943,
											"name": "DUP2"
										},
										{
											"begin": 1928,
											"end": 1943,
											"name": "SLOAD"
										},
										{
											"begin": 1928,
											"end": 1943,
											"name": "DUP2"
										},
										{
											"begin": 1928,
											"end": 1943,
											"name": "LT"
										},
										{
											"begin": 1928,
											"end": 1943,
											"name": "ISZERO"
										},
										{
											"begin": 1928,
											"end": 1943,
											"name": "ISZERO"
										},
										{
											"begin": 1928,
											"end": 1943,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1928,
											"end": 1943,
											"name": "JUMPI"
										},
										{
											"begin": 1928,
											"end": 1943,
											"name": "INVALID"
										},
										{
											"begin": 1928,
											"end": 1943,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 1928,
											"end": 1943,
											"name": "JUMPDEST"
										},
										{
											"begin": 1928,
											"end": 1943,
											"name": "SWAP1"
										},
										{
											"begin": 1928,
											"end": 1943,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1943,
											"name": "MSTORE"
										},
										{
											"begin": 1928,
											"end": 1943,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1928,
											"end": 1943,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1943,
											"name": "KECCAK256"
										},
										{
											"begin": 1928,
											"end": 1943,
											"name": "ADD"
										},
										{
											"begin": 1928,
											"end": 1953,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1953,
											"name": "ADD"
										},
										{
											"begin": 1928,
											"end": 1953,
											"name": "SLOAD"
										},
										{
											"begin": 1909,
											"end": 1953,
											"name": "SWAP3"
										},
										{
											"begin": 1909,
											"end": 1953,
											"name": "POP"
										},
										{
											"begin": 1990,
											"end": 1994,
											"name": "DUP2"
										},
										{
											"begin": 1971,
											"end": 1994,
											"name": "SWAP4"
										},
										{
											"begin": 1971,
											"end": 1994,
											"name": "POP"
										},
										{
											"begin": 1841,
											"end": 2009,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 1841,
											"end": 2009,
											"name": "JUMPDEST"
										},
										{
											"begin": 1821,
											"end": 1827,
											"name": "DUP2"
										},
										{
											"begin": 1821,
											"end": 1827,
											"name": "DUP1"
										},
										{
											"begin": 1821,
											"end": 1827,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1821,
											"end": 1827,
											"name": "ADD"
										},
										{
											"begin": 1821,
											"end": 1827,
											"name": "SWAP3"
										},
										{
											"begin": 1821,
											"end": 1827,
											"name": "POP"
										},
										{
											"begin": 1821,
											"end": 1827,
											"name": "POP"
										},
										{
											"begin": 1775,
											"end": 2009,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1775,
											"end": 2009,
											"name": "JUMP"
										},
										{
											"begin": 1775,
											"end": 2009,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 1775,
											"end": 2009,
											"name": "JUMPDEST"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "POP"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "POP"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "POP"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "SWAP1"
										},
										{
											"begin": 1630,
											"end": 2040,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "JUMPDEST"
										},
										{
											"begin": 1262,
											"end": 1282,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 1251,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 526,
											"end": 534,
											"name": "DUP1"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "DUP2"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "GT"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "ISZERO"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "JUMPI"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "INVALID"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "JUMPDEST"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "DUP1"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "SWAP1"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "SLOAD"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "SWAP1"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "EXP"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "SWAP1"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "DIV"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 517,
											"end": 522,
											"name": "AND"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "DUP2"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "GT"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "ISZERO"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "JUMPI"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "INVALID"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "JUMPDEST"
										},
										{
											"begin": 517,
											"end": 534,
											"name": "EQ"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "ISZERO"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "ISZERO"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "JUMPI"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "DUP1"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "REVERT"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 509,
											"end": 535,
											"name": "JUMPDEST"
										},
										{
											"begin": 1285,
											"end": 1291,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1302,
											"name": "CALLER"
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "AND"
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "AND"
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "DUP2"
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "MSTORE"
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "ADD"
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "SWAP1"
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "DUP2"
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "MSTORE"
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "ADD"
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1285,
											"end": 1303,
											"name": "KECCAK256"
										},
										{
											"begin": 1262,
											"end": 1303,
											"name": "SWAP2"
										},
										{
											"begin": 1262,
											"end": 1303,
											"name": "POP"
										},
										{
											"begin": 1317,
											"end": 1323,
											"name": "DUP2"
										},
										{
											"begin": 1317,
											"end": 1329,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1317,
											"end": 1329,
											"name": "ADD"
										},
										{
											"begin": 1317,
											"end": 1329,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1329,
											"name": "SWAP1"
										},
										{
											"begin": 1317,
											"end": 1329,
											"name": "SLOAD"
										},
										{
											"begin": 1317,
											"end": 1329,
											"name": "SWAP1"
										},
										{
											"begin": 1317,
											"end": 1329,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1317,
											"end": 1329,
											"name": "EXP"
										},
										{
											"begin": 1317,
											"end": 1329,
											"name": "SWAP1"
										},
										{
											"begin": 1317,
											"end": 1329,
											"name": "DIV"
										},
										{
											"begin": 1317,
											"end": 1329,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1317,
											"end": 1329,
											"name": "AND"
										},
										{
											"begin": 1317,
											"end": 1363,
											"name": "DUP1"
										},
										{
											"begin": 1317,
											"end": 1363,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 1317,
											"end": 1363,
											"name": "JUMPI"
										},
										{
											"begin": 1317,
											"end": 1363,
											"name": "POP"
										},
										{
											"begin": 1347,
											"end": 1356,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1347,
											"end": 1363,
											"name": "DUP1"
										},
										{
											"begin": 1347,
											"end": 1363,
											"name": "SLOAD"
										},
										{
											"begin": 1347,
											"end": 1363,
											"name": "SWAP1"
										},
										{
											"begin": 1347,
											"end": 1363,
											"name": "POP"
										},
										{
											"begin": 1333,
											"end": 1343,
											"name": "DUP4"
										},
										{
											"begin": 1333,
											"end": 1363,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1333,
											"end": 1363,
											"name": "AND"
										},
										{
											"begin": 1333,
											"end": 1363,
											"name": "LT"
										},
										{
											"begin": 1333,
											"end": 1363,
											"name": "ISZERO"
										},
										{
											"begin": 1317,
											"end": 1363,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 1317,
											"end": 1363,
											"name": "JUMPDEST"
										},
										{
											"begin": 1313,
											"end": 1385,
											"name": "ISZERO"
										},
										{
											"begin": 1313,
											"end": 1385,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 1313,
											"end": 1385,
											"name": "JUMPI"
										},
										{
											"begin": 1378,
											"end": 1385,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1378,
											"end": 1385,
											"name": "JUMP"
										},
										{
											"begin": 1313,
											"end": 1385,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 1313,
											"end": 1385,
											"name": "JUMPDEST"
										},
										{
											"begin": 1410,
											"end": 1414,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1395,
											"end": 1401,
											"name": "DUP3"
										},
										{
											"begin": 1395,
											"end": 1407,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1395,
											"end": 1407,
											"name": "ADD"
										},
										{
											"begin": 1395,
											"end": 1407,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "EXP"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "DUP2"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "SLOAD"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "DUP2"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "MUL"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "NOT"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "AND"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "SWAP1"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "DUP4"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "ISZERO"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "ISZERO"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "MUL"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "OR"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "SWAP1"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "SSTORE"
										},
										{
											"begin": 1395,
											"end": 1414,
											"name": "POP"
										},
										{
											"begin": 1438,
											"end": 1448,
											"name": "DUP3"
										},
										{
											"begin": 1424,
											"end": 1430,
											"name": "DUP3"
										},
										{
											"begin": 1424,
											"end": 1435,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1424,
											"end": 1435,
											"name": "ADD"
										},
										{
											"begin": 1424,
											"end": 1435,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1424,
											"end": 1448,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1424,
											"end": 1448,
											"name": "EXP"
										},
										{
											"begin": 1424,
											"end": 1448,
											"name": "DUP2"
										},
										{
											"begin": 1424,
											"end": 1448,
											"name": "SLOAD"
										},
										{
											"begin": 1424,
											"end": 1448,
											"name": "DUP2"
										},
										{
											"begin": 1424,
											"end": 1448,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1424,
											"end": 1448,
											"name": "MUL"
										},
										{
											"begin": 1424,
											"end": 1448,
											"name": "NOT"
										},
										{
											"begin": 1424,
											"end": 1448,
											"name": "AND"
										},
										{
											"begin": 1424,
											"end": 1448,
											"name": "SWAP1"
										},
										{
											"begin": 1424,
											"end": 1448,
											"name": "DUP4"
										},
										{
											"begin": 1424,
											"end": 1448,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1424,
											"end": 1448,
											"name": "AND"
										},
										{
											"begin": 1424,
											"end": 1448,
											"name": "MUL"
										},
										{
											"begin": 1424,
											"end": 1448,
											"name": "OR"
										},
										{
											"begin": 1424,
											"end": 1448,
											"name": "SWAP1"
										},
										{
											"begin": 1424,
											"end": 1448,
											"name": "SSTORE"
										},
										{
											"begin": 1424,
											"end": 1448,
											"name": "POP"
										},
										{
											"begin": 1496,
											"end": 1502,
											"name": "DUP2"
										},
										{
											"begin": 1496,
											"end": 1509,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1496,
											"end": 1509,
											"name": "ADD"
										},
										{
											"begin": 1496,
											"end": 1509,
											"name": "SLOAD"
										},
										{
											"begin": 1461,
											"end": 1470,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1471,
											"end": 1481,
											"name": "DUP5"
										},
										{
											"begin": 1461,
											"end": 1482,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1461,
											"end": 1482,
											"name": "AND"
										},
										{
											"begin": 1461,
											"end": 1482,
											"name": "DUP2"
										},
										{
											"begin": 1461,
											"end": 1482,
											"name": "SLOAD"
										},
										{
											"begin": 1461,
											"end": 1482,
											"name": "DUP2"
										},
										{
											"begin": 1461,
											"end": 1482,
											"name": "LT"
										},
										{
											"begin": 1461,
											"end": 1482,
											"name": "ISZERO"
										},
										{
											"begin": 1461,
											"end": 1482,
											"name": "ISZERO"
										},
										{
											"begin": 1461,
											"end": 1482,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 1461,
											"end": 1482,
											"name": "JUMPI"
										},
										{
											"begin": 1461,
											"end": 1482,
											"name": "INVALID"
										},
										{
											"begin": 1461,
											"end": 1482,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 1461,
											"end": 1482,
											"name": "JUMPDEST"
										},
										{
											"begin": 1461,
											"end": 1482,
											"name": "SWAP1"
										},
										{
											"begin": 1461,
											"end": 1482,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1461,
											"end": 1482,
											"name": "MSTORE"
										},
										{
											"begin": 1461,
											"end": 1482,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1461,
											"end": 1482,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1461,
											"end": 1482,
											"name": "KECCAK256"
										},
										{
											"begin": 1461,
											"end": 1482,
											"name": "ADD"
										},
										{
											"begin": 1461,
											"end": 1492,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1461,
											"end": 1492,
											"name": "ADD"
										},
										{
											"begin": 1461,
											"end": 1492,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1461,
											"end": 1509,
											"name": "DUP3"
										},
										{
											"begin": 1461,
											"end": 1509,
											"name": "DUP3"
										},
										{
											"begin": 1461,
											"end": 1509,
											"name": "SLOAD"
										},
										{
											"begin": 1461,
											"end": 1509,
											"name": "ADD"
										},
										{
											"begin": 1461,
											"end": 1509,
											"name": "SWAP3"
										},
										{
											"begin": 1461,
											"end": 1509,
											"name": "POP"
										},
										{
											"begin": 1461,
											"end": 1509,
											"name": "POP"
										},
										{
											"begin": 1461,
											"end": 1509,
											"name": "DUP2"
										},
										{
											"begin": 1461,
											"end": 1509,
											"name": "SWAP1"
										},
										{
											"begin": 1461,
											"end": 1509,
											"name": "SSTORE"
										},
										{
											"begin": 1461,
											"end": 1509,
											"name": "POP"
										},
										{
											"begin": 1543,
											"end": 1553,
											"name": "PUSH",
											"value": "3C"
										},
										{
											"begin": 1531,
											"end": 1540,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1531,
											"end": 1540,
											"name": "SLOAD"
										},
										{
											"begin": 1531,
											"end": 1553,
											"name": "ADD"
										},
										{
											"begin": 1524,
											"end": 1527,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1524,
											"end": 1554,
											"name": "GT"
										},
										{
											"begin": 1520,
											"end": 1586,
											"name": "ISZERO"
										},
										{
											"begin": 1520,
											"end": 1586,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 1520,
											"end": 1586,
											"name": "JUMPI"
										},
										{
											"begin": 1576,
											"end": 1586,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1568,
											"end": 1573,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1568,
											"end": 1573,
											"name": "DUP1"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "EXP"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "SLOAD"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "MUL"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "NOT"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "AND"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "SWAP1"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "DUP4"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "DUP2"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "GT"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "ISZERO"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "JUMPI"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "INVALID"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "JUMPDEST"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "MUL"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "OR"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "SWAP1"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "SSTORE"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "POP"
										},
										{
											"begin": 1520,
											"end": 1586,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 1520,
											"end": 1586,
											"name": "JUMPDEST"
										},
										{
											"begin": 545,
											"end": 546,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 545,
											"end": 546,
											"name": "JUMPDEST"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "POP"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "POP"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "POP"
										},
										{
											"begin": 1191,
											"end": 1623,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "JUMPDEST"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "DUP1"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "SWAP1"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "SLOAD"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "SWAP1"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "EXP"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "SWAP1"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "DIV"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "AND"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "DUP2"
										},
										{
											"begin": 299,
											"end": 330,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"register(address)": "4420e486",
							"stage()": "c040e6b8",
							"vote(uint8)": "b3f98adc",
							"winningProposal()": "609ff1bd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"toVoter\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winningProposal\",\"outputs\":[{\"name\":\"_winningProposal\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toProposal\",\"type\":\"uint8\"}],\"name\":\"vote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stage\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_numProposals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"ballotV3.sol\":\"Ballot\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ballotV3.sol\":{\"keccak256\":\"0x02790bcf317edd69b79fbe77e820c959593df51ba47cb56e526348bdfab1bf4e\",\"urls\":[\"bzzr://4da6eb32948a7e970c3acebf419240c3ca51d5af06a07161d2d310e0d9eccfa3\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"ballotV3.sol": {
				"ast": {
					"absolutePath": "ballotV3.sol",
					"exportedSymbols": {
						"Ballot": [
							236
						]
					},
					"id": 237,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 236,
							"linearizedBaseContracts": [
								236
							],
							"name": "Ballot",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Ballot.Voter",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "weight",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "104:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "104:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "voted",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "125:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 4,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "125:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"name": "vote",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "145:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 6,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "145:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nodeType": "StructDefinition",
									"scope": 236,
									"src": "81:81:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Proposal",
									"id": 11,
									"members": [
										{
											"constant": false,
											"id": 10,
											"name": "voteCount",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "193:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "193:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nodeType": "StructDefinition",
									"scope": 236,
									"src": "167:47:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Stage",
									"id": 16,
									"members": [
										{
											"id": 12,
											"name": "Init",
											"nodeType": "EnumValue",
											"src": "231:4:0"
										},
										{
											"id": 13,
											"name": "Reg",
											"nodeType": "EnumValue",
											"src": "236:3:0"
										},
										{
											"id": 14,
											"name": "Vote",
											"nodeType": "EnumValue",
											"src": "241:4:0"
										},
										{
											"id": 15,
											"name": "Done",
											"nodeType": "EnumValue",
											"src": "247:4:0"
										}
									],
									"name": "Stage",
									"nodeType": "EnumDefinition",
									"src": "219:33:0"
								},
								{
									"constant": false,
									"id": 20,
									"name": "stage",
									"nodeType": "VariableDeclaration",
									"scope": 236,
									"src": "299:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Stage_$16",
										"typeString": "enum Ballot.Stage"
									},
									"typeName": {
										"contractScope": null,
										"id": 17,
										"name": "Stage",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 16,
										"src": "299:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Stage_$16",
											"typeString": "enum Ballot.Stage"
										}
									},
									"value": {
										"argumentTypes": null,
										"expression": {
											"argumentTypes": null,
											"id": 18,
											"name": "Stage",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 16,
											"src": "320:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
												"typeString": "type(enum Ballot.Stage)"
											}
										},
										"id": 19,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberName": "Init",
										"nodeType": "MemberAccess",
										"referencedDeclaration": null,
										"src": "320:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Stage_$16",
											"typeString": "enum Ballot.Stage"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 22,
									"name": "chairperson",
									"nodeType": "VariableDeclaration",
									"scope": 236,
									"src": "341:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 21,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "341:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 26,
									"name": "voters",
									"nodeType": "VariableDeclaration",
									"scope": 236,
									"src": "368:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
										"typeString": "mapping(address => struct Ballot.Voter)"
									},
									"typeName": {
										"id": 25,
										"keyType": {
											"id": 23,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "376:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "368:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
											"typeString": "mapping(address => struct Ballot.Voter)"
										},
										"valueType": {
											"contractScope": null,
											"id": 24,
											"name": "Voter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 8,
											"src": "387:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
												"typeString": "struct Ballot.Voter"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 29,
									"name": "proposals",
									"nodeType": "VariableDeclaration",
									"scope": 236,
									"src": "406:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
										"typeString": "struct Ballot.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 27,
											"name": "Proposal",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 11,
											"src": "406:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$11_storage_ptr",
												"typeString": "struct Ballot.Proposal"
											}
										},
										"id": 28,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "406:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage_ptr",
											"typeString": "struct Ballot.Proposal[]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 31,
									"name": "startTime",
									"nodeType": "VariableDeclaration",
									"scope": 236,
									"src": "439:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 30,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "439:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "499:54:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_Stage_$16",
																"typeString": "enum Ballot.Stage"
															},
															"id": 38,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 36,
																"name": "stage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "517:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$16",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 37,
																"name": "reqStage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 33,
																"src": "526:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$16",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"src": "517:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															254,
															255
														],
														"referencedDeclaration": 254,
														"src": "509:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "509:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "509:26:0"
											},
											{
												"id": 41,
												"nodeType": "PlaceholderStatement",
												"src": "545:1:0"
											}
										]
									},
									"documentation": null,
									"id": 43,
									"name": "validStage",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"name": "reqStage",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "484:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Stage_$16",
													"typeString": "enum Ballot.Stage"
												},
												"typeName": {
													"contractScope": null,
													"id": 32,
													"name": "Stage",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 16,
													"src": "484:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "483:16:0"
									},
									"src": "464:89:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "605:193:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 48,
														"name": "chairperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "615:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 49,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "629:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 50,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "629:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "615:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "615:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 53,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "649:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 55,
															"indexExpression": {
																"argumentTypes": null,
																"id": 54,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "656:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "649:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "649:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "678:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "649:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "649:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 60,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "690:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 62,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "690:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 63,
														"name": "_numProposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "709:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "690:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 65,
												"nodeType": "ExpressionStatement",
												"src": "690:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 66,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "732:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 67,
															"name": "Stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "740:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																"typeString": "type(enum Ballot.Stage)"
															}
														},
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Reg",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "740:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"src": "732:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "732:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 71,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "759:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 72,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "771:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "759:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "759:15:0"
											},
											{
												"expression": null,
												"functionReturnParameters": 47,
												"id": 75,
												"nodeType": "Return",
												"src": "785:7:0"
											}
										]
									},
									"documentation": null,
									"id": 77,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"name": "_numProposals",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "577:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 44,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "577:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "576:21:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:0:0"
									},
									"scope": 236,
									"src": "565:233:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "878:306:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 86,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 251,
																"src": "893:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "893:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 88,
															"name": "chairperson",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "907:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "893:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 90,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "922:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 92,
															"indexExpression": {
																"argumentTypes": null,
																"id": 91,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "929:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "922:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 93,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "922:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "893:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 96,
												"nodeType": "IfStatement",
												"src": "889:76:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 85,
													"id": 95,
													"nodeType": "Return",
													"src": "958:7:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 97,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "975:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 99,
															"indexExpression": {
																"argumentTypes": null,
																"id": 98,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "982:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "975:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 100,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "975:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1000:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "975:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "975:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 104,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1011:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 106,
															"indexExpression": {
																"argumentTypes": null,
																"id": 105,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "1018:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1011:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 107,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1011:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 108,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1035:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1011:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "1011:29:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 111,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "1054:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 112,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "1061:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1073:10:0",
																	"subdenomination": "seconds",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1061:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 115,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1060:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1054:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 127,
												"nodeType": "IfStatement",
												"src": "1050:109:0",
												"trueBody": {
													"id": 126,
													"nodeType": "Block",
													"src": "1086:73:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 117,
																	"name": "stage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1100:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$16",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 118,
																		"name": "Stage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 16,
																		"src": "1108:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																			"typeString": "type(enum Ballot.Stage)"
																		}
																	},
																	"id": 119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "Vote",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1108:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$16",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"src": "1100:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$16",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"id": 121,
															"nodeType": "ExpressionStatement",
															"src": "1100:18:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 122,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "1133:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 123,
																	"name": "now",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 253,
																	"src": "1145:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1133:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 125,
															"nodeType": "ExpressionStatement",
															"src": "1133:15:0"
														}
													]
												}
											},
											{
												"expression": null,
												"functionReturnParameters": 85,
												"id": 128,
												"nodeType": "Return",
												"src": "1169:7:0"
											}
										]
									},
									"documentation": null,
									"id": 130,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 82,
														"name": "Stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "867:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
															"typeString": "type(enum Ballot.Stage)"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Reg",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "867:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													}
												}
											],
											"id": 84,
											"modifierName": {
												"argumentTypes": null,
												"id": 81,
												"name": "validStage",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 43,
												"src": "856:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Stage_$16_$",
													"typeString": "modifier (enum Ballot.Stage)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "856:21:0"
										}
									],
									"name": "register",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"name": "toVoter",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "832:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "831:17:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "878:0:0"
									},
									"scope": 236,
									"src": "814:370:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "1252:371:0",
										"statements": [
											{
												"assignments": [
													140
												],
												"declarations": [
													{
														"constant": false,
														"id": 140,
														"name": "sender",
														"nodeType": "VariableDeclaration",
														"scope": 189,
														"src": "1262:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"contractScope": null,
															"id": 139,
															"name": "Voter",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 8,
															"src": "1262:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 145,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 141,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1285:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 144,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 142,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "1292:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1292:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1285:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$8_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1262:41:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 146,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "1317:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1317:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 148,
															"name": "toProposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "1333:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 149,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1347:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 150,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1347:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1333:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1317:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 154,
												"nodeType": "IfStatement",
												"src": "1313:72:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 138,
													"id": 153,
													"nodeType": "Return",
													"src": "1378:7:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 155,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "1395:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 157,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1395:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1410:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1395:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "1395:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 161,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "1424:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 163,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "vote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "1424:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 164,
														"name": "toProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "1438:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1424:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 166,
												"nodeType": "ExpressionStatement",
												"src": "1424:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 167,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1461:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 169,
															"indexExpression": {
																"argumentTypes": null,
																"id": 168,
																"name": "toProposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "1471:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1461:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$11_storage",
																"typeString": "struct Ballot.Proposal storage ref"
															}
														},
														"id": 170,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voteCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "1461:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 171,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "1496:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 172,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1496:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1461:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "1461:48:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 175,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "1524:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 176,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "1531:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3630",
																	"id": 177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1543:10:0",
																	"subdenomination": "seconds",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_60_by_1",
																		"typeString": "int_const 60"
																	},
																	"value": "60"
																},
																"src": "1531:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 179,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1530:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1524:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 186,
												"nodeType": "IfStatement",
												"src": "1520:66:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 181,
															"name": "stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "1568:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Stage_$16",
																"typeString": "enum Ballot.Stage"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 182,
																"name": "Stage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 16,
																"src": "1576:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																	"typeString": "type(enum Ballot.Stage)"
																}
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "Done",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1576:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Stage_$16",
																"typeString": "enum Ballot.Stage"
															}
														},
														"src": "1568:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"id": 185,
													"nodeType": "ExpressionStatement",
													"src": "1568:18:0"
												}
											},
											{
												"expression": null,
												"functionReturnParameters": 138,
												"id": 187,
												"nodeType": "Return",
												"src": "1610:7:0"
											}
										]
									},
									"documentation": null,
									"id": 189,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 135,
														"name": "Stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "1241:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
															"typeString": "type(enum Ballot.Stage)"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Vote",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1241:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													}
												}
											],
											"id": 137,
											"modifierName": {
												"argumentTypes": null,
												"id": 134,
												"name": "validStage",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 43,
												"src": "1230:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Stage_$16_$",
													"typeString": "modifier (enum Ballot.Stage)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1230:22:0"
										}
									],
									"name": "vote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"name": "toProposal",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1205:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 131,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1205:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1204:18:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1252:0:0"
									},
									"scope": 236,
									"src": "1191:432:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "1726:314:0",
										"statements": [
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"name": "winningVoteCount",
														"nodeType": "VariableDeclaration",
														"scope": 235,
														"src": "1736:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 198,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1736:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 201,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1763:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1736:28:0"
											},
											{
												"body": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 213,
																	"name": "proposals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "1845:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																		"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																	}
																},
																"id": 215,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 214,
																	"name": "prop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "1855:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1845:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$11_storage",
																	"typeString": "struct Ballot.Proposal storage ref"
																}
															},
															"id": 216,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voteCount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 10,
															"src": "1845:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"id": 217,
															"name": "winningVoteCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "1873:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1845:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 231,
													"nodeType": "IfStatement",
													"src": "1841:168:0",
													"trueBody": {
														"id": 230,
														"nodeType": "Block",
														"src": "1891:118:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 219,
																		"name": "winningVoteCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 199,
																		"src": "1909:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 220,
																				"name": "proposals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 29,
																				"src": "1928:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																					"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																				}
																			},
																			"id": 222,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 221,
																				"name": "prop",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 203,
																				"src": "1938:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1928:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$11_storage",
																				"typeString": "struct Ballot.Proposal storage ref"
																			}
																		},
																		"id": 223,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "voteCount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 10,
																		"src": "1928:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1909:44:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 225,
																"nodeType": "ExpressionStatement",
																"src": "1909:44:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 226,
																		"name": "_winningProposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 196,
																		"src": "1971:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"id": 227,
																		"name": "prop",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 203,
																		"src": "1990:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "1971:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 229,
																"nodeType": "ExpressionStatement",
																"src": "1971:23:0"
															}
														]
													}
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 206,
														"name": "prop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "1796:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 207,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1803:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 208,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1803:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1796:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 232,
												"initializationExpression": {
													"assignments": [
														203
													],
													"declarations": [
														{
															"constant": false,
															"id": 203,
															"name": "prop",
															"nodeType": "VariableDeclaration",
															"scope": 235,
															"src": "1780:10:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 202,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "1780:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 205,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1793:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1780:14:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1821:6:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 210,
															"name": "prop",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "1821:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 212,
													"nodeType": "ExpressionStatement",
													"src": "1821:6:0"
												},
												"nodeType": "ForStatement",
												"src": "1775:234:0"
											},
											{
												"expression": null,
												"functionReturnParameters": 197,
												"id": 233,
												"nodeType": "Return",
												"src": "2027:7:0"
											}
										]
									},
									"documentation": null,
									"id": 235,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 192,
														"name": "Stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "1675:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
															"typeString": "type(enum Ballot.Stage)"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Done",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1675:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													}
												}
											],
											"id": 194,
											"modifierName": {
												"argumentTypes": null,
												"id": 191,
												"name": "validStage",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 43,
												"src": "1664:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Stage_$16_$",
													"typeString": "modifier (enum Ballot.Stage)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1664:22:0"
										}
									],
									"name": "winningProposal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1654:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"name": "_winningProposal",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "1701:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 195,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1701:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1700:24:0"
									},
									"scope": 236,
									"src": "1630:410:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 237,
							"src": "58:1984:0"
						}
					],
					"src": "32:2010:0"
				},
				"id": 0
			}
		}
	}
}