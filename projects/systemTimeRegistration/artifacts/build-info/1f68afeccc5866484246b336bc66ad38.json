{
	"id": "1f68afeccc5866484246b336bc66ad38",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"systemTimeRegistration.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.4.0;\n\ncontract Agent {\n\n    struct Data {\n        uint enterDate;\n        uint exitDate;\n        bool isIn;\n    }\n\n    address private coordinator;\n    address[] private addrRegistered;\n    mapping(address => Data) private agents;\n\n\n    constructor() public {\n        coordinator = msg.sender;\n    }\n\n    event TrueFalse (\n        address indexed lastInvoker,\n        address indexed _id,\n        bool _success\n    );\n\n    modifier onlyCoordinator() {\n        require(msg.sender == coordinator);\n        _;\n    }\n\n    function register(address authorized) public onlyCoordinator {\n        addrRegistered.push(authorized);\n        return;\n    }\n\n    function registerMultiple(address[] authorized) public onlyCoordinator {\n        for(uint i = 0; i <  authorized.length; i++)\n            addrRegistered.push(authorized[i]);\n        \n        return;\n    }\n\n\n    function logStatus() view public onlyCoordinator {\n\n    }\n\n\n    function isAuthorized(address caller) view private returns (bool _bool){\n        uint i = 0;\n\n        while(i < addrRegistered.length)\n            if(addrRegistered[i] == caller)\n                _bool = true;\n\n        return _bool;\n    }\n\n\n    function start() public {\n        if(isAuthorized(msg.sender) == false)\n            return;\n\n        agents[msg.sender].enterDate = now;\n    }\n\n    function exit() public {\n        if(isAuthorized(msg.sender) == false)\n            return;\n\n        if(agents[msg.sender].isIn == false)\n            return;\n        \n        agents[msg.sender].exitDate = now;\n        agents[msg.sender].isIn = false;\n\n        return;\n    }\n\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"systemTimeRegistration.sol": {
				"Agent": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "authorized",
									"type": "address"
								}
							],
							"name": "register",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "logStatus",
							"outputs": [],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "authorized",
									"type": "address[]"
								}
							],
							"name": "registerMultiple",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "start",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "exit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"name": "lastInvoker",
									"type": "address"
								},
								{
									"indexed": true,
									"name": "_id",
									"type": "address"
								},
								{
									"indexed": false,
									"name": "_success",
									"type": "bool"
								}
							],
							"name": "TrueFalse",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"systemTimeRegistration.sol\":57:1643  contract Agent {... */\n  mstore(0x40, 0x80)\n    /* \"systemTimeRegistration.sol\":288:350  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"systemTimeRegistration.sol\":288:350  constructor() public {... */\n  pop\n    /* \"systemTimeRegistration.sol\":333:343  msg.sender */\n  caller\n    /* \"systemTimeRegistration.sol\":319:330  coordinator */\n  0x0\n  dup1\n    /* \"systemTimeRegistration.sol\":319:343  coordinator = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"systemTimeRegistration.sol\":57:1643  contract Agent {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"systemTimeRegistration.sol\":57:1643  contract Agent {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x4420e486\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x71dd9322\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa3ba1116\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xbe9a6555\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xe9fad8ee\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"systemTimeRegistration.sol\":569:694  function register(address authorized) public onlyCoordinator {... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_7:\n        /* \"systemTimeRegistration.sol\":569:694  function register(address authorized) public onlyCoordinator {... */\n      pop\n      tag_8\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_9)\n    tag_8:\n      stop\n        /* \"systemTimeRegistration.sol\":911:968  function logStatus() view public onlyCoordinator {... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_10:\n        /* \"systemTimeRegistration.sol\":911:968  function logStatus() view public onlyCoordinator {... */\n      pop\n      tag_11\n      jump(tag_12)\n    tag_11:\n      stop\n        /* \"systemTimeRegistration.sol\":700:904  function registerMultiple(address[] authorized) public onlyCoordinator {... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_13:\n        /* \"systemTimeRegistration.sol\":700:904  function registerMultiple(address[] authorized) public onlyCoordinator {... */\n      pop\n      tag_14\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup3\n      add\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      dup3\n      add\n      swap2\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_15)\n    tag_14:\n      stop\n        /* \"systemTimeRegistration.sol\":1219:1361  function start() public {... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_16:\n        /* \"systemTimeRegistration.sol\":1219:1361  function start() public {... */\n      pop\n      tag_17\n      jump(tag_18)\n    tag_17:\n      stop\n        /* \"systemTimeRegistration.sol\":1367:1639  function exit() public {... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_19\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_19:\n        /* \"systemTimeRegistration.sol\":1367:1639  function exit() public {... */\n      pop\n      tag_20\n      jump(tag_21)\n    tag_20:\n      stop\n        /* \"systemTimeRegistration.sol\":569:694  function register(address authorized) public onlyCoordinator {... */\n    tag_9:\n        /* \"systemTimeRegistration.sol\":533:544  coordinator */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"systemTimeRegistration.sol\":519:544  msg.sender == coordinator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"systemTimeRegistration.sol\":519:529  msg.sender */\n      caller\n        /* \"systemTimeRegistration.sol\":519:544  msg.sender == coordinator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"systemTimeRegistration.sol\":511:545  require(msg.sender == coordinator) */\n      iszero\n      iszero\n      tag_23\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_23:\n        /* \"systemTimeRegistration.sol\":640:654  addrRegistered */\n      0x1\n        /* \"systemTimeRegistration.sol\":660:670  authorized */\n      dup2\n        /* \"systemTimeRegistration.sol\":640:671  addrRegistered.push(authorized) */\n      swap1\n      dup1\n        /* \"--CODEGEN--\":39:40   */\n      0x1\n        /* \"--CODEGEN--\":33:36   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      sload\n        /* \"--CODEGEN--\":23:41   */\n      add\n        /* \"--CODEGEN--\":57:67   */\n      dup1\n        /* \"--CODEGEN--\":52:55   */\n      dup3\n        /* \"--CODEGEN--\":45:68   */\n      sstore\n        /* \"--CODEGEN--\":79:89   */\n      dup1\n        /* \"--CODEGEN--\":72:89   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:93   */\n      pop\n        /* \"systemTimeRegistration.sol\":640:671  addrRegistered.push(authorized) */\n      swap1\n      0x1\n      dup3\n      sub\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      0x0\n      swap1\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      swap2\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"systemTimeRegistration.sol\":569:694  function register(address authorized) public onlyCoordinator {... */\n      pop\n      jump\t// out\n        /* \"systemTimeRegistration.sol\":911:968  function logStatus() view public onlyCoordinator {... */\n    tag_12:\n        /* \"systemTimeRegistration.sol\":533:544  coordinator */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"systemTimeRegistration.sol\":519:544  msg.sender == coordinator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"systemTimeRegistration.sol\":519:529  msg.sender */\n      caller\n        /* \"systemTimeRegistration.sol\":519:544  msg.sender == coordinator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"systemTimeRegistration.sol\":511:545  require(msg.sender == coordinator) */\n      iszero\n      iszero\n      tag_27\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_27:\n        /* \"systemTimeRegistration.sol\":911:968  function logStatus() view public onlyCoordinator {... */\n      jump\t// out\n        /* \"systemTimeRegistration.sol\":700:904  function registerMultiple(address[] authorized) public onlyCoordinator {... */\n    tag_15:\n        /* \"systemTimeRegistration.sol\":785:791  uint i */\n      0x0\n        /* \"systemTimeRegistration.sol\":533:544  coordinator */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"systemTimeRegistration.sol\":519:544  msg.sender == coordinator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"systemTimeRegistration.sol\":519:529  msg.sender */\n      caller\n        /* \"systemTimeRegistration.sol\":519:544  msg.sender == coordinator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"systemTimeRegistration.sol\":511:545  require(msg.sender == coordinator) */\n      iszero\n      iszero\n      tag_30\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_30:\n        /* \"systemTimeRegistration.sol\":794:795  0 */\n      0x0\n        /* \"systemTimeRegistration.sol\":785:795  uint i = 0 */\n      swap1\n      pop\n        /* \"systemTimeRegistration.sol\":781:872  for(uint i = 0; i <  authorized.length; i++)... */\n    tag_32:\n        /* \"systemTimeRegistration.sol\":802:812  authorized */\n      dup2\n        /* \"systemTimeRegistration.sol\":802:819  authorized.length */\n      mload\n        /* \"systemTimeRegistration.sol\":797:798  i */\n      dup2\n        /* \"systemTimeRegistration.sol\":797:819  i <  authorized.length */\n      lt\n        /* \"systemTimeRegistration.sol\":781:872  for(uint i = 0; i <  authorized.length; i++)... */\n      iszero\n      tag_33\n      jumpi\n        /* \"systemTimeRegistration.sol\":838:852  addrRegistered */\n      0x1\n        /* \"systemTimeRegistration.sol\":858:868  authorized */\n      dup3\n        /* \"systemTimeRegistration.sol\":869:870  i */\n      dup3\n        /* \"systemTimeRegistration.sol\":858:871  authorized[i] */\n      dup2\n      mload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_35\n      jumpi\n      invalid\n    tag_35:\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      add\n      mload\n        /* \"systemTimeRegistration.sol\":838:872  addrRegistered.push(authorized[i]) */\n      swap1\n      dup1\n        /* \"--CODEGEN--\":39:40   */\n      0x1\n        /* \"--CODEGEN--\":33:36   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      sload\n        /* \"--CODEGEN--\":23:41   */\n      add\n        /* \"--CODEGEN--\":57:67   */\n      dup1\n        /* \"--CODEGEN--\":52:55   */\n      dup3\n        /* \"--CODEGEN--\":45:68   */\n      sstore\n        /* \"--CODEGEN--\":79:89   */\n      dup1\n        /* \"--CODEGEN--\":72:89   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:93   */\n      pop\n        /* \"systemTimeRegistration.sol\":838:872  addrRegistered.push(authorized[i]) */\n      swap1\n      0x1\n      dup3\n      sub\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      0x0\n      swap1\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      swap2\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"systemTimeRegistration.sol\":821:824  i++ */\n      dup1\n      dup1\n      0x1\n      add\n      swap2\n      pop\n      pop\n        /* \"systemTimeRegistration.sol\":781:872  for(uint i = 0; i <  authorized.length; i++)... */\n      jump(tag_32)\n    tag_33:\n        /* \"systemTimeRegistration.sol\":700:904  function registerMultiple(address[] authorized) public onlyCoordinator {... */\n      pop\n      pop\n      jump\t// out\n        /* \"systemTimeRegistration.sol\":1219:1361  function start() public {... */\n    tag_18:\n        /* \"systemTimeRegistration.sol\":1284:1289  false */\n      0x0\n        /* \"systemTimeRegistration.sol\":1256:1289  isAuthorized(msg.sender) == false */\n      iszero\n      iszero\n        /* \"systemTimeRegistration.sol\":1256:1280  isAuthorized(msg.sender) */\n      tag_38\n        /* \"systemTimeRegistration.sol\":1269:1279  msg.sender */\n      caller\n        /* \"systemTimeRegistration.sol\":1256:1268  isAuthorized */\n      tag_39\n        /* \"systemTimeRegistration.sol\":1256:1280  isAuthorized(msg.sender) */\n      jump\t// in\n    tag_38:\n        /* \"systemTimeRegistration.sol\":1256:1289  isAuthorized(msg.sender) == false */\n      iszero\n      iszero\n      eq\n        /* \"systemTimeRegistration.sol\":1253:1310  if(isAuthorized(msg.sender) == false)... */\n      iszero\n      tag_40\n      jumpi\n        /* \"systemTimeRegistration.sol\":1303:1310  return; */\n      jump(tag_37)\n        /* \"systemTimeRegistration.sol\":1253:1310  if(isAuthorized(msg.sender) == false)... */\n    tag_40:\n        /* \"systemTimeRegistration.sol\":1351:1354  now */\n      timestamp\n        /* \"systemTimeRegistration.sol\":1320:1326  agents */\n      0x2\n        /* \"systemTimeRegistration.sol\":1320:1338  agents[msg.sender] */\n      0x0\n        /* \"systemTimeRegistration.sol\":1327:1337  msg.sender */\n      caller\n        /* \"systemTimeRegistration.sol\":1320:1338  agents[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"systemTimeRegistration.sol\":1320:1348  agents[msg.sender].enterDate */\n      0x0\n      add\n        /* \"systemTimeRegistration.sol\":1320:1354  agents[msg.sender].enterDate = now */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"systemTimeRegistration.sol\":1219:1361  function start() public {... */\n    tag_37:\n      jump\t// out\n        /* \"systemTimeRegistration.sol\":1367:1639  function exit() public {... */\n    tag_21:\n        /* \"systemTimeRegistration.sol\":1431:1436  false */\n      0x0\n        /* \"systemTimeRegistration.sol\":1403:1436  isAuthorized(msg.sender) == false */\n      iszero\n      iszero\n        /* \"systemTimeRegistration.sol\":1403:1427  isAuthorized(msg.sender) */\n      tag_42\n        /* \"systemTimeRegistration.sol\":1416:1426  msg.sender */\n      caller\n        /* \"systemTimeRegistration.sol\":1403:1415  isAuthorized */\n      tag_39\n        /* \"systemTimeRegistration.sol\":1403:1427  isAuthorized(msg.sender) */\n      jump\t// in\n    tag_42:\n        /* \"systemTimeRegistration.sol\":1403:1436  isAuthorized(msg.sender) == false */\n      iszero\n      iszero\n      eq\n        /* \"systemTimeRegistration.sol\":1400:1457  if(isAuthorized(msg.sender) == false)... */\n      iszero\n      tag_43\n      jumpi\n        /* \"systemTimeRegistration.sol\":1450:1457  return; */\n      jump(tag_41)\n        /* \"systemTimeRegistration.sol\":1400:1457  if(isAuthorized(msg.sender) == false)... */\n    tag_43:\n        /* \"systemTimeRegistration.sol\":1497:1502  false */\n      0x0\n        /* \"systemTimeRegistration.sol\":1470:1502  agents[msg.sender].isIn == false */\n      iszero\n      iszero\n        /* \"systemTimeRegistration.sol\":1470:1476  agents */\n      0x2\n        /* \"systemTimeRegistration.sol\":1470:1488  agents[msg.sender] */\n      0x0\n        /* \"systemTimeRegistration.sol\":1477:1487  msg.sender */\n      caller\n        /* \"systemTimeRegistration.sol\":1470:1488  agents[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"systemTimeRegistration.sol\":1470:1493  agents[msg.sender].isIn */\n      0x2\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"systemTimeRegistration.sol\":1470:1502  agents[msg.sender].isIn == false */\n      iszero\n      iszero\n      eq\n        /* \"systemTimeRegistration.sol\":1467:1523  if(agents[msg.sender].isIn == false)... */\n      iszero\n      tag_44\n      jumpi\n        /* \"systemTimeRegistration.sol\":1516:1523  return; */\n      jump(tag_41)\n        /* \"systemTimeRegistration.sol\":1467:1523  if(agents[msg.sender].isIn == false)... */\n    tag_44:\n        /* \"systemTimeRegistration.sol\":1571:1574  now */\n      timestamp\n        /* \"systemTimeRegistration.sol\":1541:1547  agents */\n      0x2\n        /* \"systemTimeRegistration.sol\":1541:1559  agents[msg.sender] */\n      0x0\n        /* \"systemTimeRegistration.sol\":1548:1558  msg.sender */\n      caller\n        /* \"systemTimeRegistration.sol\":1541:1559  agents[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"systemTimeRegistration.sol\":1541:1568  agents[msg.sender].exitDate */\n      0x1\n      add\n        /* \"systemTimeRegistration.sol\":1541:1574  agents[msg.sender].exitDate = now */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"systemTimeRegistration.sol\":1610:1615  false */\n      0x0\n        /* \"systemTimeRegistration.sol\":1584:1590  agents */\n      0x2\n        /* \"systemTimeRegistration.sol\":1584:1602  agents[msg.sender] */\n      0x0\n        /* \"systemTimeRegistration.sol\":1591:1601  msg.sender */\n      caller\n        /* \"systemTimeRegistration.sol\":1584:1602  agents[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"systemTimeRegistration.sol\":1584:1607  agents[msg.sender].isIn */\n      0x2\n      add\n      0x0\n        /* \"systemTimeRegistration.sol\":1584:1615  agents[msg.sender].isIn = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"systemTimeRegistration.sol\":1367:1639  function exit() public {... */\n    tag_41:\n      jump\t// out\n        /* \"systemTimeRegistration.sol\":975:1212  function isAuthorized(address caller) view private returns (bool _bool){... */\n    tag_39:\n        /* \"systemTimeRegistration.sol\":1035:1045  bool _bool */\n      0x0\n        /* \"systemTimeRegistration.sol\":1056:1062  uint i */\n      dup1\n        /* \"systemTimeRegistration.sol\":1065:1066  0 */\n      0x0\n        /* \"systemTimeRegistration.sol\":1056:1066  uint i = 0 */\n      swap1\n      pop\n        /* \"systemTimeRegistration.sol\":1077:1182  while(i < addrRegistered.length)... */\n    tag_46:\n        /* \"systemTimeRegistration.sol\":1087:1101  addrRegistered */\n      0x1\n        /* \"systemTimeRegistration.sol\":1087:1108  addrRegistered.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"systemTimeRegistration.sol\":1083:1084  i */\n      dup2\n        /* \"systemTimeRegistration.sol\":1083:1108  i < addrRegistered.length */\n      lt\n        /* \"systemTimeRegistration.sol\":1077:1182  while(i < addrRegistered.length)... */\n      iszero\n      tag_47\n      jumpi\n        /* \"systemTimeRegistration.sol\":1146:1152  caller */\n      dup3\n        /* \"systemTimeRegistration.sol\":1125:1152  addrRegistered[i] == caller */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"systemTimeRegistration.sol\":1125:1139  addrRegistered */\n      0x1\n        /* \"systemTimeRegistration.sol\":1140:1141  i */\n      dup3\n        /* \"systemTimeRegistration.sol\":1125:1142  addrRegistered[i] */\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_48\n      jumpi\n      invalid\n    tag_48:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"systemTimeRegistration.sol\":1125:1152  addrRegistered[i] == caller */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"systemTimeRegistration.sol\":1122:1182  if(addrRegistered[i] == caller)... */\n      iszero\n      tag_50\n      jumpi\n        /* \"systemTimeRegistration.sol\":1178:1182  true */\n      0x1\n        /* \"systemTimeRegistration.sol\":1170:1182  _bool = true */\n      swap2\n      pop\n        /* \"systemTimeRegistration.sol\":1122:1182  if(addrRegistered[i] == caller)... */\n    tag_50:\n        /* \"systemTimeRegistration.sol\":1077:1182  while(i < addrRegistered.length)... */\n      jump(tag_46)\n    tag_47:\n        /* \"systemTimeRegistration.sol\":1200:1205  _bool */\n      dup2\n        /* \"systemTimeRegistration.sol\":1193:1205  return _bool */\n      swap2\n      pop\n        /* \"systemTimeRegistration.sol\":975:1212  function isAuthorized(address caller) view private returns (bool _bool){... */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058205551e7a5c9543dd6e20dd89a7b198a00c6f6cb94c14cc77117eca6befb99cf1c0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506105bf806100606000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634420e4861461007257806371dd9322146100b5578063a3ba1116146100cc578063be9a655514610132578063e9fad8ee14610149575b600080fd5b34801561007e57600080fd5b506100b3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610160565b005b3480156100c157600080fd5b506100ca610224565b005b3480156100d857600080fd5b5061013060048036038101908080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050610281565b005b34801561013e57600080fd5b5061014761037a565b005b34801561015557600080fd5b5061015e6103de565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101bb57600080fd5b60018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561027f57600080fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156102de57600080fd5b600090505b815181101561037657600182828151811015156102fc57fe5b9060200190602002015190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505080806001019150506102e3565b5050565b60001515610387336104fe565b15151415610394576103dc565b42600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055505b565b600015156103eb336104fe565b151514156103f8576104fc565b60001515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615151415610459576104fc565b42600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff0219169083151502179055505b565b600080600090505b60018054905081101561058a578273ffffffffffffffffffffffffffffffffffffffff1660018281548110151561053957fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561058557600191505b610506565b819150509190505600a165627a7a723058205551e7a5c9543dd6e20dd89a7b198a00c6f6cb94c14cc77117eca6befb99cf1c0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x5BF DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6D JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x4420E486 EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0x71DD9322 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xA3BA1116 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x149 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x160 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCA PUSH2 0x224 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x281 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x37A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15E PUSH2 0x3DE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x376 JUMPI PUSH1 0x1 DUP3 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2FC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x2E3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH2 0x387 CALLER PUSH2 0x4FE JUMP JUMPDEST ISZERO ISZERO EQ ISZERO PUSH2 0x394 JUMPI PUSH2 0x3DC JUMP JUMPDEST TIMESTAMP PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH2 0x3EB CALLER PUSH2 0x4FE JUMP JUMPDEST ISZERO ISZERO EQ ISZERO PUSH2 0x3F8 JUMPI PUSH2 0x4FC JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x459 JUMPI PUSH2 0x4FC JUMP JUMPDEST TIMESTAMP PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x58A JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x539 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x585 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST PUSH2 0x506 JUMP JUMPDEST DUP2 SWAP2 POP POP SWAP2 SWAP1 POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SSTORE MLOAD 0xe7 0xa5 0xc9 SLOAD RETURNDATASIZE 0xd6 0xe2 0xd 0xd8 SWAP11 PUSH28 0x198A00C6F6CB94C14CC77117ECA6BEFB99CF1C002900000000000000 ",
							"sourceMap": "57:1586:0:-;;;288:62;8:9:-1;5:2;;;30:1;27;20:12;5:2;288:62:0;333:10;319:11;;:24;;;;;;;;;;;;;;;;;;57:1586;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634420e4861461007257806371dd9322146100b5578063a3ba1116146100cc578063be9a655514610132578063e9fad8ee14610149575b600080fd5b34801561007e57600080fd5b506100b3600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610160565b005b3480156100c157600080fd5b506100ca610224565b005b3480156100d857600080fd5b5061013060048036038101908080359060200190820180359060200190808060200260200160405190810160405280939291908181526020018383602002808284378201915050505050509192919290505050610281565b005b34801561013e57600080fd5b5061014761037a565b005b34801561015557600080fd5b5061015e6103de565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101bb57600080fd5b60018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561027f57600080fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156102de57600080fd5b600090505b815181101561037657600182828151811015156102fc57fe5b9060200190602002015190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505080806001019150506102e3565b5050565b60001515610387336104fe565b15151415610394576103dc565b42600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055505b565b600015156103eb336104fe565b151514156103f8576104fc565b60001515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615151415610459576104fc565b42600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff0219169083151502179055505b565b600080600090505b60018054905081101561058a578273ffffffffffffffffffffffffffffffffffffffff1660018281548110151561053957fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561058557600191505b610506565b819150509190505600a165627a7a723058205551e7a5c9543dd6e20dd89a7b198a00c6f6cb94c14cc77117eca6befb99cf1c0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6D JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x4420E486 EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0x71DD9322 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xA3BA1116 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0xBE9A6555 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x149 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x160 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCA PUSH2 0x224 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x281 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x37A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15E PUSH2 0x3DE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x27F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x2DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x376 JUMPI PUSH1 0x1 DUP3 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2FC JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x2E3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH2 0x387 CALLER PUSH2 0x4FE JUMP JUMPDEST ISZERO ISZERO EQ ISZERO PUSH2 0x394 JUMPI PUSH2 0x3DC JUMP JUMPDEST TIMESTAMP PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH2 0x3EB CALLER PUSH2 0x4FE JUMP JUMPDEST ISZERO ISZERO EQ ISZERO PUSH2 0x3F8 JUMPI PUSH2 0x4FC JUMP JUMPDEST PUSH1 0x0 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ ISZERO PUSH2 0x459 JUMPI PUSH2 0x4FC JUMP JUMPDEST TIMESTAMP PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x58A JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x539 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x585 JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST PUSH2 0x506 JUMP JUMPDEST DUP2 SWAP2 POP POP SWAP2 SWAP1 POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SSTORE MLOAD 0xe7 0xa5 0xc9 SLOAD RETURNDATASIZE 0xd6 0xe2 0xd 0xd8 SWAP11 PUSH28 0x198A00C6F6CB94C14CC77117ECA6BEFB99CF1C002900000000000000 ",
							"sourceMap": "57:1586:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;569:125;;8:9:-1;5:2;;;30:1;27;20:12;5:2;569:125:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;911:57;;8:9:-1;5:2;;;30:1;27;20:12;5:2;911:57:0;;;;;;700:204;;8:9:-1;5:2;;;30:1;27;20:12;5:2;700:204:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1219:142;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1219:142:0;;;;;;1367:272;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1367:272:0;;;;;;569:125;533:11;;;;;;;;;;;519:25;;:10;:25;;;511:34;;;;;;;;640:14;660:10;640:31;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;640:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;569:125;:::o;911:57::-;533:11;;;;;;;;;;;519:25;;:10;:25;;;511:34;;;;;;;;911:57::o;700:204::-;785:6;533:11;;;;;;;;;;;519:25;;:10;:25;;;511:34;;;;;;;;794:1;785:10;;781:91;802:10;:17;797:1;:22;781:91;;;838:14;858:10;869:1;858:13;;;;;;;;;;;;;;;;;;838:34;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;838:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;821:3;;;;;;;781:91;;;700:204;;:::o;1219:142::-;1284:5;1256:33;;:24;1269:10;1256:12;:24::i;:::-;:33;;;1253:57;;;1303:7;;1253:57;1351:3;1320:6;:18;1327:10;1320:18;;;;;;;;;;;;;;;:28;;:34;;;;1219:142;:::o;1367:272::-;1431:5;1403:33;;:24;1416:10;1403:12;:24::i;:::-;:33;;;1400:57;;;1450:7;;1400:57;1497:5;1470:32;;:6;:18;1477:10;1470:18;;;;;;;;;;;;;;;:23;;;;;;;;;;;;:32;;;1467:56;;;1516:7;;1467:56;1571:3;1541:6;:18;1548:10;1541:18;;;;;;;;;;;;;;;:27;;:33;;;;1610:5;1584:6;:18;1591:10;1584:18;;;;;;;;;;;;;;;:23;;;:31;;;;;;;;;;;;;;;;;;1367:272;:::o;975:237::-;1035:10;1056:6;1065:1;1056:10;;1077:105;1087:14;:21;;;;1083:1;:25;1077:105;;;1146:6;1125:27;;:14;1140:1;1125:17;;;;;;;;;;;;;;;;;;;;;;;;;;;:27;;;1122:60;;;1178:4;1170:12;;1122:60;1077:105;;;1200:5;1193:12;;975:237;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "294200",
								"executionCost": "20597",
								"totalCost": "314797"
							},
							"external": {
								"exit()": "infinite",
								"logStatus()": "431",
								"register(address)": "41060",
								"registerMultiple(address[])": "infinite",
								"start()": "infinite"
							},
							"internal": {
								"isAuthorized(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 1643,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 57,
									"end": 1643,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 57,
									"end": 1643,
									"name": "MSTORE"
								},
								{
									"begin": 288,
									"end": 350,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 288,
									"end": 350,
									"name": "POP"
								},
								{
									"begin": 333,
									"end": 343,
									"name": "CALLER"
								},
								{
									"begin": 319,
									"end": 330,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 319,
									"end": 330,
									"name": "DUP1"
								},
								{
									"begin": 319,
									"end": 343,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 319,
									"end": 343,
									"name": "EXP"
								},
								{
									"begin": 319,
									"end": 343,
									"name": "DUP2"
								},
								{
									"begin": 319,
									"end": 343,
									"name": "SLOAD"
								},
								{
									"begin": 319,
									"end": 343,
									"name": "DUP2"
								},
								{
									"begin": 319,
									"end": 343,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 319,
									"end": 343,
									"name": "MUL"
								},
								{
									"begin": 319,
									"end": 343,
									"name": "NOT"
								},
								{
									"begin": 319,
									"end": 343,
									"name": "AND"
								},
								{
									"begin": 319,
									"end": 343,
									"name": "SWAP1"
								},
								{
									"begin": 319,
									"end": 343,
									"name": "DUP4"
								},
								{
									"begin": 319,
									"end": 343,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 319,
									"end": 343,
									"name": "AND"
								},
								{
									"begin": 319,
									"end": 343,
									"name": "MUL"
								},
								{
									"begin": 319,
									"end": 343,
									"name": "OR"
								},
								{
									"begin": 319,
									"end": 343,
									"name": "SWAP1"
								},
								{
									"begin": 319,
									"end": 343,
									"name": "SSTORE"
								},
								{
									"begin": 319,
									"end": 343,
									"name": "POP"
								},
								{
									"begin": 57,
									"end": 1643,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1643,
									"name": "DUP1"
								},
								{
									"begin": 57,
									"end": 1643,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1643,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1643,
									"name": "CODECOPY"
								},
								{
									"begin": 57,
									"end": 1643,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1643,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058205551e7a5c9543dd6e20dd89a7b198a00c6f6cb94c14cc77117eca6befb99cf1c0029",
									".code": [
										{
											"begin": 57,
											"end": 1643,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "MSTORE"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "LT"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "SWAP1"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "DIV"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "AND"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "PUSH",
											"value": "4420E486"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "PUSH",
											"value": "71DD9322"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "PUSH",
											"value": "A3BA1116"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "PUSH",
											"value": "BE9A6555"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "PUSH",
											"value": "E9FAD8EE"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "JUMPDEST"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1643,
											"name": "REVERT"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "JUMPDEST"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "DUP1"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "SUB"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "DUP2"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "ADD"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "SWAP1"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "DUP1"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "DUP1"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "AND"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "SWAP1"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "ADD"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "SWAP1"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "SWAP3"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "SWAP2"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "SWAP1"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "JUMP"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "JUMPDEST"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "STOP"
										},
										{
											"begin": 911,
											"end": 968,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 911,
											"end": 968,
											"name": "JUMPDEST"
										},
										{
											"begin": 911,
											"end": 968,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 911,
											"end": 968,
											"name": "POP"
										},
										{
											"begin": 911,
											"end": 968,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 911,
											"end": 968,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 911,
											"end": 968,
											"name": "JUMP"
										},
										{
											"begin": 911,
											"end": 968,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 911,
											"end": 968,
											"name": "JUMPDEST"
										},
										{
											"begin": 911,
											"end": 968,
											"name": "STOP"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "JUMPDEST"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "POP"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "DUP1"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "SUB"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "DUP2"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "ADD"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "SWAP1"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "DUP1"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "DUP1"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "SWAP1"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "ADD"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "SWAP1"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "DUP3"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "ADD"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "DUP1"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "SWAP1"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "ADD"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "SWAP1"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "DUP1"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "DUP1"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "MUL"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "ADD"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "MLOAD"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "SWAP1"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "DUP2"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "ADD"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "MSTORE"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "DUP1"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "SWAP4"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "SWAP3"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "SWAP2"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "SWAP1"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "DUP2"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "DUP2"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "MSTORE"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "ADD"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "DUP4"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "DUP4"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "MUL"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "DUP1"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "DUP3"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "DUP5"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "CALLDATACOPY"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "DUP3"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "ADD"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "SWAP2"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "POP"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "POP"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "POP"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "POP"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "POP"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "POP"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "SWAP2"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "SWAP3"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "SWAP2"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "SWAP3"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "SWAP1"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "POP"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "POP"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "POP"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "JUMP"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "JUMPDEST"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "STOP"
										},
										{
											"begin": 1219,
											"end": 1361,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1219,
											"end": 1361,
											"name": "JUMPDEST"
										},
										{
											"begin": 1219,
											"end": 1361,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1219,
											"end": 1361,
											"name": "POP"
										},
										{
											"begin": 1219,
											"end": 1361,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1219,
											"end": 1361,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1219,
											"end": 1361,
											"name": "JUMP"
										},
										{
											"begin": 1219,
											"end": 1361,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1219,
											"end": 1361,
											"name": "JUMPDEST"
										},
										{
											"begin": 1219,
											"end": 1361,
											"name": "STOP"
										},
										{
											"begin": 1367,
											"end": 1639,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1367,
											"end": 1639,
											"name": "JUMPDEST"
										},
										{
											"begin": 1367,
											"end": 1639,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1367,
											"end": 1639,
											"name": "POP"
										},
										{
											"begin": 1367,
											"end": 1639,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1639,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1367,
											"end": 1639,
											"name": "JUMP"
										},
										{
											"begin": 1367,
											"end": 1639,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1639,
											"name": "JUMPDEST"
										},
										{
											"begin": 1367,
											"end": 1639,
											"name": "STOP"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "JUMPDEST"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "DUP1"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "SLOAD"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "EXP"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "DIV"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "AND"
										},
										{
											"begin": 519,
											"end": 544,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 519,
											"end": 544,
											"name": "AND"
										},
										{
											"begin": 519,
											"end": 529,
											"name": "CALLER"
										},
										{
											"begin": 519,
											"end": 544,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 519,
											"end": 544,
											"name": "AND"
										},
										{
											"begin": 519,
											"end": 544,
											"name": "EQ"
										},
										{
											"begin": 511,
											"end": 545,
											"name": "ISZERO"
										},
										{
											"begin": 511,
											"end": 545,
											"name": "ISZERO"
										},
										{
											"begin": 511,
											"end": 545,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 511,
											"end": 545,
											"name": "JUMPI"
										},
										{
											"begin": 511,
											"end": 545,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 511,
											"end": 545,
											"name": "DUP1"
										},
										{
											"begin": 511,
											"end": 545,
											"name": "REVERT"
										},
										{
											"begin": 511,
											"end": 545,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 511,
											"end": 545,
											"name": "JUMPDEST"
										},
										{
											"begin": 640,
											"end": 654,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 660,
											"end": 670,
											"name": "DUP2"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "SWAP1"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "DUP1"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "SLOAD"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "ADD"
										},
										{
											"begin": 57,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 55,
											"name": "DUP3"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "SSTORE"
										},
										{
											"begin": 79,
											"end": 89,
											"name": "DUP1"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "SWAP2"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "SWAP1"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "DUP3"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "SUB"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "SWAP1"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "MSTORE"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "KECCAK256"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "ADD"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "SWAP1"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "SWAP2"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "SWAP3"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "SWAP1"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "SWAP2"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "SWAP1"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "SWAP2"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "EXP"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "DUP2"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "SLOAD"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "DUP2"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "MUL"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "NOT"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "AND"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "SWAP1"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "DUP4"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "AND"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "MUL"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "OR"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "SWAP1"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "SSTORE"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "POP"
										},
										{
											"begin": 640,
											"end": 671,
											"name": "POP"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 569,
											"end": 694,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 911,
											"end": 968,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 911,
											"end": 968,
											"name": "JUMPDEST"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "DUP1"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "SLOAD"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "EXP"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "DIV"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "AND"
										},
										{
											"begin": 519,
											"end": 544,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 519,
											"end": 544,
											"name": "AND"
										},
										{
											"begin": 519,
											"end": 529,
											"name": "CALLER"
										},
										{
											"begin": 519,
											"end": 544,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 519,
											"end": 544,
											"name": "AND"
										},
										{
											"begin": 519,
											"end": 544,
											"name": "EQ"
										},
										{
											"begin": 511,
											"end": 545,
											"name": "ISZERO"
										},
										{
											"begin": 511,
											"end": 545,
											"name": "ISZERO"
										},
										{
											"begin": 511,
											"end": 545,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 511,
											"end": 545,
											"name": "JUMPI"
										},
										{
											"begin": 511,
											"end": 545,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 511,
											"end": 545,
											"name": "DUP1"
										},
										{
											"begin": 511,
											"end": 545,
											"name": "REVERT"
										},
										{
											"begin": 511,
											"end": 545,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 511,
											"end": 545,
											"name": "JUMPDEST"
										},
										{
											"begin": 911,
											"end": 968,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "JUMPDEST"
										},
										{
											"begin": 785,
											"end": 791,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "DUP1"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "SLOAD"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "EXP"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "DIV"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 533,
											"end": 544,
											"name": "AND"
										},
										{
											"begin": 519,
											"end": 544,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 519,
											"end": 544,
											"name": "AND"
										},
										{
											"begin": 519,
											"end": 529,
											"name": "CALLER"
										},
										{
											"begin": 519,
											"end": 544,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 519,
											"end": 544,
											"name": "AND"
										},
										{
											"begin": 519,
											"end": 544,
											"name": "EQ"
										},
										{
											"begin": 511,
											"end": 545,
											"name": "ISZERO"
										},
										{
											"begin": 511,
											"end": 545,
											"name": "ISZERO"
										},
										{
											"begin": 511,
											"end": 545,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 511,
											"end": 545,
											"name": "JUMPI"
										},
										{
											"begin": 511,
											"end": 545,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 511,
											"end": 545,
											"name": "DUP1"
										},
										{
											"begin": 511,
											"end": 545,
											"name": "REVERT"
										},
										{
											"begin": 511,
											"end": 545,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 511,
											"end": 545,
											"name": "JUMPDEST"
										},
										{
											"begin": 794,
											"end": 795,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 785,
											"end": 795,
											"name": "SWAP1"
										},
										{
											"begin": 785,
											"end": 795,
											"name": "POP"
										},
										{
											"begin": 781,
											"end": 872,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 781,
											"end": 872,
											"name": "JUMPDEST"
										},
										{
											"begin": 802,
											"end": 812,
											"name": "DUP2"
										},
										{
											"begin": 802,
											"end": 819,
											"name": "MLOAD"
										},
										{
											"begin": 797,
											"end": 798,
											"name": "DUP2"
										},
										{
											"begin": 797,
											"end": 819,
											"name": "LT"
										},
										{
											"begin": 781,
											"end": 872,
											"name": "ISZERO"
										},
										{
											"begin": 781,
											"end": 872,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 781,
											"end": 872,
											"name": "JUMPI"
										},
										{
											"begin": 838,
											"end": 852,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 858,
											"end": 868,
											"name": "DUP3"
										},
										{
											"begin": 869,
											"end": 870,
											"name": "DUP3"
										},
										{
											"begin": 858,
											"end": 871,
											"name": "DUP2"
										},
										{
											"begin": 858,
											"end": 871,
											"name": "MLOAD"
										},
										{
											"begin": 858,
											"end": 871,
											"name": "DUP2"
										},
										{
											"begin": 858,
											"end": 871,
											"name": "LT"
										},
										{
											"begin": 858,
											"end": 871,
											"name": "ISZERO"
										},
										{
											"begin": 858,
											"end": 871,
											"name": "ISZERO"
										},
										{
											"begin": 858,
											"end": 871,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 858,
											"end": 871,
											"name": "JUMPI"
										},
										{
											"begin": 858,
											"end": 871,
											"name": "INVALID"
										},
										{
											"begin": 858,
											"end": 871,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 858,
											"end": 871,
											"name": "JUMPDEST"
										},
										{
											"begin": 858,
											"end": 871,
											"name": "SWAP1"
										},
										{
											"begin": 858,
											"end": 871,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 858,
											"end": 871,
											"name": "ADD"
										},
										{
											"begin": 858,
											"end": 871,
											"name": "SWAP1"
										},
										{
											"begin": 858,
											"end": 871,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 858,
											"end": 871,
											"name": "MUL"
										},
										{
											"begin": 858,
											"end": 871,
											"name": "ADD"
										},
										{
											"begin": 858,
											"end": 871,
											"name": "MLOAD"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "SWAP1"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "DUP1"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "SLOAD"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "ADD"
										},
										{
											"begin": 57,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 55,
											"name": "DUP3"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "SSTORE"
										},
										{
											"begin": 79,
											"end": 89,
											"name": "DUP1"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "SWAP2"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "SWAP1"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "DUP3"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "SUB"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "SWAP1"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "MSTORE"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "KECCAK256"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "ADD"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "SWAP1"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "SWAP2"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "SWAP3"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "SWAP1"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "SWAP2"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "SWAP1"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "SWAP2"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "EXP"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "DUP2"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "SLOAD"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "DUP2"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "MUL"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "NOT"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "AND"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "SWAP1"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "DUP4"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "AND"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "MUL"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "OR"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "SWAP1"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "SSTORE"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "POP"
										},
										{
											"begin": 838,
											"end": 872,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 824,
											"name": "DUP1"
										},
										{
											"begin": 821,
											"end": 824,
											"name": "DUP1"
										},
										{
											"begin": 821,
											"end": 824,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 821,
											"end": 824,
											"name": "ADD"
										},
										{
											"begin": 821,
											"end": 824,
											"name": "SWAP2"
										},
										{
											"begin": 821,
											"end": 824,
											"name": "POP"
										},
										{
											"begin": 821,
											"end": 824,
											"name": "POP"
										},
										{
											"begin": 781,
											"end": 872,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 781,
											"end": 872,
											"name": "JUMP"
										},
										{
											"begin": 781,
											"end": 872,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 781,
											"end": 872,
											"name": "JUMPDEST"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "POP"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "POP"
										},
										{
											"begin": 700,
											"end": 904,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1219,
											"end": 1361,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1219,
											"end": 1361,
											"name": "JUMPDEST"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1289,
											"name": "ISZERO"
										},
										{
											"begin": 1256,
											"end": 1289,
											"name": "ISZERO"
										},
										{
											"begin": 1256,
											"end": 1280,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 1269,
											"end": 1279,
											"name": "CALLER"
										},
										{
											"begin": 1256,
											"end": 1268,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1256,
											"end": 1280,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1256,
											"end": 1280,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 1256,
											"end": 1280,
											"name": "JUMPDEST"
										},
										{
											"begin": 1256,
											"end": 1289,
											"name": "ISZERO"
										},
										{
											"begin": 1256,
											"end": 1289,
											"name": "ISZERO"
										},
										{
											"begin": 1256,
											"end": 1289,
											"name": "EQ"
										},
										{
											"begin": 1253,
											"end": 1310,
											"name": "ISZERO"
										},
										{
											"begin": 1253,
											"end": 1310,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 1253,
											"end": 1310,
											"name": "JUMPI"
										},
										{
											"begin": 1303,
											"end": 1310,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1303,
											"end": 1310,
											"name": "JUMP"
										},
										{
											"begin": 1253,
											"end": 1310,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 1253,
											"end": 1310,
											"name": "JUMPDEST"
										},
										{
											"begin": 1351,
											"end": 1354,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1320,
											"end": 1326,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1320,
											"end": 1338,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1327,
											"end": 1337,
											"name": "CALLER"
										},
										{
											"begin": 1320,
											"end": 1338,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1320,
											"end": 1338,
											"name": "AND"
										},
										{
											"begin": 1320,
											"end": 1338,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1320,
											"end": 1338,
											"name": "AND"
										},
										{
											"begin": 1320,
											"end": 1338,
											"name": "DUP2"
										},
										{
											"begin": 1320,
											"end": 1338,
											"name": "MSTORE"
										},
										{
											"begin": 1320,
											"end": 1338,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1320,
											"end": 1338,
											"name": "ADD"
										},
										{
											"begin": 1320,
											"end": 1338,
											"name": "SWAP1"
										},
										{
											"begin": 1320,
											"end": 1338,
											"name": "DUP2"
										},
										{
											"begin": 1320,
											"end": 1338,
											"name": "MSTORE"
										},
										{
											"begin": 1320,
											"end": 1338,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1320,
											"end": 1338,
											"name": "ADD"
										},
										{
											"begin": 1320,
											"end": 1338,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1320,
											"end": 1338,
											"name": "KECCAK256"
										},
										{
											"begin": 1320,
											"end": 1348,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1320,
											"end": 1348,
											"name": "ADD"
										},
										{
											"begin": 1320,
											"end": 1354,
											"name": "DUP2"
										},
										{
											"begin": 1320,
											"end": 1354,
											"name": "SWAP1"
										},
										{
											"begin": 1320,
											"end": 1354,
											"name": "SSTORE"
										},
										{
											"begin": 1320,
											"end": 1354,
											"name": "POP"
										},
										{
											"begin": 1219,
											"end": 1361,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 1219,
											"end": 1361,
											"name": "JUMPDEST"
										},
										{
											"begin": 1219,
											"end": 1361,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1367,
											"end": 1639,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1367,
											"end": 1639,
											"name": "JUMPDEST"
										},
										{
											"begin": 1431,
											"end": 1436,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 1436,
											"name": "ISZERO"
										},
										{
											"begin": 1403,
											"end": 1436,
											"name": "ISZERO"
										},
										{
											"begin": 1403,
											"end": 1427,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 1416,
											"end": 1426,
											"name": "CALLER"
										},
										{
											"begin": 1403,
											"end": 1415,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1403,
											"end": 1427,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1403,
											"end": 1427,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 1403,
											"end": 1427,
											"name": "JUMPDEST"
										},
										{
											"begin": 1403,
											"end": 1436,
											"name": "ISZERO"
										},
										{
											"begin": 1403,
											"end": 1436,
											"name": "ISZERO"
										},
										{
											"begin": 1403,
											"end": 1436,
											"name": "EQ"
										},
										{
											"begin": 1400,
											"end": 1457,
											"name": "ISZERO"
										},
										{
											"begin": 1400,
											"end": 1457,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 1400,
											"end": 1457,
											"name": "JUMPI"
										},
										{
											"begin": 1450,
											"end": 1457,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1450,
											"end": 1457,
											"name": "JUMP"
										},
										{
											"begin": 1400,
											"end": 1457,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 1400,
											"end": 1457,
											"name": "JUMPDEST"
										},
										{
											"begin": 1497,
											"end": 1502,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1502,
											"name": "ISZERO"
										},
										{
											"begin": 1470,
											"end": 1502,
											"name": "ISZERO"
										},
										{
											"begin": 1470,
											"end": 1476,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1477,
											"end": 1487,
											"name": "CALLER"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "AND"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "AND"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "DUP2"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "MSTORE"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "ADD"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "SWAP1"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "DUP2"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "MSTORE"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "ADD"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "KECCAK256"
										},
										{
											"begin": 1470,
											"end": 1493,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1470,
											"end": 1493,
											"name": "ADD"
										},
										{
											"begin": 1470,
											"end": 1493,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1493,
											"name": "SWAP1"
										},
										{
											"begin": 1470,
											"end": 1493,
											"name": "SLOAD"
										},
										{
											"begin": 1470,
											"end": 1493,
											"name": "SWAP1"
										},
										{
											"begin": 1470,
											"end": 1493,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1470,
											"end": 1493,
											"name": "EXP"
										},
										{
											"begin": 1470,
											"end": 1493,
											"name": "SWAP1"
										},
										{
											"begin": 1470,
											"end": 1493,
											"name": "DIV"
										},
										{
											"begin": 1470,
											"end": 1493,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1470,
											"end": 1493,
											"name": "AND"
										},
										{
											"begin": 1470,
											"end": 1502,
											"name": "ISZERO"
										},
										{
											"begin": 1470,
											"end": 1502,
											"name": "ISZERO"
										},
										{
											"begin": 1470,
											"end": 1502,
											"name": "EQ"
										},
										{
											"begin": 1467,
											"end": 1523,
											"name": "ISZERO"
										},
										{
											"begin": 1467,
											"end": 1523,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 1467,
											"end": 1523,
											"name": "JUMPI"
										},
										{
											"begin": 1516,
											"end": 1523,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1516,
											"end": 1523,
											"name": "JUMP"
										},
										{
											"begin": 1467,
											"end": 1523,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 1467,
											"end": 1523,
											"name": "JUMPDEST"
										},
										{
											"begin": 1571,
											"end": 1574,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1541,
											"end": 1547,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1558,
											"name": "CALLER"
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "AND"
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "AND"
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "DUP2"
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "MSTORE"
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "ADD"
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "SWAP1"
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "DUP2"
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "MSTORE"
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "ADD"
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "KECCAK256"
										},
										{
											"begin": 1541,
											"end": 1568,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1541,
											"end": 1568,
											"name": "ADD"
										},
										{
											"begin": 1541,
											"end": 1574,
											"name": "DUP2"
										},
										{
											"begin": 1541,
											"end": 1574,
											"name": "SWAP1"
										},
										{
											"begin": 1541,
											"end": 1574,
											"name": "SSTORE"
										},
										{
											"begin": 1541,
											"end": 1574,
											"name": "POP"
										},
										{
											"begin": 1610,
											"end": 1615,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1590,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1591,
											"end": 1601,
											"name": "CALLER"
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "AND"
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "AND"
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "DUP2"
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "MSTORE"
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "ADD"
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "SWAP1"
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "DUP2"
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "MSTORE"
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "ADD"
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "KECCAK256"
										},
										{
											"begin": 1584,
											"end": 1607,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1584,
											"end": 1607,
											"name": "ADD"
										},
										{
											"begin": 1584,
											"end": 1607,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1615,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1584,
											"end": 1615,
											"name": "EXP"
										},
										{
											"begin": 1584,
											"end": 1615,
											"name": "DUP2"
										},
										{
											"begin": 1584,
											"end": 1615,
											"name": "SLOAD"
										},
										{
											"begin": 1584,
											"end": 1615,
											"name": "DUP2"
										},
										{
											"begin": 1584,
											"end": 1615,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1584,
											"end": 1615,
											"name": "MUL"
										},
										{
											"begin": 1584,
											"end": 1615,
											"name": "NOT"
										},
										{
											"begin": 1584,
											"end": 1615,
											"name": "AND"
										},
										{
											"begin": 1584,
											"end": 1615,
											"name": "SWAP1"
										},
										{
											"begin": 1584,
											"end": 1615,
											"name": "DUP4"
										},
										{
											"begin": 1584,
											"end": 1615,
											"name": "ISZERO"
										},
										{
											"begin": 1584,
											"end": 1615,
											"name": "ISZERO"
										},
										{
											"begin": 1584,
											"end": 1615,
											"name": "MUL"
										},
										{
											"begin": 1584,
											"end": 1615,
											"name": "OR"
										},
										{
											"begin": 1584,
											"end": 1615,
											"name": "SWAP1"
										},
										{
											"begin": 1584,
											"end": 1615,
											"name": "SSTORE"
										},
										{
											"begin": 1584,
											"end": 1615,
											"name": "POP"
										},
										{
											"begin": 1367,
											"end": 1639,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 1367,
											"end": 1639,
											"name": "JUMPDEST"
										},
										{
											"begin": 1367,
											"end": 1639,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 975,
											"end": 1212,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 975,
											"end": 1212,
											"name": "JUMPDEST"
										},
										{
											"begin": 1035,
											"end": 1045,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1056,
											"end": 1062,
											"name": "DUP1"
										},
										{
											"begin": 1065,
											"end": 1066,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1056,
											"end": 1066,
											"name": "SWAP1"
										},
										{
											"begin": 1056,
											"end": 1066,
											"name": "POP"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "JUMPDEST"
										},
										{
											"begin": 1087,
											"end": 1101,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "DUP1"
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "SLOAD"
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "SWAP1"
										},
										{
											"begin": 1087,
											"end": 1108,
											"name": "POP"
										},
										{
											"begin": 1083,
											"end": 1084,
											"name": "DUP2"
										},
										{
											"begin": 1083,
											"end": 1108,
											"name": "LT"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "ISZERO"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "JUMPI"
										},
										{
											"begin": 1146,
											"end": 1152,
											"name": "DUP3"
										},
										{
											"begin": 1125,
											"end": 1152,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1125,
											"end": 1152,
											"name": "AND"
										},
										{
											"begin": 1125,
											"end": 1139,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1140,
											"end": 1141,
											"name": "DUP3"
										},
										{
											"begin": 1125,
											"end": 1142,
											"name": "DUP2"
										},
										{
											"begin": 1125,
											"end": 1142,
											"name": "SLOAD"
										},
										{
											"begin": 1125,
											"end": 1142,
											"name": "DUP2"
										},
										{
											"begin": 1125,
											"end": 1142,
											"name": "LT"
										},
										{
											"begin": 1125,
											"end": 1142,
											"name": "ISZERO"
										},
										{
											"begin": 1125,
											"end": 1142,
											"name": "ISZERO"
										},
										{
											"begin": 1125,
											"end": 1142,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 1125,
											"end": 1142,
											"name": "JUMPI"
										},
										{
											"begin": 1125,
											"end": 1142,
											"name": "INVALID"
										},
										{
											"begin": 1125,
											"end": 1142,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 1125,
											"end": 1142,
											"name": "JUMPDEST"
										},
										{
											"begin": 1125,
											"end": 1142,
											"name": "SWAP1"
										},
										{
											"begin": 1125,
											"end": 1142,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1125,
											"end": 1142,
											"name": "MSTORE"
										},
										{
											"begin": 1125,
											"end": 1142,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1125,
											"end": 1142,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1125,
											"end": 1142,
											"name": "KECCAK256"
										},
										{
											"begin": 1125,
											"end": 1142,
											"name": "ADD"
										},
										{
											"begin": 1125,
											"end": 1142,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1125,
											"end": 1142,
											"name": "SWAP1"
										},
										{
											"begin": 1125,
											"end": 1142,
											"name": "SLOAD"
										},
										{
											"begin": 1125,
											"end": 1142,
											"name": "SWAP1"
										},
										{
											"begin": 1125,
											"end": 1142,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1125,
											"end": 1142,
											"name": "EXP"
										},
										{
											"begin": 1125,
											"end": 1142,
											"name": "SWAP1"
										},
										{
											"begin": 1125,
											"end": 1142,
											"name": "DIV"
										},
										{
											"begin": 1125,
											"end": 1142,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1125,
											"end": 1142,
											"name": "AND"
										},
										{
											"begin": 1125,
											"end": 1152,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1125,
											"end": 1152,
											"name": "AND"
										},
										{
											"begin": 1125,
											"end": 1152,
											"name": "EQ"
										},
										{
											"begin": 1122,
											"end": 1182,
											"name": "ISZERO"
										},
										{
											"begin": 1122,
											"end": 1182,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 1122,
											"end": 1182,
											"name": "JUMPI"
										},
										{
											"begin": 1178,
											"end": 1182,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1170,
											"end": 1182,
											"name": "SWAP2"
										},
										{
											"begin": 1170,
											"end": 1182,
											"name": "POP"
										},
										{
											"begin": 1122,
											"end": 1182,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 1122,
											"end": 1182,
											"name": "JUMPDEST"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "JUMP"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 1077,
											"end": 1182,
											"name": "JUMPDEST"
										},
										{
											"begin": 1200,
											"end": 1205,
											"name": "DUP2"
										},
										{
											"begin": 1193,
											"end": 1205,
											"name": "SWAP2"
										},
										{
											"begin": 1193,
											"end": 1205,
											"name": "POP"
										},
										{
											"begin": 975,
											"end": 1212,
											"name": "POP"
										},
										{
											"begin": 975,
											"end": 1212,
											"name": "SWAP2"
										},
										{
											"begin": 975,
											"end": 1212,
											"name": "SWAP1"
										},
										{
											"begin": 975,
											"end": 1212,
											"name": "POP"
										},
										{
											"begin": 975,
											"end": 1212,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"exit()": "e9fad8ee",
							"logStatus()": "71dd9322",
							"register(address)": "4420e486",
							"registerMultiple(address[])": "a3ba1116",
							"start()": "be9a6555"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"authorized\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"logStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authorized\",\"type\":\"address[]\"}],\"name\":\"registerMultiple\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"lastInvoker\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_id\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_success\",\"type\":\"bool\"}],\"name\":\"TrueFalse\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"systemTimeRegistration.sol\":\"Agent\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"systemTimeRegistration.sol\":{\"keccak256\":\"0x6d020316d5e63a4bb10d3529c51ad7b5a2ac6d0d9995962ef9ca27a222f4bf6b\",\"urls\":[\"bzzr://2c6d520579cbd174c650b54c0bdc50eb5c308a3104721364ad9d95ee31479acd\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"systemTimeRegistration.sol": {
				"ast": {
					"absolutePath": "systemTimeRegistration.sol",
					"exportedSymbols": {
						"Agent": [
							184
						]
					},
					"id": 185,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 184,
							"linearizedBaseContracts": [
								184
							],
							"name": "Agent",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Agent.Data",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "enterDate",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "101:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "101:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "exitDate",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "125:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "125:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"name": "isIn",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "148:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 6,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "148:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Data",
									"nodeType": "StructDefinition",
									"scope": 184,
									"src": "79:85:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 10,
									"name": "coordinator",
									"nodeType": "VariableDeclaration",
									"scope": 184,
									"src": "170:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "170:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 13,
									"name": "addrRegistered",
									"nodeType": "VariableDeclaration",
									"scope": 184,
									"src": "203:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 11,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "203:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 12,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "203:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 17,
									"name": "agents",
									"nodeType": "VariableDeclaration",
									"scope": 184,
									"src": "241:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Data_$8_storage_$",
										"typeString": "mapping(address => struct Agent.Data)"
									},
									"typeName": {
										"id": 16,
										"keyType": {
											"id": 14,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "249:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "241:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Data_$8_storage_$",
											"typeString": "mapping(address => struct Agent.Data)"
										},
										"valueType": {
											"contractScope": null,
											"id": 15,
											"name": "Data",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 8,
											"src": "260:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Data_$8_storage_ptr",
												"typeString": "struct Agent.Data"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "309:41:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 20,
														"name": "coordinator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "319:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 21,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "333:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 22,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "333:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "319:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "319:24:0"
											}
										]
									},
									"documentation": null,
									"id": 26,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "299:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "309:0:0"
									},
									"scope": 184,
									"src": "288:62:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 34,
									"name": "TrueFalse",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"name": "lastInvoker",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "382:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": true,
												"name": "_id",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "419:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"indexed": false,
												"name": "_success",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "448:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 31,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "448:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "372:95:0"
									},
									"src": "356:112:0"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "501:62:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 37,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "519:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 38,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "519:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 39,
																"name": "coordinator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "533:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "519:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 36,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															202,
															203
														],
														"referencedDeclaration": 202,
														"src": "511:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "511:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "511:34:0"
											},
											{
												"id": 43,
												"nodeType": "PlaceholderStatement",
												"src": "555:1:0"
											}
										]
									},
									"documentation": null,
									"id": 45,
									"name": "onlyCoordinator",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "498:2:0"
									},
									"src": "474:89:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "630:64:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 55,
															"name": "authorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "660:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 52,
															"name": "addrRegistered",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "640:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "640:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "640:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 57,
												"nodeType": "ExpressionStatement",
												"src": "640:31:0"
											},
											{
												"expression": null,
												"functionReturnParameters": 51,
												"id": 58,
												"nodeType": "Return",
												"src": "681:7:0"
											}
										]
									},
									"documentation": null,
									"id": 60,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 50,
											"modifierName": {
												"argumentTypes": null,
												"id": 49,
												"name": "onlyCoordinator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 45,
												"src": "614:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "614:15:0"
										}
									],
									"name": "register",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"name": "authorized",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "587:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "587:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "586:20:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "630:0:0"
									},
									"scope": 184,
									"src": "569:125:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "771:133:0",
										"statements": [
											{
												"body": {
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 82,
																	"name": "authorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 63,
																	"src": "858:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 84,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 83,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 69,
																	"src": "869:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "858:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 79,
																"name": "addrRegistered",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "838:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage",
																	"typeString": "address[] storage ref"
																}
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "push",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "838:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) returns (uint256)"
															}
														},
														"id": 85,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "838:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 86,
													"nodeType": "ExpressionStatement",
													"src": "838:34:0"
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 72,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "797:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 73,
															"name": "authorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "802:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "802:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "797:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 87,
												"initializationExpression": {
													"assignments": [
														69
													],
													"declarations": [
														{
															"constant": false,
															"id": 69,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 90,
															"src": "785:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 68,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "785:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 71,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "794:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "785:10:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 77,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "821:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 76,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 69,
															"src": "821:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 78,
													"nodeType": "ExpressionStatement",
													"src": "821:3:0"
												},
												"nodeType": "ForStatement",
												"src": "781:91:0"
											},
											{
												"expression": null,
												"functionReturnParameters": 67,
												"id": 88,
												"nodeType": "Return",
												"src": "891:7:0"
											}
										]
									},
									"documentation": null,
									"id": 90,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 66,
											"modifierName": {
												"argumentTypes": null,
												"id": 65,
												"name": "onlyCoordinator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 45,
												"src": "755:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "755:15:0"
										}
									],
									"name": "registerMultiple",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"name": "authorized",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "726:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 61,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "726:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 62,
													"length": null,
													"nodeType": "ArrayTypeName",
													"src": "726:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "725:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:0:0"
									},
									"scope": 184,
									"src": "700:204:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "960:8:0",
										"statements": []
									},
									"documentation": null,
									"id": 96,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [
										{
											"arguments": null,
											"id": 93,
											"modifierName": {
												"argumentTypes": null,
												"id": 92,
												"name": "onlyCoordinator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 45,
												"src": "944:15:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "944:15:0"
										}
									],
									"name": "logStatus",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "929:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "960:0:0"
									},
									"scope": 184,
									"src": "911:57:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "1046:166:0",
										"statements": [
											{
												"assignments": [
													104
												],
												"declarations": [
													{
														"constant": false,
														"id": 104,
														"name": "i",
														"nodeType": "VariableDeclaration",
														"scope": 125,
														"src": "1056:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 103,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1056:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 106,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1065:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1056:10:0"
											},
											{
												"body": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 111,
																"name": "addrRegistered",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "1125:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage",
																	"typeString": "address[] storage ref"
																}
															},
															"id": 113,
															"indexExpression": {
																"argumentTypes": null,
																"id": 112,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "1140:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1125:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"argumentTypes": null,
															"id": 114,
															"name": "caller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "1146:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1125:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 120,
													"nodeType": "IfStatement",
													"src": "1122:60:0",
													"trueBody": {
														"expression": {
															"argumentTypes": null,
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"argumentTypes": null,
																"id": 116,
																"name": "_bool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 101,
																"src": "1170:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1178:4:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "1170:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 119,
														"nodeType": "ExpressionStatement",
														"src": "1170:12:0"
													}
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 107,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "1083:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 108,
															"name": "addrRegistered",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "1087:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 109,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1087:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1083:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 121,
												"nodeType": "WhileStatement",
												"src": "1077:105:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 122,
													"name": "_bool",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 101,
													"src": "1200:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 102,
												"id": 123,
												"nodeType": "Return",
												"src": "1193:12:0"
											}
										]
									},
									"documentation": null,
									"id": 125,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "isAuthorized",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"name": "caller",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "997:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "997:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "996:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"name": "_bool",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "1035:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 100,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1035:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1034:12:0"
									},
									"scope": 184,
									"src": "975:237:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 144,
										"nodeType": "Block",
										"src": "1243:118:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 129,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "1269:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1269:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 128,
															"name": "isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "1256:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1256:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 132,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1284:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1256:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 135,
												"nodeType": "IfStatement",
												"src": "1253:57:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 127,
													"id": 134,
													"nodeType": "Return",
													"src": "1303:7:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 136,
																"name": "agents",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "1320:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Data_$8_storage_$",
																	"typeString": "mapping(address => struct Agent.Data storage ref)"
																}
															},
															"id": 139,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 137,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "1327:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1327:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1320:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Data_$8_storage",
																"typeString": "struct Agent.Data storage ref"
															}
														},
														"id": 140,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "enterDate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1320:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 141,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "1351:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1320:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "1320:34:0"
											}
										]
									},
									"documentation": null,
									"id": 145,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "start",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1233:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1243:0:0"
									},
									"scope": 184,
									"src": "1219:142:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "1390:249:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 149,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "1416:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1416:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 148,
															"name": "isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "1403:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1403:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1431:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1403:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 155,
												"nodeType": "IfStatement",
												"src": "1400:57:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 147,
													"id": 154,
													"nodeType": "Return",
													"src": "1450:7:0"
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 156,
																"name": "agents",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "1470:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Data_$8_storage_$",
																	"typeString": "mapping(address => struct Agent.Data storage ref)"
																}
															},
															"id": 159,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 157,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "1477:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1477:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1470:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Data_$8_storage",
																"typeString": "struct Agent.Data storage ref"
															}
														},
														"id": 160,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isIn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "1470:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 161,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1497:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1470:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 164,
												"nodeType": "IfStatement",
												"src": "1467:56:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 147,
													"id": 163,
													"nodeType": "Return",
													"src": "1516:7:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 165,
																"name": "agents",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "1541:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Data_$8_storage_$",
																	"typeString": "mapping(address => struct Agent.Data storage ref)"
																}
															},
															"id": 168,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 166,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "1548:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1548:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1541:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Data_$8_storage",
																"typeString": "struct Agent.Data storage ref"
															}
														},
														"id": 169,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "exitDate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1541:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 170,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "1571:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1541:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "1541:33:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 173,
																"name": "agents",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "1584:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Data_$8_storage_$",
																	"typeString": "mapping(address => struct Agent.Data storage ref)"
																}
															},
															"id": 176,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 174,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 199,
																	"src": "1591:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1591:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1584:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Data_$8_storage",
																"typeString": "struct Agent.Data storage ref"
															}
														},
														"id": 177,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "isIn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "1584:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 178,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1610:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1584:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "1584:31:0"
											},
											{
												"expression": null,
												"functionReturnParameters": 147,
												"id": 181,
												"nodeType": "Return",
												"src": "1626:7:0"
											}
										]
									},
									"documentation": null,
									"id": 183,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "exit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1380:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1390:0:0"
									},
									"scope": 184,
									"src": "1367:272:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 185,
							"src": "57:1586:0"
						}
					],
					"src": "32:1611:0"
				},
				"id": 0
			}
		}
	}
}