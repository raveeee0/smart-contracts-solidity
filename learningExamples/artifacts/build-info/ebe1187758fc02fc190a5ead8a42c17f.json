{
	"id": "ebe1187758fc02fc190a5ead8a42c17f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"learningExamples/ballotV1.sol": {
				"content": "pragma solidity ^0.4.0;\n\ncontract Ballot {\n\n    /* Voter structure */\n    struct Voter {\n        uint weight; // Value of the vote\n        bool voted;\n        uint8 vote;\n    }\n\n\n    struct Proposal{\n        uint voteCount;\n    }\n\n    address chairperson;\n    mapping(address => Voter) voters;\n    Proposal[] proposals;\n\n    /* Cons\n    constructor(uint8 _numProposals) public {\n        chairperson = msg.sender;\n        voters[chairperson].weight = 2;\n        proposals.length = _numProposals;\n    }\n\n    /* Give authpority to voters */\n    function register(address toVoter) public {\n        if(msg.sender != chairperson || voters[toVoter].voted)\n            return;\n        voters[toVoter].weight = 1;\n        voters[toVoter].voted = false;\n        \n    }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"learningExamples/ballotV1.sol": {
				"Ballot": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "toVoter",
									"type": "address"
								}
							],
							"name": "register",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"learningExamples/ballotV1.sol\":25:761  contract Ballot {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"learningExamples/ballotV1.sol\":25:761  contract Ballot {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"learningExamples/ballotV1.sol\":25:761  contract Ballot {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x4420e486\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"learningExamples/ballotV1.sol\":542:758  function register(address toVoter) public {... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_3\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_3:\n        /* \"learningExamples/ballotV1.sol\":542:758  function register(address toVoter) public {... */\n      pop\n      tag_4\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_5)\n    tag_4:\n      stop\n    tag_5:\n        /* \"learningExamples/ballotV1.sol\":611:622  chairperson */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"learningExamples/ballotV1.sol\":597:622  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"learningExamples/ballotV1.sol\":597:607  msg.sender */\n      caller\n        /* \"learningExamples/ballotV1.sol\":597:622  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"learningExamples/ballotV1.sol\":597:647  msg.sender != chairperson || voters[toVoter].voted */\n      dup1\n      tag_7\n      jumpi\n      pop\n        /* \"learningExamples/ballotV1.sol\":626:632  voters */\n      0x1\n        /* \"learningExamples/ballotV1.sol\":626:641  voters[toVoter] */\n      0x0\n        /* \"learningExamples/ballotV1.sol\":633:640  toVoter */\n      dup3\n        /* \"learningExamples/ballotV1.sol\":626:641  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"learningExamples/ballotV1.sol\":626:647  voters[toVoter].voted */\n      0x1\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"learningExamples/ballotV1.sol\":597:647  msg.sender != chairperson || voters[toVoter].voted */\n    tag_7:\n        /* \"learningExamples/ballotV1.sol\":594:668  if(msg.sender != chairperson || voters[toVoter].voted)... */\n      iszero\n      tag_8\n      jumpi\n        /* \"learningExamples/ballotV1.sol\":661:668  return; */\n      jump(tag_6)\n        /* \"learningExamples/ballotV1.sol\":594:668  if(msg.sender != chairperson || voters[toVoter].voted)... */\n    tag_8:\n        /* \"learningExamples/ballotV1.sol\":702:703  1 */\n      0x1\n        /* \"learningExamples/ballotV1.sol\":677:683  voters */\n      dup1\n        /* \"learningExamples/ballotV1.sol\":677:692  voters[toVoter] */\n      0x0\n        /* \"learningExamples/ballotV1.sol\":684:691  toVoter */\n      dup4\n        /* \"learningExamples/ballotV1.sol\":677:692  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"learningExamples/ballotV1.sol\":677:699  voters[toVoter].weight */\n      0x0\n      add\n        /* \"learningExamples/ballotV1.sol\":677:703  voters[toVoter].weight = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"learningExamples/ballotV1.sol\":737:742  false */\n      0x0\n        /* \"learningExamples/ballotV1.sol\":713:719  voters */\n      0x1\n        /* \"learningExamples/ballotV1.sol\":713:728  voters[toVoter] */\n      0x0\n        /* \"learningExamples/ballotV1.sol\":720:727  toVoter */\n      dup4\n        /* \"learningExamples/ballotV1.sol\":713:728  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"learningExamples/ballotV1.sol\":713:734  voters[toVoter].voted */\n      0x1\n      add\n      0x0\n        /* \"learningExamples/ballotV1.sol\":713:742  voters[toVoter].voted = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"learningExamples/ballotV1.sol\":542:758  function register(address toVoter) public {... */\n    tag_6:\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058201faac7a4302e7791babcadcb52961009b0610269e7b4cc960d3882dc860ed3350029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061020d806100206000396000f300608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634420e48614610046575b600080fd5b34801561005257600080fd5b50610087600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610089565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806101315750600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b1561013b576101de565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083151502179055505b505600a165627a7a723058201faac7a4302e7791babcadcb52961009b0610269e7b4cc960d3882dc860ed3350029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20D DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x4420E486 EQ PUSH2 0x46 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x89 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x131 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x13B JUMPI PUSH2 0x1DE JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x1f 0xaa 0xc7 LOG4 ADDRESS 0x2e PUSH24 0x91BABCADCB52961009B0610269E7B4CC960D3882DC860ED3 CALLDATALOAD STOP 0x29 ",
							"sourceMap": "25:736:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25:736:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634420e48614610046575b600080fd5b34801561005257600080fd5b50610087600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610089565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806101315750600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b1561013b576101de565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083151502179055505b505600a165627a7a723058201faac7a4302e7791babcadcb52961009b0610269e7b4cc960d3882dc860ed3350029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x4420E486 EQ PUSH2 0x46 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x87 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x89 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x131 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x13B JUMPI PUSH2 0x1DE JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x1f 0xaa 0xc7 LOG4 ADDRESS 0x2e PUSH24 0x91BABCADCB52961009B0610269E7B4CC960D3882DC860ED3 CALLDATALOAD STOP 0x29 ",
							"sourceMap": "25:736:0:-;;;;;;;;;;;;;;;;;;;;;;;;542:216;;8:9:-1;5:2;;;30:1;27;20:12;5:2;542:216:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;611:11;;;;;;;;;;;597:25;;:10;:25;;;;:50;;;;626:6;:15;633:7;626:15;;;;;;;;;;;;;;;:21;;;;;;;;;;;;597:50;594:74;;;661:7;;594:74;702:1;677:6;:15;684:7;677:15;;;;;;;;;;;;;;;:22;;:26;;;;737:5;713:6;:15;720:7;713:15;;;;;;;;;;;;;;;:21;;;:29;;;;;;;;;;;;;;;;;;542:216;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "105000",
								"executionCost": "153",
								"totalCost": "105153"
							},
							"external": {
								"register(address)": "41301"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 761,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 25,
									"end": 761,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 25,
									"end": 761,
									"name": "MSTORE"
								},
								{
									"begin": 25,
									"end": 761,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 761,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 761,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 761,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 761,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 761,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 761,
									"name": "CODECOPY"
								},
								{
									"begin": 25,
									"end": 761,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 761,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058201faac7a4302e7791babcadcb52961009b0610269e7b4cc960d3882dc860ed3350029",
									".code": [
										{
											"begin": 25,
											"end": 761,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 25,
											"end": 761,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25,
											"end": 761,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 761,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25,
											"end": 761,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 25,
											"end": 761,
											"name": "LT"
										},
										{
											"begin": 25,
											"end": 761,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 761,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 761,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 761,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 25,
											"end": 761,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25,
											"end": 761,
											"name": "SWAP1"
										},
										{
											"begin": 25,
											"end": 761,
											"name": "DIV"
										},
										{
											"begin": 25,
											"end": 761,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 25,
											"end": 761,
											"name": "AND"
										},
										{
											"begin": 25,
											"end": 761,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 761,
											"name": "PUSH",
											"value": "4420E486"
										},
										{
											"begin": 25,
											"end": 761,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 761,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 25,
											"end": 761,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 761,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 761,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 761,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 761,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 761,
											"name": "REVERT"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "JUMPDEST"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "POP"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "DUP1"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "SUB"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "DUP2"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "ADD"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "SWAP1"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "DUP1"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "DUP1"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "AND"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "SWAP1"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "ADD"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "SWAP1"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "SWAP3"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "SWAP2"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "SWAP1"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "POP"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "POP"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "POP"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "JUMP"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "JUMPDEST"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "STOP"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "JUMPDEST"
										},
										{
											"begin": 611,
											"end": 622,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 611,
											"end": 622,
											"name": "DUP1"
										},
										{
											"begin": 611,
											"end": 622,
											"name": "SWAP1"
										},
										{
											"begin": 611,
											"end": 622,
											"name": "SLOAD"
										},
										{
											"begin": 611,
											"end": 622,
											"name": "SWAP1"
										},
										{
											"begin": 611,
											"end": 622,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 611,
											"end": 622,
											"name": "EXP"
										},
										{
											"begin": 611,
											"end": 622,
											"name": "SWAP1"
										},
										{
											"begin": 611,
											"end": 622,
											"name": "DIV"
										},
										{
											"begin": 611,
											"end": 622,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 611,
											"end": 622,
											"name": "AND"
										},
										{
											"begin": 597,
											"end": 622,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 597,
											"end": 622,
											"name": "AND"
										},
										{
											"begin": 597,
											"end": 607,
											"name": "CALLER"
										},
										{
											"begin": 597,
											"end": 622,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 597,
											"end": 622,
											"name": "AND"
										},
										{
											"begin": 597,
											"end": 622,
											"name": "EQ"
										},
										{
											"begin": 597,
											"end": 622,
											"name": "ISZERO"
										},
										{
											"begin": 597,
											"end": 647,
											"name": "DUP1"
										},
										{
											"begin": 597,
											"end": 647,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 597,
											"end": 647,
											"name": "JUMPI"
										},
										{
											"begin": 597,
											"end": 647,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 632,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 633,
											"end": 640,
											"name": "DUP3"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "AND"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "AND"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "DUP2"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "MSTORE"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "ADD"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "DUP2"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "MSTORE"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "ADD"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 626,
											"end": 641,
											"name": "KECCAK256"
										},
										{
											"begin": 626,
											"end": 647,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 626,
											"end": 647,
											"name": "ADD"
										},
										{
											"begin": 626,
											"end": 647,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 626,
											"end": 647,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 647,
											"name": "SLOAD"
										},
										{
											"begin": 626,
											"end": 647,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 647,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 626,
											"end": 647,
											"name": "EXP"
										},
										{
											"begin": 626,
											"end": 647,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 647,
											"name": "DIV"
										},
										{
											"begin": 626,
											"end": 647,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 626,
											"end": 647,
											"name": "AND"
										},
										{
											"begin": 597,
											"end": 647,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 597,
											"end": 647,
											"name": "JUMPDEST"
										},
										{
											"begin": 594,
											"end": 668,
											"name": "ISZERO"
										},
										{
											"begin": 594,
											"end": 668,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 594,
											"end": 668,
											"name": "JUMPI"
										},
										{
											"begin": 661,
											"end": 668,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 661,
											"end": 668,
											"name": "JUMP"
										},
										{
											"begin": 594,
											"end": 668,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 594,
											"end": 668,
											"name": "JUMPDEST"
										},
										{
											"begin": 702,
											"end": 703,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 677,
											"end": 683,
											"name": "DUP1"
										},
										{
											"begin": 677,
											"end": 692,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 684,
											"end": 691,
											"name": "DUP4"
										},
										{
											"begin": 677,
											"end": 692,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 677,
											"end": 692,
											"name": "AND"
										},
										{
											"begin": 677,
											"end": 692,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 677,
											"end": 692,
											"name": "AND"
										},
										{
											"begin": 677,
											"end": 692,
											"name": "DUP2"
										},
										{
											"begin": 677,
											"end": 692,
											"name": "MSTORE"
										},
										{
											"begin": 677,
											"end": 692,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 677,
											"end": 692,
											"name": "ADD"
										},
										{
											"begin": 677,
											"end": 692,
											"name": "SWAP1"
										},
										{
											"begin": 677,
											"end": 692,
											"name": "DUP2"
										},
										{
											"begin": 677,
											"end": 692,
											"name": "MSTORE"
										},
										{
											"begin": 677,
											"end": 692,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 677,
											"end": 692,
											"name": "ADD"
										},
										{
											"begin": 677,
											"end": 692,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 677,
											"end": 692,
											"name": "KECCAK256"
										},
										{
											"begin": 677,
											"end": 699,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 677,
											"end": 699,
											"name": "ADD"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "DUP2"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "SWAP1"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "SSTORE"
										},
										{
											"begin": 677,
											"end": 703,
											"name": "POP"
										},
										{
											"begin": 737,
											"end": 742,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 713,
											"end": 719,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 713,
											"end": 728,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 720,
											"end": 727,
											"name": "DUP4"
										},
										{
											"begin": 713,
											"end": 728,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 713,
											"end": 728,
											"name": "AND"
										},
										{
											"begin": 713,
											"end": 728,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 713,
											"end": 728,
											"name": "AND"
										},
										{
											"begin": 713,
											"end": 728,
											"name": "DUP2"
										},
										{
											"begin": 713,
											"end": 728,
											"name": "MSTORE"
										},
										{
											"begin": 713,
											"end": 728,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 713,
											"end": 728,
											"name": "ADD"
										},
										{
											"begin": 713,
											"end": 728,
											"name": "SWAP1"
										},
										{
											"begin": 713,
											"end": 728,
											"name": "DUP2"
										},
										{
											"begin": 713,
											"end": 728,
											"name": "MSTORE"
										},
										{
											"begin": 713,
											"end": 728,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 713,
											"end": 728,
											"name": "ADD"
										},
										{
											"begin": 713,
											"end": 728,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 713,
											"end": 728,
											"name": "KECCAK256"
										},
										{
											"begin": 713,
											"end": 734,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 713,
											"end": 734,
											"name": "ADD"
										},
										{
											"begin": 713,
											"end": 734,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 713,
											"end": 742,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 713,
											"end": 742,
											"name": "EXP"
										},
										{
											"begin": 713,
											"end": 742,
											"name": "DUP2"
										},
										{
											"begin": 713,
											"end": 742,
											"name": "SLOAD"
										},
										{
											"begin": 713,
											"end": 742,
											"name": "DUP2"
										},
										{
											"begin": 713,
											"end": 742,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 713,
											"end": 742,
											"name": "MUL"
										},
										{
											"begin": 713,
											"end": 742,
											"name": "NOT"
										},
										{
											"begin": 713,
											"end": 742,
											"name": "AND"
										},
										{
											"begin": 713,
											"end": 742,
											"name": "SWAP1"
										},
										{
											"begin": 713,
											"end": 742,
											"name": "DUP4"
										},
										{
											"begin": 713,
											"end": 742,
											"name": "ISZERO"
										},
										{
											"begin": 713,
											"end": 742,
											"name": "ISZERO"
										},
										{
											"begin": 713,
											"end": 742,
											"name": "MUL"
										},
										{
											"begin": 713,
											"end": 742,
											"name": "OR"
										},
										{
											"begin": 713,
											"end": 742,
											"name": "SWAP1"
										},
										{
											"begin": 713,
											"end": 742,
											"name": "SSTORE"
										},
										{
											"begin": 713,
											"end": 742,
											"name": "POP"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "JUMPDEST"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "POP"
										},
										{
											"begin": 542,
											"end": 758,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"register(address)": "4420e486"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"toVoter\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"learningExamples/ballotV1.sol\":\"Ballot\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"learningExamples/ballotV1.sol\":{\"keccak256\":\"0x7395b0e9ab043ae7bcd45b716a389ad4687dd1c32bfb04bb08b594e81e807408\",\"urls\":[\"bzzr://8a4a4aced3d26d93fcdab8aa1cd234a458b6306c9304b76d3feeecc46a0e3394\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"learningExamples/ballotV1.sol": {
				"ast": {
					"absolutePath": "learningExamples/ballotV1.sol",
					"exportedSymbols": {
						"Ballot": [
							52
						]
					},
					"id": 53,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 52,
							"linearizedBaseContracts": [
								52
							],
							"name": "Ballot",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Ballot.Voter",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "weight",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "97:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "97:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "voted",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "139:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 4,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "139:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"name": "vote",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "159:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 6,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "159:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nodeType": "StructDefinition",
									"scope": 52,
									"src": "74:102:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Proposal",
									"id": 11,
									"members": [
										{
											"constant": false,
											"id": 10,
											"name": "voteCount",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "208:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "208:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nodeType": "StructDefinition",
									"scope": 52,
									"src": "183:46:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 13,
									"name": "chairperson",
									"nodeType": "VariableDeclaration",
									"scope": 52,
									"src": "235:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 12,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "235:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 17,
									"name": "voters",
									"nodeType": "VariableDeclaration",
									"scope": 52,
									"src": "260:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
										"typeString": "mapping(address => struct Ballot.Voter)"
									},
									"typeName": {
										"id": 16,
										"keyType": {
											"id": 14,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "268:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "260:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
											"typeString": "mapping(address => struct Ballot.Voter)"
										},
										"valueType": {
											"contractScope": null,
											"id": 15,
											"name": "Voter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 8,
											"src": "279:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
												"typeString": "struct Ballot.Voter"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 20,
									"name": "proposals",
									"nodeType": "VariableDeclaration",
									"scope": 52,
									"src": "298:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
										"typeString": "struct Ballot.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 18,
											"name": "Proposal",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 11,
											"src": "298:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$11_storage_ptr",
												"typeString": "struct Ballot.Proposal"
											}
										},
										"id": 19,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "298:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage_ptr",
											"typeString": "struct Ballot.Proposal[]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "584:174:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 28,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 25,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "597:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "597:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 27,
															"name": "chairperson",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "611:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "597:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 29,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "626:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 31,
															"indexExpression": {
																"argumentTypes": null,
																"id": 30,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "633:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "626:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 32,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "626:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "597:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 35,
												"nodeType": "IfStatement",
												"src": "594:74:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 24,
													"id": 34,
													"nodeType": "Return",
													"src": "661:7:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 36,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "677:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 38,
															"indexExpression": {
																"argumentTypes": null,
																"id": 37,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "684:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "677:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 39,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "677:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "702:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "677:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "677:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 43,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "713:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 45,
															"indexExpression": {
																"argumentTypes": null,
																"id": 44,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "720:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "713:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 46,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "713:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "737:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "713:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "713:29:0"
											}
										]
									},
									"documentation": null,
									"id": 51,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "register",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"name": "toVoter",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "560:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "559:17:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "584:0:0"
									},
									"scope": 52,
									"src": "542:216:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 53,
							"src": "25:736:0"
						}
					],
					"src": "0:761:0"
				},
				"id": 0
			}
		}
	}
}