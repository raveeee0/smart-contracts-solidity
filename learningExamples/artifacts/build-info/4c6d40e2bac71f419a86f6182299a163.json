{
	"id": "4c6d40e2bac71f419a86f6182299a163",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"learningExamples/ballotV1.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.4.0;\n\ncontract Ballot {\n\n    /* Voter structure */\n    struct Voter {\n        uint weight; // Value of the vote\n        bool voted;\n        uint8 vote;\n    }\n\n\n    /* Proposal struct */\n    struct Proposal{\n        uint voteCount;\n    }\n\n    \n    address chairperson;    //  Organizer\n    mapping(address => Voter) voters;   // Mapping of partecipants\n    Proposal[] proposals;   // Proposals to vote\n\n\n    /* Contract constructor */\n    constructor(uint8 _numProposals) public {\n        chairperson = msg.sender;\n        voters[chairperson].weight = 2;\n        proposals.length = _numProposals;\n    }\n\n\n    /* Give authority to voters */\n    function register(address toVoter) public {\n        if(msg.sender != chairperson || voters[toVoter].voted) //   Only chairman!!\n            return;\n        voters[toVoter].weight = 1;\n        voters[toVoter].voted = false;\n    }\n\n\n    /* Give a vote to a proposal */\n    function vote(uint8 toProposal) public {\n        Voter storage sender = voters[msg.sender];\n        if(sender.voted || toProposal >= proposals.length)\n            return;\n        sender.voted = true;\n        sender.vote = toProposal;\n        proposals[toProposal].voteCount += sender.weight;\n    }\n\n\n    function winningProposal() public constant returns (uint8 _winningProposal) {\n        uint256 winningVoteCount = 0;\n            for(uint8 prop = 0; prop < proposals.length; prop++){\n                if(proposals[prop].voteCount > winningVoteCount){\n                    winningVoteCount = proposals[prop].voteCount;  \n                    _winningProposal = prop;\n                }  \n            }\n        return _winningProposal;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"learningExamples/ballotV1.sol": {
				"Ballot": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "toVoter",
									"type": "address"
								}
							],
							"name": "register",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "winningProposal",
							"outputs": [
								{
									"name": "_winningProposal",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "toProposal",
									"type": "uint8"
								}
							],
							"name": "vote",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_numProposals",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"learningExamples/ballotV1.sol\":57:1704  contract Ballot {... */\n  mstore(0x40, 0x80)\n    /* \"learningExamples/ballotV1.sol\":489:652  constructor(uint8 _numProposals) public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"learningExamples/ballotV1.sol\":489:652  constructor(uint8 _numProposals) public {... */\n  pop\n  mload(0x40)\n  0x20\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  dup1\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"learningExamples/ballotV1.sol\":553:563  msg.sender */\n  caller\n    /* \"learningExamples/ballotV1.sol\":539:550  chairperson */\n  0x0\n  dup1\n    /* \"learningExamples/ballotV1.sol\":539:563  chairperson = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"learningExamples/ballotV1.sol\":602:603  2 */\n  0x2\n    /* \"learningExamples/ballotV1.sol\":573:579  voters */\n  0x1\n    /* \"learningExamples/ballotV1.sol\":573:592  voters[chairperson] */\n  0x0\n    /* \"learningExamples/ballotV1.sol\":580:591  chairperson */\n  dup1\n  0x0\n  swap1\n  sload\n  swap1\n  0x100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"learningExamples/ballotV1.sol\":573:592  voters[chairperson] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n    /* \"learningExamples/ballotV1.sol\":573:599  voters[chairperson].weight */\n  0x0\n  add\n    /* \"learningExamples/ballotV1.sol\":573:603  voters[chairperson].weight = 2 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"learningExamples/ballotV1.sol\":632:645  _numProposals */\n  dup1\n    /* \"learningExamples/ballotV1.sol\":613:645  proposals.length = _numProposals */\n  0xff\n  and\n    /* \"learningExamples/ballotV1.sol\":613:622  proposals */\n  0x2\n    /* \"learningExamples/ballotV1.sol\":613:645  proposals.length = _numProposals */\n  dup2\n  tag_4\n  swap2\n  swap1\n  jump\t// in(tag_5)\ntag_4:\n  pop\n    /* \"learningExamples/ballotV1.sol\":489:652  constructor(uint8 _numProposals) public {... */\n  pop\n    /* \"learningExamples/ballotV1.sol\":57:1704  contract Ballot {... */\n  jump(tag_6)\ntag_5:\n  dup2\n  sload\n  dup2\n  dup4\n  sstore\n  dup2\n  dup2\n  gt\n  iszero\n  tag_7\n  jumpi\n  dup2\n  dup4\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap2\n  dup3\n  add\n  swap2\n  add\n  tag_8\n  swap2\n  swap1\n  jump\t// in(tag_9)\ntag_8:\ntag_7:\n  pop\n  pop\n  pop\n  jump\t// out\ntag_9:\n  tag_10\n  swap2\n  swap1\ntag_11:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_12\n  jumpi\n  0x0\n  dup1\n  dup3\n  add\n  0x0\n  swap1\n  sstore\n  pop\n  0x1\n  add\n  jump(tag_11)\ntag_12:\n  pop\n  swap1\n  jump\ntag_10:\n  swap1\n  jump\t// out\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"learningExamples/ballotV1.sol\":57:1704  contract Ballot {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x4420e486\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x609ff1bd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb3f98adc\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"learningExamples/ballotV1.sol\":694:922  function register(address toVoter) public {... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_5:\n        /* \"learningExamples/ballotV1.sol\":694:922  function register(address toVoter) public {... */\n      pop\n      tag_6\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_7)\n    tag_6:\n      stop\n        /* \"learningExamples/ballotV1.sol\":1269:1702  function winningProposal() public constant returns (uint8 _winningProposal) {... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_8:\n        /* \"learningExamples/ballotV1.sol\":1269:1702  function winningProposal() public constant returns (uint8 _winningProposal) {... */\n      pop\n      tag_9\n      jump(tag_10)\n    tag_9:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"learningExamples/ballotV1.sol\":965:1262  function vote(uint8 toProposal) public {... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_11:\n        /* \"learningExamples/ballotV1.sol\":965:1262  function vote(uint8 toProposal) public {... */\n      pop\n      tag_12\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_13)\n    tag_12:\n      stop\n        /* \"learningExamples/ballotV1.sol\":694:922  function register(address toVoter) public {... */\n    tag_7:\n        /* \"learningExamples/ballotV1.sol\":763:774  chairperson */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"learningExamples/ballotV1.sol\":749:774  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"learningExamples/ballotV1.sol\":749:759  msg.sender */\n      caller\n        /* \"learningExamples/ballotV1.sol\":749:774  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"learningExamples/ballotV1.sol\":749:799  msg.sender != chairperson || voters[toVoter].voted */\n      dup1\n      tag_15\n      jumpi\n      pop\n        /* \"learningExamples/ballotV1.sol\":778:784  voters */\n      0x1\n        /* \"learningExamples/ballotV1.sol\":778:793  voters[toVoter] */\n      0x0\n        /* \"learningExamples/ballotV1.sol\":785:792  toVoter */\n      dup3\n        /* \"learningExamples/ballotV1.sol\":778:793  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"learningExamples/ballotV1.sol\":778:799  voters[toVoter].voted */\n      0x1\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"learningExamples/ballotV1.sol\":749:799  msg.sender != chairperson || voters[toVoter].voted */\n    tag_15:\n        /* \"learningExamples/ballotV1.sol\":746:841  if(msg.sender != chairperson || voters[toVoter].voted) //   Only chairman!!... */\n      iszero\n      tag_16\n      jumpi\n        /* \"learningExamples/ballotV1.sol\":834:841  return; */\n      jump(tag_14)\n        /* \"learningExamples/ballotV1.sol\":746:841  if(msg.sender != chairperson || voters[toVoter].voted) //   Only chairman!!... */\n    tag_16:\n        /* \"learningExamples/ballotV1.sol\":875:876  1 */\n      0x1\n        /* \"learningExamples/ballotV1.sol\":850:856  voters */\n      dup1\n        /* \"learningExamples/ballotV1.sol\":850:865  voters[toVoter] */\n      0x0\n        /* \"learningExamples/ballotV1.sol\":857:864  toVoter */\n      dup4\n        /* \"learningExamples/ballotV1.sol\":850:865  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"learningExamples/ballotV1.sol\":850:872  voters[toVoter].weight */\n      0x0\n      add\n        /* \"learningExamples/ballotV1.sol\":850:876  voters[toVoter].weight = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"learningExamples/ballotV1.sol\":910:915  false */\n      0x0\n        /* \"learningExamples/ballotV1.sol\":886:892  voters */\n      0x1\n        /* \"learningExamples/ballotV1.sol\":886:901  voters[toVoter] */\n      0x0\n        /* \"learningExamples/ballotV1.sol\":893:900  toVoter */\n      dup4\n        /* \"learningExamples/ballotV1.sol\":886:901  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"learningExamples/ballotV1.sol\":886:907  voters[toVoter].voted */\n      0x1\n      add\n      0x0\n        /* \"learningExamples/ballotV1.sol\":886:915  voters[toVoter].voted = false */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"learningExamples/ballotV1.sol\":694:922  function register(address toVoter) public {... */\n    tag_14:\n      pop\n      jump\t// out\n        /* \"learningExamples/ballotV1.sol\":1269:1702  function winningProposal() public constant returns (uint8 _winningProposal) {... */\n    tag_10:\n        /* \"learningExamples/ballotV1.sol\":1321:1343  uint8 _winningProposal */\n      0x0\n        /* \"learningExamples/ballotV1.sol\":1355:1379  uint256 winningVoteCount */\n      dup1\n        /* \"learningExamples/ballotV1.sol\":1401:1411  uint8 prop */\n      0x0\n        /* \"learningExamples/ballotV1.sol\":1382:1383  0 */\n      dup1\n        /* \"learningExamples/ballotV1.sol\":1355:1383  uint256 winningVoteCount = 0 */\n      swap2\n      pop\n        /* \"learningExamples/ballotV1.sol\":1414:1415  0 */\n      0x0\n        /* \"learningExamples/ballotV1.sol\":1401:1415  uint8 prop = 0 */\n      swap1\n      pop\n        /* \"learningExamples/ballotV1.sol\":1397:1663  for(uint8 prop = 0; prop < proposals.length; prop++){... */\n    tag_18:\n        /* \"learningExamples/ballotV1.sol\":1424:1433  proposals */\n      0x2\n        /* \"learningExamples/ballotV1.sol\":1424:1440  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"learningExamples/ballotV1.sol\":1417:1421  prop */\n      dup2\n        /* \"learningExamples/ballotV1.sol\":1417:1440  prop < proposals.length */\n      0xff\n      and\n      lt\n        /* \"learningExamples/ballotV1.sol\":1397:1663  for(uint8 prop = 0; prop < proposals.length; prop++){... */\n      iszero\n      tag_19\n      jumpi\n        /* \"learningExamples/ballotV1.sol\":1498:1514  winningVoteCount */\n      dup2\n        /* \"learningExamples/ballotV1.sol\":1470:1479  proposals */\n      0x2\n        /* \"learningExamples/ballotV1.sol\":1480:1484  prop */\n      dup3\n        /* \"learningExamples/ballotV1.sol\":1470:1485  proposals[prop] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_21\n      jumpi\n      invalid\n    tag_21:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n        /* \"learningExamples/ballotV1.sol\":1470:1495  proposals[prop].voteCount */\n      0x0\n      add\n      sload\n        /* \"learningExamples/ballotV1.sol\":1470:1514  proposals[prop].voteCount > winningVoteCount */\n      gt\n        /* \"learningExamples/ballotV1.sol\":1467:1647  if(proposals[prop].voteCount > winningVoteCount){... */\n      iszero\n      tag_23\n      jumpi\n        /* \"learningExamples/ballotV1.sol\":1556:1565  proposals */\n      0x2\n        /* \"learningExamples/ballotV1.sol\":1566:1570  prop */\n      dup2\n        /* \"learningExamples/ballotV1.sol\":1556:1571  proposals[prop] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_24\n      jumpi\n      invalid\n    tag_24:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n        /* \"learningExamples/ballotV1.sol\":1556:1581  proposals[prop].voteCount */\n      0x0\n      add\n      sload\n        /* \"learningExamples/ballotV1.sol\":1537:1581  winningVoteCount = proposals[prop].voteCount */\n      swap2\n      pop\n        /* \"learningExamples/ballotV1.sol\":1624:1628  prop */\n      dup1\n        /* \"learningExamples/ballotV1.sol\":1605:1628  _winningProposal = prop */\n      swap3\n      pop\n        /* \"learningExamples/ballotV1.sol\":1467:1647  if(proposals[prop].voteCount > winningVoteCount){... */\n    tag_23:\n        /* \"learningExamples/ballotV1.sol\":1442:1448  prop++ */\n      dup1\n      dup1\n      0x1\n      add\n      swap2\n      pop\n      pop\n        /* \"learningExamples/ballotV1.sol\":1397:1663  for(uint8 prop = 0; prop < proposals.length; prop++){... */\n      jump(tag_18)\n    tag_19:\n        /* \"learningExamples/ballotV1.sol\":1679:1695  _winningProposal */\n      dup3\n        /* \"learningExamples/ballotV1.sol\":1672:1695  return _winningProposal */\n      swap3\n      pop\n        /* \"learningExamples/ballotV1.sol\":1269:1702  function winningProposal() public constant returns (uint8 _winningProposal) {... */\n      pop\n      pop\n      swap1\n      jump\t// out\n        /* \"learningExamples/ballotV1.sol\":965:1262  function vote(uint8 toProposal) public {... */\n    tag_13:\n        /* \"learningExamples/ballotV1.sol\":1014:1034  Voter storage sender */\n      0x0\n        /* \"learningExamples/ballotV1.sol\":1037:1043  voters */\n      0x1\n        /* \"learningExamples/ballotV1.sol\":1037:1055  voters[msg.sender] */\n      0x0\n        /* \"learningExamples/ballotV1.sol\":1044:1054  msg.sender */\n      caller\n        /* \"learningExamples/ballotV1.sol\":1037:1055  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"learningExamples/ballotV1.sol\":1014:1055  Voter storage sender = voters[msg.sender] */\n      swap1\n      pop\n        /* \"learningExamples/ballotV1.sol\":1068:1074  sender */\n      dup1\n        /* \"learningExamples/ballotV1.sol\":1068:1080  sender.voted */\n      0x1\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"learningExamples/ballotV1.sol\":1068:1114  sender.voted || toProposal >= proposals.length */\n      dup1\n      tag_27\n      jumpi\n      pop\n        /* \"learningExamples/ballotV1.sol\":1098:1107  proposals */\n      0x2\n        /* \"learningExamples/ballotV1.sol\":1098:1114  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"learningExamples/ballotV1.sol\":1084:1094  toProposal */\n      dup3\n        /* \"learningExamples/ballotV1.sol\":1084:1114  toProposal >= proposals.length */\n      0xff\n      and\n      lt\n      iszero\n        /* \"learningExamples/ballotV1.sol\":1068:1114  sender.voted || toProposal >= proposals.length */\n    tag_27:\n        /* \"learningExamples/ballotV1.sol\":1065:1135  if(sender.voted || toProposal >= proposals.length)... */\n      iszero\n      tag_28\n      jumpi\n        /* \"learningExamples/ballotV1.sol\":1128:1135  return; */\n      jump(tag_26)\n        /* \"learningExamples/ballotV1.sol\":1065:1135  if(sender.voted || toProposal >= proposals.length)... */\n    tag_28:\n        /* \"learningExamples/ballotV1.sol\":1159:1163  true */\n      0x1\n        /* \"learningExamples/ballotV1.sol\":1144:1150  sender */\n      dup2\n        /* \"learningExamples/ballotV1.sol\":1144:1156  sender.voted */\n      0x1\n      add\n      0x0\n        /* \"learningExamples/ballotV1.sol\":1144:1163  sender.voted = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"learningExamples/ballotV1.sol\":1187:1197  toProposal */\n      dup2\n        /* \"learningExamples/ballotV1.sol\":1173:1179  sender */\n      dup2\n        /* \"learningExamples/ballotV1.sol\":1173:1184  sender.vote */\n      0x1\n      add\n      0x1\n        /* \"learningExamples/ballotV1.sol\":1173:1197  sender.vote = toProposal */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"learningExamples/ballotV1.sol\":1242:1248  sender */\n      dup1\n        /* \"learningExamples/ballotV1.sol\":1242:1255  sender.weight */\n      0x0\n      add\n      sload\n        /* \"learningExamples/ballotV1.sol\":1207:1216  proposals */\n      0x2\n        /* \"learningExamples/ballotV1.sol\":1217:1227  toProposal */\n      dup4\n        /* \"learningExamples/ballotV1.sol\":1207:1228  proposals[toProposal] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_29\n      jumpi\n      invalid\n    tag_29:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n        /* \"learningExamples/ballotV1.sol\":1207:1238  proposals[toProposal].voteCount */\n      0x0\n      add\n      0x0\n        /* \"learningExamples/ballotV1.sol\":1207:1255  proposals[toProposal].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"learningExamples/ballotV1.sol\":965:1262  function vote(uint8 toProposal) public {... */\n    tag_26:\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058201d1b0c643d6f0575acbf091f18eebad0e93e089e7afd7103a07fa292649f7ff00029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405160208061053b83398101806040528101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600160008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055508060ff166002816100ed91906100f4565b5050610147565b81548183558181111561011b5781836000526020600020918201910161011a9190610120565b5b505050565b61014491905b808211156101405760008082016000905550600101610126565b5090565b90565b6103e5806101566000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634420e4861461005c578063609ff1bd1461009f578063b3f98adc146100d0575b600080fd5b34801561006857600080fd5b5061009d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610100565b005b3480156100ab57600080fd5b506100b4610258565b604051808260ff1660ff16815260200191505060405180910390f35b3480156100dc57600080fd5b506100fe600480360381019080803560ff1690602001909291905050506102d7565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806101a85750600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b156101b257610255565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083151502179055505b50565b6000806000809150600090505b6002805490508160ff1610156102cf578160028260ff1681548110151561028857fe5b906000526020600020016000015411156102c25760028160ff168154811015156102ae57fe5b906000526020600020016000015491508092505b8080600101915050610265565b829250505090565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff168061033f57506002805490508260ff1610155b15610349576103b5565b60018160010160006101000a81548160ff021916908315150217905550818160010160016101000a81548160ff021916908360ff160217905550806000015460028360ff1681548110151561039a57fe5b90600052602060002001600001600082825401925050819055505b50505600a165627a7a723058201d1b0c643d6f0575acbf091f18eebad0e93e089e7afd7103a07fa292649f7ff00029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x53B DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 PUSH2 0xED SWAP2 SWAP1 PUSH2 0xF4 JUMP JUMPDEST POP POP PUSH2 0x147 JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x11B JUMPI DUP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x120 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x144 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x126 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x3E5 DUP1 PUSH2 0x156 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x4420E486 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x100 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB4 PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2D7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x1A8 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1B2 JUMPI PUSH2 0x255 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x2CF JUMPI DUP2 PUSH1 0x2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x288 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x2 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2AE JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x265 JUMP JUMPDEST DUP3 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x33F JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x349 JUMPI PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD SLOAD PUSH1 0x2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x39A JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SAR SHL 0xc PUSH5 0x3D6F0575AC 0xbf MULMOD 0x1f XOR 0xee 0xba 0xd0 0xe9 RETURNDATACOPY ADDMOD SWAP15 PUSH27 0xFD7103A07FA292649F7FF000290000000000000000000000000000 ",
							"sourceMap": "57:1647:0:-;;;489:163;8:9:-1;5:2;;;30:1;27;20:12;5:2;489:163:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;553:10;539:11;;:24;;;;;;;;;;;;;;;;;;602:1;573:6;:19;580:11;;;;;;;;;;;573:19;;;;;;;;;;;;;;;:26;;:30;;;;632:13;613:32;;:9;:32;;;;;:::i;:::-;;489:163;57:1647;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634420e4861461005c578063609ff1bd1461009f578063b3f98adc146100d0575b600080fd5b34801561006857600080fd5b5061009d600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610100565b005b3480156100ab57600080fd5b506100b4610258565b604051808260ff1660ff16815260200191505060405180910390f35b3480156100dc57600080fd5b506100fe600480360381019080803560ff1690602001909291905050506102d7565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806101a85750600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b156101b257610255565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff0219169083151502179055505b50565b6000806000809150600090505b6002805490508160ff1610156102cf578160028260ff1681548110151561028857fe5b906000526020600020016000015411156102c25760028160ff168154811015156102ae57fe5b906000526020600020016000015491508092505b8080600101915050610265565b829250505090565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff168061033f57506002805490508260ff1610155b15610349576103b5565b60018160010160006101000a81548160ff021916908315150217905550818160010160016101000a81548160ff021916908360ff160217905550806000015460028360ff1681548110151561039a57fe5b90600052602060002001600001600082825401925050819055505b50505600a165627a7a723058201d1b0c643d6f0575acbf091f18eebad0e93e089e7afd7103a07fa292649f7ff00029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x4420E486 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0xD0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x100 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB4 PUSH2 0x258 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2D7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x1A8 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1B2 JUMPI PUSH2 0x255 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x2CF JUMPI DUP2 PUSH1 0x2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x288 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x2C2 JUMPI PUSH1 0x2 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x2AE JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x265 JUMP JUMPDEST DUP3 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x33F JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x349 JUMPI PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD SLOAD PUSH1 0x2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x39A JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SAR SHL 0xc PUSH5 0x3D6F0575AC 0xbf MULMOD 0x1f XOR 0xee 0xba 0xd0 0xe9 RETURNDATACOPY ADDMOD SWAP15 PUSH27 0xFD7103A07FA292649F7FF000290000000000000000000000000000 ",
							"sourceMap": "57:1647:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;694:228;;8:9:-1;5:2;;;30:1;27;20:12;5:2;694:228:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1269:433;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1269:433:0;;;;;;;;;;;;;;;;;;;;;;;;;;;965:297;;8:9:-1;5:2;;;30:1;27;20:12;5:2;965:297:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;694:228;763:11;;;;;;;;;;;749:25;;:10;:25;;;;:50;;;;778:6;:15;785:7;778:15;;;;;;;;;;;;;;;:21;;;;;;;;;;;;749:50;746:95;;;834:7;;746:95;875:1;850:6;:15;857:7;850:15;;;;;;;;;;;;;;;:22;;:26;;;;910:5;886:6;:15;893:7;886:15;;;;;;;;;;;;;;;:21;;;:29;;;;;;;;;;;;;;;;;;694:228;;:::o;1269:433::-;1321:22;1355:24;1401:10;1382:1;1355:28;;1414:1;1401:14;;1397:266;1424:9;:16;;;;1417:4;:23;;;1397:266;;;1498:16;1470:9;1480:4;1470:15;;;;;;;;;;;;;;;;;;;:25;;;:44;1467:180;;;1556:9;1566:4;1556:15;;;;;;;;;;;;;;;;;;;:25;;;1537:44;;1624:4;1605:23;;1467:180;1442:6;;;;;;;1397:266;;;1679:16;1672:23;;1269:433;;;:::o;965:297::-;1014:20;1037:6;:18;1044:10;1037:18;;;;;;;;;;;;;;;1014:41;;1068:6;:12;;;;;;;;;;;;:46;;;;1098:9;:16;;;;1084:10;:30;;;;1068:46;1065:70;;;1128:7;;1065:70;1159:4;1144:6;:12;;;:19;;;;;;;;;;;;;;;;;;1187:10;1173:6;:11;;;:24;;;;;;;;;;;;;;;;;;1242:6;:13;;;1207:9;1217:10;1207:21;;;;;;;;;;;;;;;;;;;:31;;;:48;;;;;;;;;;;965:297;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "199400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"register(address)": "41301",
								"vote(uint8)": "62184",
								"winningProposal()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 1704,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "MSTORE"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "POP"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "MLOAD"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "DUP1"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "PUSHSIZE"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "DUP4"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "CODECOPY"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "DUP2"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "ADD"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "DUP1"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "MSTORE"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "DUP2"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "ADD"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "SWAP1"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "DUP1"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "DUP1"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "MLOAD"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "SWAP1"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "ADD"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "SWAP1"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "SWAP3"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "SWAP2"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "SWAP1"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "POP"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "POP"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "POP"
								},
								{
									"begin": 553,
									"end": 563,
									"name": "CALLER"
								},
								{
									"begin": 539,
									"end": 550,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 539,
									"end": 550,
									"name": "DUP1"
								},
								{
									"begin": 539,
									"end": 563,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 539,
									"end": 563,
									"name": "EXP"
								},
								{
									"begin": 539,
									"end": 563,
									"name": "DUP2"
								},
								{
									"begin": 539,
									"end": 563,
									"name": "SLOAD"
								},
								{
									"begin": 539,
									"end": 563,
									"name": "DUP2"
								},
								{
									"begin": 539,
									"end": 563,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 539,
									"end": 563,
									"name": "MUL"
								},
								{
									"begin": 539,
									"end": 563,
									"name": "NOT"
								},
								{
									"begin": 539,
									"end": 563,
									"name": "AND"
								},
								{
									"begin": 539,
									"end": 563,
									"name": "SWAP1"
								},
								{
									"begin": 539,
									"end": 563,
									"name": "DUP4"
								},
								{
									"begin": 539,
									"end": 563,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 539,
									"end": 563,
									"name": "AND"
								},
								{
									"begin": 539,
									"end": 563,
									"name": "MUL"
								},
								{
									"begin": 539,
									"end": 563,
									"name": "OR"
								},
								{
									"begin": 539,
									"end": 563,
									"name": "SWAP1"
								},
								{
									"begin": 539,
									"end": 563,
									"name": "SSTORE"
								},
								{
									"begin": 539,
									"end": 563,
									"name": "POP"
								},
								{
									"begin": 602,
									"end": 603,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 573,
									"end": 579,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 573,
									"end": 592,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 580,
									"end": 591,
									"name": "DUP1"
								},
								{
									"begin": 580,
									"end": 591,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 580,
									"end": 591,
									"name": "SWAP1"
								},
								{
									"begin": 580,
									"end": 591,
									"name": "SLOAD"
								},
								{
									"begin": 580,
									"end": 591,
									"name": "SWAP1"
								},
								{
									"begin": 580,
									"end": 591,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 580,
									"end": 591,
									"name": "EXP"
								},
								{
									"begin": 580,
									"end": 591,
									"name": "SWAP1"
								},
								{
									"begin": 580,
									"end": 591,
									"name": "DIV"
								},
								{
									"begin": 580,
									"end": 591,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 580,
									"end": 591,
									"name": "AND"
								},
								{
									"begin": 573,
									"end": 592,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 573,
									"end": 592,
									"name": "AND"
								},
								{
									"begin": 573,
									"end": 592,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 573,
									"end": 592,
									"name": "AND"
								},
								{
									"begin": 573,
									"end": 592,
									"name": "DUP2"
								},
								{
									"begin": 573,
									"end": 592,
									"name": "MSTORE"
								},
								{
									"begin": 573,
									"end": 592,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 573,
									"end": 592,
									"name": "ADD"
								},
								{
									"begin": 573,
									"end": 592,
									"name": "SWAP1"
								},
								{
									"begin": 573,
									"end": 592,
									"name": "DUP2"
								},
								{
									"begin": 573,
									"end": 592,
									"name": "MSTORE"
								},
								{
									"begin": 573,
									"end": 592,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 573,
									"end": 592,
									"name": "ADD"
								},
								{
									"begin": 573,
									"end": 592,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 573,
									"end": 592,
									"name": "KECCAK256"
								},
								{
									"begin": 573,
									"end": 599,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 573,
									"end": 599,
									"name": "ADD"
								},
								{
									"begin": 573,
									"end": 603,
									"name": "DUP2"
								},
								{
									"begin": 573,
									"end": 603,
									"name": "SWAP1"
								},
								{
									"begin": 573,
									"end": 603,
									"name": "SSTORE"
								},
								{
									"begin": 573,
									"end": 603,
									"name": "POP"
								},
								{
									"begin": 632,
									"end": 645,
									"name": "DUP1"
								},
								{
									"begin": 613,
									"end": 645,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 613,
									"end": 645,
									"name": "AND"
								},
								{
									"begin": 613,
									"end": 622,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 613,
									"end": 645,
									"name": "DUP2"
								},
								{
									"begin": 613,
									"end": 645,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 613,
									"end": 645,
									"name": "SWAP2"
								},
								{
									"begin": 613,
									"end": 645,
									"name": "SWAP1"
								},
								{
									"begin": 613,
									"end": 645,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 613,
									"end": 645,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 613,
									"end": 645,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 613,
									"end": 645,
									"name": "JUMPDEST"
								},
								{
									"begin": 613,
									"end": 645,
									"name": "POP"
								},
								{
									"begin": 489,
									"end": 652,
									"name": "POP"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "JUMP"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "JUMPDEST"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "DUP2"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "SLOAD"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "DUP2"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "DUP4"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "SSTORE"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "DUP2"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "DUP2"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "GT"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "ISZERO"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "JUMPI"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "DUP2"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "DUP4"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "MSTORE"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "KECCAK256"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "SWAP2"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "DUP3"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "ADD"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "SWAP2"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "ADD"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "SWAP2"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "SWAP1"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "JUMPDEST"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "JUMPDEST"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "POP"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "POP"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "POP"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "JUMPDEST"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "SWAP2"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "SWAP1"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "JUMPDEST"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "DUP1"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "DUP3"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "GT"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "ISZERO"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "JUMPI"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "DUP1"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "DUP3"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "ADD"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "SWAP1"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "SSTORE"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "POP"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "ADD"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "JUMP"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "JUMPDEST"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "POP"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "SWAP1"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "JUMP"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "JUMPDEST"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "SWAP1"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "JUMPDEST"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "DUP1"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "CODECOPY"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 57,
									"end": 1704,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058201d1b0c643d6f0575acbf091f18eebad0e93e089e7afd7103a07fa292649f7ff00029",
									".code": [
										{
											"begin": 57,
											"end": 1704,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "MSTORE"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "LT"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "SWAP1"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "DIV"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "AND"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "PUSH",
											"value": "4420E486"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "PUSH",
											"value": "609FF1BD"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "PUSH",
											"value": "B3F98ADC"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "EQ"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "JUMPI"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "JUMPDEST"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "DUP1"
										},
										{
											"begin": 57,
											"end": 1704,
											"name": "REVERT"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "JUMPDEST"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "POP"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "DUP1"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "SUB"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "DUP2"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "ADD"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "SWAP1"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "DUP1"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "DUP1"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "AND"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "SWAP1"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "ADD"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "SWAP1"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "SWAP3"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "SWAP2"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "SWAP1"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "POP"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "POP"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "POP"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "JUMP"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "JUMPDEST"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "STOP"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "JUMPDEST"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "POP"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "JUMP"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "JUMPDEST"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "MLOAD"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "DUP1"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "DUP3"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "AND"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "AND"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "DUP2"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "MSTORE"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "ADD"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "SWAP2"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "POP"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "POP"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "MLOAD"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "DUP1"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "SWAP2"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "SUB"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "SWAP1"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "RETURN"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "JUMPDEST"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "POP"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "DUP1"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "SUB"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "DUP2"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "ADD"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "SWAP1"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "DUP1"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "DUP1"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "AND"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "SWAP1"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "ADD"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "SWAP1"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "SWAP3"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "SWAP2"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "SWAP1"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "POP"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "POP"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "POP"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "JUMP"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "JUMPDEST"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "STOP"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "JUMPDEST"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "DUP1"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "SWAP1"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "SLOAD"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "SWAP1"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "EXP"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "SWAP1"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "DIV"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 763,
											"end": 774,
											"name": "AND"
										},
										{
											"begin": 749,
											"end": 774,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 749,
											"end": 774,
											"name": "AND"
										},
										{
											"begin": 749,
											"end": 759,
											"name": "CALLER"
										},
										{
											"begin": 749,
											"end": 774,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 749,
											"end": 774,
											"name": "AND"
										},
										{
											"begin": 749,
											"end": 774,
											"name": "EQ"
										},
										{
											"begin": 749,
											"end": 774,
											"name": "ISZERO"
										},
										{
											"begin": 749,
											"end": 799,
											"name": "DUP1"
										},
										{
											"begin": 749,
											"end": 799,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 749,
											"end": 799,
											"name": "JUMPI"
										},
										{
											"begin": 749,
											"end": 799,
											"name": "POP"
										},
										{
											"begin": 778,
											"end": 784,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 785,
											"end": 792,
											"name": "DUP3"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "AND"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "AND"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "DUP2"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "MSTORE"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "ADD"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "SWAP1"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "DUP2"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "MSTORE"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "ADD"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 778,
											"end": 793,
											"name": "KECCAK256"
										},
										{
											"begin": 778,
											"end": 799,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 778,
											"end": 799,
											"name": "ADD"
										},
										{
											"begin": 778,
											"end": 799,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 778,
											"end": 799,
											"name": "SWAP1"
										},
										{
											"begin": 778,
											"end": 799,
											"name": "SLOAD"
										},
										{
											"begin": 778,
											"end": 799,
											"name": "SWAP1"
										},
										{
											"begin": 778,
											"end": 799,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 778,
											"end": 799,
											"name": "EXP"
										},
										{
											"begin": 778,
											"end": 799,
											"name": "SWAP1"
										},
										{
											"begin": 778,
											"end": 799,
											"name": "DIV"
										},
										{
											"begin": 778,
											"end": 799,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 778,
											"end": 799,
											"name": "AND"
										},
										{
											"begin": 749,
											"end": 799,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 749,
											"end": 799,
											"name": "JUMPDEST"
										},
										{
											"begin": 746,
											"end": 841,
											"name": "ISZERO"
										},
										{
											"begin": 746,
											"end": 841,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 746,
											"end": 841,
											"name": "JUMPI"
										},
										{
											"begin": 834,
											"end": 841,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 834,
											"end": 841,
											"name": "JUMP"
										},
										{
											"begin": 746,
											"end": 841,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 746,
											"end": 841,
											"name": "JUMPDEST"
										},
										{
											"begin": 875,
											"end": 876,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 850,
											"end": 856,
											"name": "DUP1"
										},
										{
											"begin": 850,
											"end": 865,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 857,
											"end": 864,
											"name": "DUP4"
										},
										{
											"begin": 850,
											"end": 865,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 850,
											"end": 865,
											"name": "AND"
										},
										{
											"begin": 850,
											"end": 865,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 850,
											"end": 865,
											"name": "AND"
										},
										{
											"begin": 850,
											"end": 865,
											"name": "DUP2"
										},
										{
											"begin": 850,
											"end": 865,
											"name": "MSTORE"
										},
										{
											"begin": 850,
											"end": 865,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 850,
											"end": 865,
											"name": "ADD"
										},
										{
											"begin": 850,
											"end": 865,
											"name": "SWAP1"
										},
										{
											"begin": 850,
											"end": 865,
											"name": "DUP2"
										},
										{
											"begin": 850,
											"end": 865,
											"name": "MSTORE"
										},
										{
											"begin": 850,
											"end": 865,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 850,
											"end": 865,
											"name": "ADD"
										},
										{
											"begin": 850,
											"end": 865,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 850,
											"end": 865,
											"name": "KECCAK256"
										},
										{
											"begin": 850,
											"end": 872,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 850,
											"end": 872,
											"name": "ADD"
										},
										{
											"begin": 850,
											"end": 876,
											"name": "DUP2"
										},
										{
											"begin": 850,
											"end": 876,
											"name": "SWAP1"
										},
										{
											"begin": 850,
											"end": 876,
											"name": "SSTORE"
										},
										{
											"begin": 850,
											"end": 876,
											"name": "POP"
										},
										{
											"begin": 910,
											"end": 915,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 886,
											"end": 892,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 886,
											"end": 901,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 893,
											"end": 900,
											"name": "DUP4"
										},
										{
											"begin": 886,
											"end": 901,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 886,
											"end": 901,
											"name": "AND"
										},
										{
											"begin": 886,
											"end": 901,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 886,
											"end": 901,
											"name": "AND"
										},
										{
											"begin": 886,
											"end": 901,
											"name": "DUP2"
										},
										{
											"begin": 886,
											"end": 901,
											"name": "MSTORE"
										},
										{
											"begin": 886,
											"end": 901,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 886,
											"end": 901,
											"name": "ADD"
										},
										{
											"begin": 886,
											"end": 901,
											"name": "SWAP1"
										},
										{
											"begin": 886,
											"end": 901,
											"name": "DUP2"
										},
										{
											"begin": 886,
											"end": 901,
											"name": "MSTORE"
										},
										{
											"begin": 886,
											"end": 901,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 886,
											"end": 901,
											"name": "ADD"
										},
										{
											"begin": 886,
											"end": 901,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 886,
											"end": 901,
											"name": "KECCAK256"
										},
										{
											"begin": 886,
											"end": 907,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 886,
											"end": 907,
											"name": "ADD"
										},
										{
											"begin": 886,
											"end": 907,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 886,
											"end": 915,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 886,
											"end": 915,
											"name": "EXP"
										},
										{
											"begin": 886,
											"end": 915,
											"name": "DUP2"
										},
										{
											"begin": 886,
											"end": 915,
											"name": "SLOAD"
										},
										{
											"begin": 886,
											"end": 915,
											"name": "DUP2"
										},
										{
											"begin": 886,
											"end": 915,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 886,
											"end": 915,
											"name": "MUL"
										},
										{
											"begin": 886,
											"end": 915,
											"name": "NOT"
										},
										{
											"begin": 886,
											"end": 915,
											"name": "AND"
										},
										{
											"begin": 886,
											"end": 915,
											"name": "SWAP1"
										},
										{
											"begin": 886,
											"end": 915,
											"name": "DUP4"
										},
										{
											"begin": 886,
											"end": 915,
											"name": "ISZERO"
										},
										{
											"begin": 886,
											"end": 915,
											"name": "ISZERO"
										},
										{
											"begin": 886,
											"end": 915,
											"name": "MUL"
										},
										{
											"begin": 886,
											"end": 915,
											"name": "OR"
										},
										{
											"begin": 886,
											"end": 915,
											"name": "SWAP1"
										},
										{
											"begin": 886,
											"end": 915,
											"name": "SSTORE"
										},
										{
											"begin": 886,
											"end": 915,
											"name": "POP"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "JUMPDEST"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "POP"
										},
										{
											"begin": 694,
											"end": 922,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "JUMPDEST"
										},
										{
											"begin": 1321,
											"end": 1343,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1355,
											"end": 1379,
											"name": "DUP1"
										},
										{
											"begin": 1401,
											"end": 1411,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1382,
											"end": 1383,
											"name": "DUP1"
										},
										{
											"begin": 1355,
											"end": 1383,
											"name": "SWAP2"
										},
										{
											"begin": 1355,
											"end": 1383,
											"name": "POP"
										},
										{
											"begin": 1414,
											"end": 1415,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 1415,
											"name": "SWAP1"
										},
										{
											"begin": 1401,
											"end": 1415,
											"name": "POP"
										},
										{
											"begin": 1397,
											"end": 1663,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1397,
											"end": 1663,
											"name": "JUMPDEST"
										},
										{
											"begin": 1424,
											"end": 1433,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1424,
											"end": 1440,
											"name": "DUP1"
										},
										{
											"begin": 1424,
											"end": 1440,
											"name": "SLOAD"
										},
										{
											"begin": 1424,
											"end": 1440,
											"name": "SWAP1"
										},
										{
											"begin": 1424,
											"end": 1440,
											"name": "POP"
										},
										{
											"begin": 1417,
											"end": 1421,
											"name": "DUP2"
										},
										{
											"begin": 1417,
											"end": 1440,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1417,
											"end": 1440,
											"name": "AND"
										},
										{
											"begin": 1417,
											"end": 1440,
											"name": "LT"
										},
										{
											"begin": 1397,
											"end": 1663,
											"name": "ISZERO"
										},
										{
											"begin": 1397,
											"end": 1663,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1397,
											"end": 1663,
											"name": "JUMPI"
										},
										{
											"begin": 1498,
											"end": 1514,
											"name": "DUP2"
										},
										{
											"begin": 1470,
											"end": 1479,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1480,
											"end": 1484,
											"name": "DUP3"
										},
										{
											"begin": 1470,
											"end": 1485,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1470,
											"end": 1485,
											"name": "AND"
										},
										{
											"begin": 1470,
											"end": 1485,
											"name": "DUP2"
										},
										{
											"begin": 1470,
											"end": 1485,
											"name": "SLOAD"
										},
										{
											"begin": 1470,
											"end": 1485,
											"name": "DUP2"
										},
										{
											"begin": 1470,
											"end": 1485,
											"name": "LT"
										},
										{
											"begin": 1470,
											"end": 1485,
											"name": "ISZERO"
										},
										{
											"begin": 1470,
											"end": 1485,
											"name": "ISZERO"
										},
										{
											"begin": 1470,
											"end": 1485,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1470,
											"end": 1485,
											"name": "JUMPI"
										},
										{
											"begin": 1470,
											"end": 1485,
											"name": "INVALID"
										},
										{
											"begin": 1470,
											"end": 1485,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1470,
											"end": 1485,
											"name": "JUMPDEST"
										},
										{
											"begin": 1470,
											"end": 1485,
											"name": "SWAP1"
										},
										{
											"begin": 1470,
											"end": 1485,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1485,
											"name": "MSTORE"
										},
										{
											"begin": 1470,
											"end": 1485,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1470,
											"end": 1485,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1485,
											"name": "KECCAK256"
										},
										{
											"begin": 1470,
											"end": 1485,
											"name": "ADD"
										},
										{
											"begin": 1470,
											"end": 1495,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1495,
											"name": "ADD"
										},
										{
											"begin": 1470,
											"end": 1495,
											"name": "SLOAD"
										},
										{
											"begin": 1470,
											"end": 1514,
											"name": "GT"
										},
										{
											"begin": 1467,
											"end": 1647,
											"name": "ISZERO"
										},
										{
											"begin": 1467,
											"end": 1647,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1467,
											"end": 1647,
											"name": "JUMPI"
										},
										{
											"begin": 1556,
											"end": 1565,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1566,
											"end": 1570,
											"name": "DUP2"
										},
										{
											"begin": 1556,
											"end": 1571,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1556,
											"end": 1571,
											"name": "AND"
										},
										{
											"begin": 1556,
											"end": 1571,
											"name": "DUP2"
										},
										{
											"begin": 1556,
											"end": 1571,
											"name": "SLOAD"
										},
										{
											"begin": 1556,
											"end": 1571,
											"name": "DUP2"
										},
										{
											"begin": 1556,
											"end": 1571,
											"name": "LT"
										},
										{
											"begin": 1556,
											"end": 1571,
											"name": "ISZERO"
										},
										{
											"begin": 1556,
											"end": 1571,
											"name": "ISZERO"
										},
										{
											"begin": 1556,
											"end": 1571,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1556,
											"end": 1571,
											"name": "JUMPI"
										},
										{
											"begin": 1556,
											"end": 1571,
											"name": "INVALID"
										},
										{
											"begin": 1556,
											"end": 1571,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1556,
											"end": 1571,
											"name": "JUMPDEST"
										},
										{
											"begin": 1556,
											"end": 1571,
											"name": "SWAP1"
										},
										{
											"begin": 1556,
											"end": 1571,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1556,
											"end": 1571,
											"name": "MSTORE"
										},
										{
											"begin": 1556,
											"end": 1571,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1556,
											"end": 1571,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1556,
											"end": 1571,
											"name": "KECCAK256"
										},
										{
											"begin": 1556,
											"end": 1571,
											"name": "ADD"
										},
										{
											"begin": 1556,
											"end": 1581,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1556,
											"end": 1581,
											"name": "ADD"
										},
										{
											"begin": 1556,
											"end": 1581,
											"name": "SLOAD"
										},
										{
											"begin": 1537,
											"end": 1581,
											"name": "SWAP2"
										},
										{
											"begin": 1537,
											"end": 1581,
											"name": "POP"
										},
										{
											"begin": 1624,
											"end": 1628,
											"name": "DUP1"
										},
										{
											"begin": 1605,
											"end": 1628,
											"name": "SWAP3"
										},
										{
											"begin": 1605,
											"end": 1628,
											"name": "POP"
										},
										{
											"begin": 1467,
											"end": 1647,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1467,
											"end": 1647,
											"name": "JUMPDEST"
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "DUP1"
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "DUP1"
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "ADD"
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "SWAP2"
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "POP"
										},
										{
											"begin": 1442,
											"end": 1448,
											"name": "POP"
										},
										{
											"begin": 1397,
											"end": 1663,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1397,
											"end": 1663,
											"name": "JUMP"
										},
										{
											"begin": 1397,
											"end": 1663,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1397,
											"end": 1663,
											"name": "JUMPDEST"
										},
										{
											"begin": 1679,
											"end": 1695,
											"name": "DUP3"
										},
										{
											"begin": 1672,
											"end": 1695,
											"name": "SWAP3"
										},
										{
											"begin": 1672,
											"end": 1695,
											"name": "POP"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "POP"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "POP"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "SWAP1"
										},
										{
											"begin": 1269,
											"end": 1702,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "JUMPDEST"
										},
										{
											"begin": 1014,
											"end": 1034,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1037,
											"end": 1043,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1037,
											"end": 1055,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1054,
											"name": "CALLER"
										},
										{
											"begin": 1037,
											"end": 1055,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1037,
											"end": 1055,
											"name": "AND"
										},
										{
											"begin": 1037,
											"end": 1055,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1037,
											"end": 1055,
											"name": "AND"
										},
										{
											"begin": 1037,
											"end": 1055,
											"name": "DUP2"
										},
										{
											"begin": 1037,
											"end": 1055,
											"name": "MSTORE"
										},
										{
											"begin": 1037,
											"end": 1055,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1055,
											"name": "ADD"
										},
										{
											"begin": 1037,
											"end": 1055,
											"name": "SWAP1"
										},
										{
											"begin": 1037,
											"end": 1055,
											"name": "DUP2"
										},
										{
											"begin": 1037,
											"end": 1055,
											"name": "MSTORE"
										},
										{
											"begin": 1037,
											"end": 1055,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1055,
											"name": "ADD"
										},
										{
											"begin": 1037,
											"end": 1055,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1037,
											"end": 1055,
											"name": "KECCAK256"
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "SWAP1"
										},
										{
											"begin": 1014,
											"end": 1055,
											"name": "POP"
										},
										{
											"begin": 1068,
											"end": 1074,
											"name": "DUP1"
										},
										{
											"begin": 1068,
											"end": 1080,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1068,
											"end": 1080,
											"name": "ADD"
										},
										{
											"begin": 1068,
											"end": 1080,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1080,
											"name": "SWAP1"
										},
										{
											"begin": 1068,
											"end": 1080,
											"name": "SLOAD"
										},
										{
											"begin": 1068,
											"end": 1080,
											"name": "SWAP1"
										},
										{
											"begin": 1068,
											"end": 1080,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1068,
											"end": 1080,
											"name": "EXP"
										},
										{
											"begin": 1068,
											"end": 1080,
											"name": "SWAP1"
										},
										{
											"begin": 1068,
											"end": 1080,
											"name": "DIV"
										},
										{
											"begin": 1068,
											"end": 1080,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1068,
											"end": 1080,
											"name": "AND"
										},
										{
											"begin": 1068,
											"end": 1114,
											"name": "DUP1"
										},
										{
											"begin": 1068,
											"end": 1114,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1068,
											"end": 1114,
											"name": "JUMPI"
										},
										{
											"begin": 1068,
											"end": 1114,
											"name": "POP"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1098,
											"end": 1114,
											"name": "DUP1"
										},
										{
											"begin": 1098,
											"end": 1114,
											"name": "SLOAD"
										},
										{
											"begin": 1098,
											"end": 1114,
											"name": "SWAP1"
										},
										{
											"begin": 1098,
											"end": 1114,
											"name": "POP"
										},
										{
											"begin": 1084,
											"end": 1094,
											"name": "DUP3"
										},
										{
											"begin": 1084,
											"end": 1114,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1084,
											"end": 1114,
											"name": "AND"
										},
										{
											"begin": 1084,
											"end": 1114,
											"name": "LT"
										},
										{
											"begin": 1084,
											"end": 1114,
											"name": "ISZERO"
										},
										{
											"begin": 1068,
											"end": 1114,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1068,
											"end": 1114,
											"name": "JUMPDEST"
										},
										{
											"begin": 1065,
											"end": 1135,
											"name": "ISZERO"
										},
										{
											"begin": 1065,
											"end": 1135,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1065,
											"end": 1135,
											"name": "JUMPI"
										},
										{
											"begin": 1128,
											"end": 1135,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 1128,
											"end": 1135,
											"name": "JUMP"
										},
										{
											"begin": 1065,
											"end": 1135,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1065,
											"end": 1135,
											"name": "JUMPDEST"
										},
										{
											"begin": 1159,
											"end": 1163,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1144,
											"end": 1150,
											"name": "DUP2"
										},
										{
											"begin": 1144,
											"end": 1156,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1144,
											"end": 1156,
											"name": "ADD"
										},
										{
											"begin": 1144,
											"end": 1156,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1163,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1144,
											"end": 1163,
											"name": "EXP"
										},
										{
											"begin": 1144,
											"end": 1163,
											"name": "DUP2"
										},
										{
											"begin": 1144,
											"end": 1163,
											"name": "SLOAD"
										},
										{
											"begin": 1144,
											"end": 1163,
											"name": "DUP2"
										},
										{
											"begin": 1144,
											"end": 1163,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1144,
											"end": 1163,
											"name": "MUL"
										},
										{
											"begin": 1144,
											"end": 1163,
											"name": "NOT"
										},
										{
											"begin": 1144,
											"end": 1163,
											"name": "AND"
										},
										{
											"begin": 1144,
											"end": 1163,
											"name": "SWAP1"
										},
										{
											"begin": 1144,
											"end": 1163,
											"name": "DUP4"
										},
										{
											"begin": 1144,
											"end": 1163,
											"name": "ISZERO"
										},
										{
											"begin": 1144,
											"end": 1163,
											"name": "ISZERO"
										},
										{
											"begin": 1144,
											"end": 1163,
											"name": "MUL"
										},
										{
											"begin": 1144,
											"end": 1163,
											"name": "OR"
										},
										{
											"begin": 1144,
											"end": 1163,
											"name": "SWAP1"
										},
										{
											"begin": 1144,
											"end": 1163,
											"name": "SSTORE"
										},
										{
											"begin": 1144,
											"end": 1163,
											"name": "POP"
										},
										{
											"begin": 1187,
											"end": 1197,
											"name": "DUP2"
										},
										{
											"begin": 1173,
											"end": 1179,
											"name": "DUP2"
										},
										{
											"begin": 1173,
											"end": 1184,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1173,
											"end": 1184,
											"name": "ADD"
										},
										{
											"begin": 1173,
											"end": 1184,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1173,
											"end": 1197,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1173,
											"end": 1197,
											"name": "EXP"
										},
										{
											"begin": 1173,
											"end": 1197,
											"name": "DUP2"
										},
										{
											"begin": 1173,
											"end": 1197,
											"name": "SLOAD"
										},
										{
											"begin": 1173,
											"end": 1197,
											"name": "DUP2"
										},
										{
											"begin": 1173,
											"end": 1197,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1173,
											"end": 1197,
											"name": "MUL"
										},
										{
											"begin": 1173,
											"end": 1197,
											"name": "NOT"
										},
										{
											"begin": 1173,
											"end": 1197,
											"name": "AND"
										},
										{
											"begin": 1173,
											"end": 1197,
											"name": "SWAP1"
										},
										{
											"begin": 1173,
											"end": 1197,
											"name": "DUP4"
										},
										{
											"begin": 1173,
											"end": 1197,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1173,
											"end": 1197,
											"name": "AND"
										},
										{
											"begin": 1173,
											"end": 1197,
											"name": "MUL"
										},
										{
											"begin": 1173,
											"end": 1197,
											"name": "OR"
										},
										{
											"begin": 1173,
											"end": 1197,
											"name": "SWAP1"
										},
										{
											"begin": 1173,
											"end": 1197,
											"name": "SSTORE"
										},
										{
											"begin": 1173,
											"end": 1197,
											"name": "POP"
										},
										{
											"begin": 1242,
											"end": 1248,
											"name": "DUP1"
										},
										{
											"begin": 1242,
											"end": 1255,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1255,
											"name": "ADD"
										},
										{
											"begin": 1242,
											"end": 1255,
											"name": "SLOAD"
										},
										{
											"begin": 1207,
											"end": 1216,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1217,
											"end": 1227,
											"name": "DUP4"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "AND"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "DUP2"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "SLOAD"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "DUP2"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "LT"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "ISZERO"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "ISZERO"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "JUMPI"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "INVALID"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "JUMPDEST"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "SWAP1"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "MSTORE"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "KECCAK256"
										},
										{
											"begin": 1207,
											"end": 1228,
											"name": "ADD"
										},
										{
											"begin": 1207,
											"end": 1238,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1238,
											"name": "ADD"
										},
										{
											"begin": 1207,
											"end": 1238,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1255,
											"name": "DUP3"
										},
										{
											"begin": 1207,
											"end": 1255,
											"name": "DUP3"
										},
										{
											"begin": 1207,
											"end": 1255,
											"name": "SLOAD"
										},
										{
											"begin": 1207,
											"end": 1255,
											"name": "ADD"
										},
										{
											"begin": 1207,
											"end": 1255,
											"name": "SWAP3"
										},
										{
											"begin": 1207,
											"end": 1255,
											"name": "POP"
										},
										{
											"begin": 1207,
											"end": 1255,
											"name": "POP"
										},
										{
											"begin": 1207,
											"end": 1255,
											"name": "DUP2"
										},
										{
											"begin": 1207,
											"end": 1255,
											"name": "SWAP1"
										},
										{
											"begin": 1207,
											"end": 1255,
											"name": "SSTORE"
										},
										{
											"begin": 1207,
											"end": 1255,
											"name": "POP"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "JUMPDEST"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "POP"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "POP"
										},
										{
											"begin": 965,
											"end": 1262,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"register(address)": "4420e486",
							"vote(uint8)": "b3f98adc",
							"winningProposal()": "609ff1bd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"toVoter\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winningProposal\",\"outputs\":[{\"name\":\"_winningProposal\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toProposal\",\"type\":\"uint8\"}],\"name\":\"vote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_numProposals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"learningExamples/ballotV1.sol\":\"Ballot\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"learningExamples/ballotV1.sol\":{\"keccak256\":\"0xb47afffd186f4fabbe2c7211ae01193914a338c9089151b16f1b5f3fd97950dd\",\"urls\":[\"bzzr://0cfcc1c0381d8cac80dd479f14b115f04e37f4d156a901293294a6f54bfd87b8\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"learningExamples/ballotV1.sol": {
				"ast": {
					"absolutePath": "learningExamples/ballotV1.sol",
					"exportedSymbols": {
						"Ballot": [
							162
						]
					},
					"id": 163,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 162,
							"linearizedBaseContracts": [
								162
							],
							"name": "Ballot",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Ballot.Voter",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "weight",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "129:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "129:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "voted",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "171:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 4,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "171:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"name": "vote",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "191:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 6,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "191:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nodeType": "StructDefinition",
									"scope": 162,
									"src": "106:102:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Proposal",
									"id": 11,
									"members": [
										{
											"constant": false,
											"id": 10,
											"name": "voteCount",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "266:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "266:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nodeType": "StructDefinition",
									"scope": 162,
									"src": "241:46:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 13,
									"name": "chairperson",
									"nodeType": "VariableDeclaration",
									"scope": 162,
									"src": "298:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 12,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "298:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 17,
									"name": "voters",
									"nodeType": "VariableDeclaration",
									"scope": 162,
									"src": "340:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
										"typeString": "mapping(address => struct Ballot.Voter)"
									},
									"typeName": {
										"id": 16,
										"keyType": {
											"id": 14,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "348:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "340:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
											"typeString": "mapping(address => struct Ballot.Voter)"
										},
										"valueType": {
											"contractScope": null,
											"id": 15,
											"name": "Voter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 8,
											"src": "359:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
												"typeString": "struct Ballot.Voter"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 20,
									"name": "proposals",
									"nodeType": "VariableDeclaration",
									"scope": 162,
									"src": "407:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
										"typeString": "struct Ballot.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 18,
											"name": "Proposal",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 11,
											"src": "407:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$11_storage_ptr",
												"typeString": "struct Ballot.Proposal"
											}
										},
										"id": 19,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "407:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage_ptr",
											"typeString": "struct Ballot.Proposal[]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "529:123:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 25,
														"name": "chairperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "539:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 26,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "553:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "553:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "539:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "539:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 30,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "573:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 32,
															"indexExpression": {
																"argumentTypes": null,
																"id": 31,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "580:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "573:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 33,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "573:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "602:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "573:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "573:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 37,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "613:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 39,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "613:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 40,
														"name": "_numProposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "632:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "613:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "613:32:0"
											}
										]
									},
									"documentation": null,
									"id": 44,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"name": "_numProposals",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "501:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 21,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "501:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "500:21:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "529:0:0"
									},
									"scope": 162,
									"src": "489:163:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "736:186:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 49,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 177,
																"src": "749:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "749:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 51,
															"name": "chairperson",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "763:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "749:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 53,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "778:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 55,
															"indexExpression": {
																"argumentTypes": null,
																"id": 54,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "785:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "778:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "778:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "749:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 59,
												"nodeType": "IfStatement",
												"src": "746:95:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 48,
													"id": 58,
													"nodeType": "Return",
													"src": "834:7:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 60,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "850:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 62,
															"indexExpression": {
																"argumentTypes": null,
																"id": 61,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "857:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "850:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 63,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "850:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "875:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "850:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "850:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 67,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "886:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 69,
															"indexExpression": {
																"argumentTypes": null,
																"id": 68,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "893:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "886:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 70,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "886:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "910:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "886:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "886:29:0"
											}
										]
									},
									"documentation": null,
									"id": 75,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "register",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"name": "toVoter",
												"nodeType": "VariableDeclaration",
												"scope": 75,
												"src": "712:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "712:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "711:17:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "736:0:0"
									},
									"scope": 162,
									"src": "694:228:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "1004:258:0",
										"statements": [
											{
												"assignments": [
													81
												],
												"declarations": [
													{
														"constant": false,
														"id": 81,
														"name": "sender",
														"nodeType": "VariableDeclaration",
														"scope": 117,
														"src": "1014:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"contractScope": null,
															"id": 80,
															"name": "Voter",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 8,
															"src": "1014:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 86,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 82,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1037:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 85,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 83,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "1044:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1044:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1037:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$8_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1014:41:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 87,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "1068:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 88,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1068:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 92,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 89,
															"name": "toProposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "1084:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 90,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "1098:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 91,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1098:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1084:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1068:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 95,
												"nodeType": "IfStatement",
												"src": "1065:70:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 79,
													"id": 94,
													"nodeType": "Return",
													"src": "1128:7:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 96,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "1144:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 98,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1144:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1159:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1144:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "1144:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 102,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "1173:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "vote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "1173:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 105,
														"name": "toProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "1187:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1173:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1173:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 108,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "1207:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 110,
															"indexExpression": {
																"argumentTypes": null,
																"id": 109,
																"name": "toProposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1217:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1207:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$11_storage",
																"typeString": "struct Ballot.Proposal storage ref"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voteCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "1207:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 112,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "1242:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 113,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1242:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1207:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 115,
												"nodeType": "ExpressionStatement",
												"src": "1207:48:0"
											}
										]
									},
									"documentation": null,
									"id": 117,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "vote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"name": "toProposal",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "979:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 76,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "979:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "978:18:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1004:0:0"
									},
									"scope": 162,
									"src": "965:297:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "1345:357:0",
										"statements": [
											{
												"assignments": [
													123
												],
												"declarations": [
													{
														"constant": false,
														"id": 123,
														"name": "winningVoteCount",
														"nodeType": "VariableDeclaration",
														"scope": 161,
														"src": "1355:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 122,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1355:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 125,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1382:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1355:28:0"
											},
											{
												"body": {
													"id": 156,
													"nodeType": "Block",
													"src": "1449:214:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 137,
																			"name": "proposals",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 20,
																			"src": "1470:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																				"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																			}
																		},
																		"id": 139,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 138,
																			"name": "prop",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 127,
																			"src": "1480:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1470:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$11_storage",
																			"typeString": "struct Ballot.Proposal storage ref"
																		}
																	},
																	"id": 140,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "voteCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 10,
																	"src": "1470:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 141,
																	"name": "winningVoteCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 123,
																	"src": "1498:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1470:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 155,
															"nodeType": "IfStatement",
															"src": "1467:180:0",
															"trueBody": {
																"id": 154,
																"nodeType": "Block",
																"src": "1515:132:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 143,
																				"name": "winningVoteCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 123,
																				"src": "1537:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 144,
																						"name": "proposals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 20,
																						"src": "1556:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																							"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																						}
																					},
																					"id": 146,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 145,
																						"name": "prop",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 127,
																						"src": "1566:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "1556:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Proposal_$11_storage",
																						"typeString": "struct Ballot.Proposal storage ref"
																					}
																				},
																				"id": 147,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "voteCount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 10,
																				"src": "1556:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1537:44:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 149,
																		"nodeType": "ExpressionStatement",
																		"src": "1537:44:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 150,
																				"name": "_winningProposal",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 120,
																				"src": "1605:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 151,
																				"name": "prop",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 127,
																				"src": "1624:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "1605:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"id": 153,
																		"nodeType": "ExpressionStatement",
																		"src": "1605:23:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 130,
														"name": "prop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "1417:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 131,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "1424:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 132,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1424:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1417:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 157,
												"initializationExpression": {
													"assignments": [
														127
													],
													"declarations": [
														{
															"constant": false,
															"id": 127,
															"name": "prop",
															"nodeType": "VariableDeclaration",
															"scope": 161,
															"src": "1401:10:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 126,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "1401:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 129,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1414:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1401:14:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1442:6:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 134,
															"name": "prop",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "1442:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 136,
													"nodeType": "ExpressionStatement",
													"src": "1442:6:0"
												},
												"nodeType": "ForStatement",
												"src": "1397:266:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 158,
													"name": "_winningProposal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 120,
													"src": "1679:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 121,
												"id": 159,
												"nodeType": "Return",
												"src": "1672:23:0"
											}
										]
									},
									"documentation": null,
									"id": 161,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "winningProposal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1293:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"name": "_winningProposal",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1321:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 119,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1321:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1320:24:0"
									},
									"scope": 162,
									"src": "1269:433:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 163,
							"src": "57:1647:0"
						}
					],
					"src": "32:1672:0"
				},
				"id": 0
			}
		}
	}
}